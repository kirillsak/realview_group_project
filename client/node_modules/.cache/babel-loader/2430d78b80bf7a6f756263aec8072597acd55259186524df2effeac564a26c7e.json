{"ast":null,"code":"import { Engine } from \"../../Engines/engine.js\";\n/** @internal */\n// eslint-disable-next-line no-var\nexport var _forceTransformFeedbackToBundle = true;\nEngine.prototype.createTransformFeedback = function () {\n  const transformFeedback = this._gl.createTransformFeedback();\n  if (!transformFeedback) {\n    throw new Error(\"Unable to create Transform Feedback\");\n  }\n  return transformFeedback;\n};\nEngine.prototype.deleteTransformFeedback = function (value) {\n  this._gl.deleteTransformFeedback(value);\n};\nEngine.prototype.bindTransformFeedback = function (value) {\n  this._gl.bindTransformFeedback(this._gl.TRANSFORM_FEEDBACK, value);\n};\nEngine.prototype.beginTransformFeedback = function (usePoints = true) {\n  this._gl.beginTransformFeedback(usePoints ? this._gl.POINTS : this._gl.TRIANGLES);\n};\nEngine.prototype.endTransformFeedback = function () {\n  this._gl.endTransformFeedback();\n};\nEngine.prototype.setTranformFeedbackVaryings = function (program, value) {\n  this._gl.transformFeedbackVaryings(program, value, this._gl.INTERLEAVED_ATTRIBS);\n};\nEngine.prototype.bindTransformFeedbackBuffer = function (value) {\n  this._gl.bindBufferBase(this._gl.TRANSFORM_FEEDBACK_BUFFER, 0, value ? value.underlyingResource : null);\n};","map":{"version":3,"mappings":"AACA,SAASA,MAAM,QAAQ,yBAAuB;AAG9C;AACA;AACA,OAAO,IAAIC,+BAA+B,GAAG,IAAI;AAiDjDD,MAAM,CAACE,SAAS,CAACC,uBAAuB,GAAG;EACvC,MAAMC,iBAAiB,GAAG,IAAI,CAACC,GAAG,CAACF,uBAAuB,EAAE;EAC5D,IAAI,CAACC,iBAAiB,EAAE;IACpB,MAAM,IAAIE,KAAK,CAAC,qCAAqC,CAAC;;EAE1D,OAAOF,iBAAiB;AAC5B,CAAC;AAEDJ,MAAM,CAACE,SAAS,CAACK,uBAAuB,GAAG,UAAUC,KAA6B;EAC9E,IAAI,CAACH,GAAG,CAACE,uBAAuB,CAACC,KAAK,CAAC;AAC3C,CAAC;AAEDR,MAAM,CAACE,SAAS,CAACO,qBAAqB,GAAG,UAAUD,KAAuC;EACtF,IAAI,CAACH,GAAG,CAACI,qBAAqB,CAAC,IAAI,CAACJ,GAAG,CAACK,kBAAkB,EAAEF,KAAK,CAAC;AACtE,CAAC;AAEDR,MAAM,CAACE,SAAS,CAACS,sBAAsB,GAAG,UAAUC,YAAqB,IAAI;EACzE,IAAI,CAACP,GAAG,CAACM,sBAAsB,CAACC,SAAS,GAAG,IAAI,CAACP,GAAG,CAACQ,MAAM,GAAG,IAAI,CAACR,GAAG,CAACS,SAAS,CAAC;AACrF,CAAC;AAEDd,MAAM,CAACE,SAAS,CAACa,oBAAoB,GAAG;EACpC,IAAI,CAACV,GAAG,CAACU,oBAAoB,EAAE;AACnC,CAAC;AAEDf,MAAM,CAACE,SAAS,CAACc,2BAA2B,GAAG,UAAUC,OAAqB,EAAET,KAAe;EAC3F,IAAI,CAACH,GAAG,CAACa,yBAAyB,CAACD,OAAO,EAAET,KAAK,EAAE,IAAI,CAACH,GAAG,CAACc,mBAAmB,CAAC;AACpF,CAAC;AAEDnB,MAAM,CAACE,SAAS,CAACkB,2BAA2B,GAAG,UAAUZ,KAA2B;EAChF,IAAI,CAACH,GAAG,CAACgB,cAAc,CAAC,IAAI,CAAChB,GAAG,CAACiB,yBAAyB,EAAE,CAAC,EAAEd,KAAK,GAAGA,KAAK,CAACe,kBAAkB,GAAG,IAAI,CAAC;AAC3G,CAAC","names":["Engine","_forceTransformFeedbackToBundle","prototype","createTransformFeedback","transformFeedback","_gl","Error","deleteTransformFeedback","value","bindTransformFeedback","TRANSFORM_FEEDBACK","beginTransformFeedback","usePoints","POINTS","TRIANGLES","endTransformFeedback","setTranformFeedbackVaryings","program","transformFeedbackVaryings","INTERLEAVED_ATTRIBS","bindTransformFeedbackBuffer","bindBufferBase","TRANSFORM_FEEDBACK_BUFFER","underlyingResource"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Engines/Extensions/engine.transformFeedback.ts"],"sourcesContent":["import type { Nullable } from \"../../types\";\r\nimport { Engine } from \"../../Engines/engine\";\r\nimport type { DataBuffer } from \"../../Buffers/dataBuffer\";\r\n\r\n/** @internal */\r\n// eslint-disable-next-line no-var\r\nexport var _forceTransformFeedbackToBundle = true;\r\n\r\ndeclare module \"../../Engines/engine\" {\r\n    export interface Engine {\r\n        /**\r\n         * Creates a webGL transform feedback object\r\n         * Please makes sure to check webGLVersion property to check if you are running webGL 2+\r\n         * @returns the webGL transform feedback object\r\n         */\r\n        createTransformFeedback(): WebGLTransformFeedback;\r\n\r\n        /**\r\n         * Delete a webGL transform feedback object\r\n         * @param value defines the webGL transform feedback object to delete\r\n         */\r\n        deleteTransformFeedback(value: WebGLTransformFeedback): void;\r\n\r\n        /**\r\n         * Bind a webGL transform feedback object to the webgl context\r\n         * @param value defines the webGL transform feedback object to bind\r\n         */\r\n        bindTransformFeedback(value: Nullable<WebGLTransformFeedback>): void;\r\n\r\n        /**\r\n         * Begins a transform feedback operation\r\n         * @param usePoints defines if points or triangles must be used\r\n         */\r\n        beginTransformFeedback(usePoints: boolean): void;\r\n\r\n        /**\r\n         * Ends a transform feedback operation\r\n         */\r\n        endTransformFeedback(): void;\r\n\r\n        /**\r\n         * Specify the varyings to use with transform feedback\r\n         * @param program defines the associated webGL program\r\n         * @param value defines the list of strings representing the varying names\r\n         */\r\n        setTranformFeedbackVaryings(program: WebGLProgram, value: string[]): void;\r\n\r\n        /**\r\n         * Bind a webGL buffer for a transform feedback operation\r\n         * @param value defines the webGL buffer to bind\r\n         */\r\n        bindTransformFeedbackBuffer(value: Nullable<DataBuffer>): void;\r\n    }\r\n}\r\n\r\nEngine.prototype.createTransformFeedback = function (): WebGLTransformFeedback {\r\n    const transformFeedback = this._gl.createTransformFeedback();\r\n    if (!transformFeedback) {\r\n        throw new Error(\"Unable to create Transform Feedback\");\r\n    }\r\n    return transformFeedback;\r\n};\r\n\r\nEngine.prototype.deleteTransformFeedback = function (value: WebGLTransformFeedback): void {\r\n    this._gl.deleteTransformFeedback(value);\r\n};\r\n\r\nEngine.prototype.bindTransformFeedback = function (value: Nullable<WebGLTransformFeedback>): void {\r\n    this._gl.bindTransformFeedback(this._gl.TRANSFORM_FEEDBACK, value);\r\n};\r\n\r\nEngine.prototype.beginTransformFeedback = function (usePoints: boolean = true): void {\r\n    this._gl.beginTransformFeedback(usePoints ? this._gl.POINTS : this._gl.TRIANGLES);\r\n};\r\n\r\nEngine.prototype.endTransformFeedback = function (): void {\r\n    this._gl.endTransformFeedback();\r\n};\r\n\r\nEngine.prototype.setTranformFeedbackVaryings = function (program: WebGLProgram, value: string[]): void {\r\n    this._gl.transformFeedbackVaryings(program, value, this._gl.INTERLEAVED_ATTRIBS);\r\n};\r\n\r\nEngine.prototype.bindTransformFeedbackBuffer = function (value: Nullable<DataBuffer>): void {\r\n    this._gl.bindBufferBase(this._gl.TRANSFORM_FEEDBACK_BUFFER, 0, value ? value.underlyingResource : null);\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}