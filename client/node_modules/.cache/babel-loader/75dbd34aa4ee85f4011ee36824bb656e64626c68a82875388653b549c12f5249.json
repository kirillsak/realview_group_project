{"ast":null,"code":"import { Engine } from \"../Engines/engine.js\";\n\n/**\n * This groups all the flags used to control the materials channel.\n */\nexport class MaterialFlags {\n  /**\n   * Are diffuse textures enabled in the application.\n   */\n  static get DiffuseTextureEnabled() {\n    return this._DiffuseTextureEnabled;\n  }\n  static set DiffuseTextureEnabled(value) {\n    if (this._DiffuseTextureEnabled === value) {\n      return;\n    }\n    this._DiffuseTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are detail textures enabled in the application.\n   */\n  static get DetailTextureEnabled() {\n    return this._DetailTextureEnabled;\n  }\n  static set DetailTextureEnabled(value) {\n    if (this._DetailTextureEnabled === value) {\n      return;\n    }\n    this._DetailTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are ambient textures enabled in the application.\n   */\n  static get AmbientTextureEnabled() {\n    return this._AmbientTextureEnabled;\n  }\n  static set AmbientTextureEnabled(value) {\n    if (this._AmbientTextureEnabled === value) {\n      return;\n    }\n    this._AmbientTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are opacity textures enabled in the application.\n   */\n  static get OpacityTextureEnabled() {\n    return this._OpacityTextureEnabled;\n  }\n  static set OpacityTextureEnabled(value) {\n    if (this._OpacityTextureEnabled === value) {\n      return;\n    }\n    this._OpacityTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are reflection textures enabled in the application.\n   */\n  static get ReflectionTextureEnabled() {\n    return this._ReflectionTextureEnabled;\n  }\n  static set ReflectionTextureEnabled(value) {\n    if (this._ReflectionTextureEnabled === value) {\n      return;\n    }\n    this._ReflectionTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are emissive textures enabled in the application.\n   */\n  static get EmissiveTextureEnabled() {\n    return this._EmissiveTextureEnabled;\n  }\n  static set EmissiveTextureEnabled(value) {\n    if (this._EmissiveTextureEnabled === value) {\n      return;\n    }\n    this._EmissiveTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are specular textures enabled in the application.\n   */\n  static get SpecularTextureEnabled() {\n    return this._SpecularTextureEnabled;\n  }\n  static set SpecularTextureEnabled(value) {\n    if (this._SpecularTextureEnabled === value) {\n      return;\n    }\n    this._SpecularTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are bump textures enabled in the application.\n   */\n  static get BumpTextureEnabled() {\n    return this._BumpTextureEnabled;\n  }\n  static set BumpTextureEnabled(value) {\n    if (this._BumpTextureEnabled === value) {\n      return;\n    }\n    this._BumpTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are lightmap textures enabled in the application.\n   */\n  static get LightmapTextureEnabled() {\n    return this._LightmapTextureEnabled;\n  }\n  static set LightmapTextureEnabled(value) {\n    if (this._LightmapTextureEnabled === value) {\n      return;\n    }\n    this._LightmapTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are refraction textures enabled in the application.\n   */\n  static get RefractionTextureEnabled() {\n    return this._RefractionTextureEnabled;\n  }\n  static set RefractionTextureEnabled(value) {\n    if (this._RefractionTextureEnabled === value) {\n      return;\n    }\n    this._RefractionTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are color grading textures enabled in the application.\n   */\n  static get ColorGradingTextureEnabled() {\n    return this._ColorGradingTextureEnabled;\n  }\n  static set ColorGradingTextureEnabled(value) {\n    if (this._ColorGradingTextureEnabled === value) {\n      return;\n    }\n    this._ColorGradingTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are fresnels enabled in the application.\n   */\n  static get FresnelEnabled() {\n    return this._FresnelEnabled;\n  }\n  static set FresnelEnabled(value) {\n    if (this._FresnelEnabled === value) {\n      return;\n    }\n    this._FresnelEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(4);\n  }\n  /**\n   * Are clear coat textures enabled in the application.\n   */\n  static get ClearCoatTextureEnabled() {\n    return this._ClearCoatTextureEnabled;\n  }\n  static set ClearCoatTextureEnabled(value) {\n    if (this._ClearCoatTextureEnabled === value) {\n      return;\n    }\n    this._ClearCoatTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are clear coat bump textures enabled in the application.\n   */\n  static get ClearCoatBumpTextureEnabled() {\n    return this._ClearCoatBumpTextureEnabled;\n  }\n  static set ClearCoatBumpTextureEnabled(value) {\n    if (this._ClearCoatBumpTextureEnabled === value) {\n      return;\n    }\n    this._ClearCoatBumpTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are clear coat tint textures enabled in the application.\n   */\n  static get ClearCoatTintTextureEnabled() {\n    return this._ClearCoatTintTextureEnabled;\n  }\n  static set ClearCoatTintTextureEnabled(value) {\n    if (this._ClearCoatTintTextureEnabled === value) {\n      return;\n    }\n    this._ClearCoatTintTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are sheen textures enabled in the application.\n   */\n  static get SheenTextureEnabled() {\n    return this._SheenTextureEnabled;\n  }\n  static set SheenTextureEnabled(value) {\n    if (this._SheenTextureEnabled === value) {\n      return;\n    }\n    this._SheenTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are anisotropic textures enabled in the application.\n   */\n  static get AnisotropicTextureEnabled() {\n    return this._AnisotropicTextureEnabled;\n  }\n  static set AnisotropicTextureEnabled(value) {\n    if (this._AnisotropicTextureEnabled === value) {\n      return;\n    }\n    this._AnisotropicTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are thickness textures enabled in the application.\n   */\n  static get ThicknessTextureEnabled() {\n    return this._ThicknessTextureEnabled;\n  }\n  static set ThicknessTextureEnabled(value) {\n    if (this._ThicknessTextureEnabled === value) {\n      return;\n    }\n    this._ThicknessTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are refraction intensity textures enabled in the application.\n   */\n  static get RefractionIntensityTextureEnabled() {\n    return this._ThicknessTextureEnabled;\n  }\n  static set RefractionIntensityTextureEnabled(value) {\n    if (this._RefractionIntensityTextureEnabled === value) {\n      return;\n    }\n    this._RefractionIntensityTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are translucency intensity textures enabled in the application.\n   */\n  static get TranslucencyIntensityTextureEnabled() {\n    return this._ThicknessTextureEnabled;\n  }\n  static set TranslucencyIntensityTextureEnabled(value) {\n    if (this._TranslucencyIntensityTextureEnabled === value) {\n      return;\n    }\n    this._TranslucencyIntensityTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n  /**\n   * Are translucency intensity textures enabled in the application.\n   */\n  static get IridescenceTextureEnabled() {\n    return this._IridescenceTextureEnabled;\n  }\n  static set IridescenceTextureEnabled(value) {\n    if (this._IridescenceTextureEnabled === value) {\n      return;\n    }\n    this._IridescenceTextureEnabled = value;\n    Engine.MarkAllMaterialsAsDirty(1);\n  }\n}\n// Flags used to enable or disable a type of texture for all Standard Materials\nMaterialFlags._DiffuseTextureEnabled = true;\nMaterialFlags._DetailTextureEnabled = true;\nMaterialFlags._AmbientTextureEnabled = true;\nMaterialFlags._OpacityTextureEnabled = true;\nMaterialFlags._ReflectionTextureEnabled = true;\nMaterialFlags._EmissiveTextureEnabled = true;\nMaterialFlags._SpecularTextureEnabled = true;\nMaterialFlags._BumpTextureEnabled = true;\nMaterialFlags._LightmapTextureEnabled = true;\nMaterialFlags._RefractionTextureEnabled = true;\nMaterialFlags._ColorGradingTextureEnabled = true;\nMaterialFlags._FresnelEnabled = true;\nMaterialFlags._ClearCoatTextureEnabled = true;\nMaterialFlags._ClearCoatBumpTextureEnabled = true;\nMaterialFlags._ClearCoatTintTextureEnabled = true;\nMaterialFlags._SheenTextureEnabled = true;\nMaterialFlags._AnisotropicTextureEnabled = true;\nMaterialFlags._ThicknessTextureEnabled = true;\nMaterialFlags._RefractionIntensityTextureEnabled = true;\nMaterialFlags._TranslucencyIntensityTextureEnabled = true;\nMaterialFlags._IridescenceTextureEnabled = true;","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,QAAQ,sBAAoB;;AAG3C;;;AAGA,OAAM,MAAOC,aAAa;EAGtB;;;EAGO,WAAWC,qBAAqB;IACnC,OAAO,IAAI,CAACC,sBAAsB;EACtC;EACO,WAAWD,qBAAqB,CAACE,KAAc;IAClD,IAAI,IAAI,CAACD,sBAAsB,KAAKC,KAAK,EAAE;MACvC;;IAGJ,IAAI,CAACD,sBAAsB,GAAGC,KAAK;IACnCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWC,oBAAoB;IAClC,OAAO,IAAI,CAACC,qBAAqB;EACrC;EACO,WAAWD,oBAAoB,CAACF,KAAc;IACjD,IAAI,IAAI,CAACG,qBAAqB,KAAKH,KAAK,EAAE;MACtC;;IAGJ,IAAI,CAACG,qBAAqB,GAAGH,KAAK;IAClCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWG,qBAAqB;IACnC,OAAO,IAAI,CAACC,sBAAsB;EACtC;EACO,WAAWD,qBAAqB,CAACJ,KAAc;IAClD,IAAI,IAAI,CAACK,sBAAsB,KAAKL,KAAK,EAAE;MACvC;;IAGJ,IAAI,CAACK,sBAAsB,GAAGL,KAAK;IACnCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWK,qBAAqB;IACnC,OAAO,IAAI,CAACC,sBAAsB;EACtC;EACO,WAAWD,qBAAqB,CAACN,KAAc;IAClD,IAAI,IAAI,CAACO,sBAAsB,KAAKP,KAAK,EAAE;MACvC;;IAGJ,IAAI,CAACO,sBAAsB,GAAGP,KAAK;IACnCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWO,wBAAwB;IACtC,OAAO,IAAI,CAACC,yBAAyB;EACzC;EACO,WAAWD,wBAAwB,CAACR,KAAc;IACrD,IAAI,IAAI,CAACS,yBAAyB,KAAKT,KAAK,EAAE;MAC1C;;IAGJ,IAAI,CAACS,yBAAyB,GAAGT,KAAK;IACtCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWS,sBAAsB;IACpC,OAAO,IAAI,CAACC,uBAAuB;EACvC;EACO,WAAWD,sBAAsB,CAACV,KAAc;IACnD,IAAI,IAAI,CAACW,uBAAuB,KAAKX,KAAK,EAAE;MACxC;;IAGJ,IAAI,CAACW,uBAAuB,GAAGX,KAAK;IACpCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWW,sBAAsB;IACpC,OAAO,IAAI,CAACC,uBAAuB;EACvC;EACO,WAAWD,sBAAsB,CAACZ,KAAc;IACnD,IAAI,IAAI,CAACa,uBAAuB,KAAKb,KAAK,EAAE;MACxC;;IAGJ,IAAI,CAACa,uBAAuB,GAAGb,KAAK;IACpCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWa,kBAAkB;IAChC,OAAO,IAAI,CAACC,mBAAmB;EACnC;EACO,WAAWD,kBAAkB,CAACd,KAAc;IAC/C,IAAI,IAAI,CAACe,mBAAmB,KAAKf,KAAK,EAAE;MACpC;;IAGJ,IAAI,CAACe,mBAAmB,GAAGf,KAAK;IAChCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWe,sBAAsB;IACpC,OAAO,IAAI,CAACC,uBAAuB;EACvC;EACO,WAAWD,sBAAsB,CAAChB,KAAc;IACnD,IAAI,IAAI,CAACiB,uBAAuB,KAAKjB,KAAK,EAAE;MACxC;;IAGJ,IAAI,CAACiB,uBAAuB,GAAGjB,KAAK;IACpCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWiB,wBAAwB;IACtC,OAAO,IAAI,CAACC,yBAAyB;EACzC;EACO,WAAWD,wBAAwB,CAAClB,KAAc;IACrD,IAAI,IAAI,CAACmB,yBAAyB,KAAKnB,KAAK,EAAE;MAC1C;;IAGJ,IAAI,CAACmB,yBAAyB,GAAGnB,KAAK;IACtCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWmB,0BAA0B;IACxC,OAAO,IAAI,CAACC,2BAA2B;EAC3C;EACO,WAAWD,0BAA0B,CAACpB,KAAc;IACvD,IAAI,IAAI,CAACqB,2BAA2B,KAAKrB,KAAK,EAAE;MAC5C;;IAGJ,IAAI,CAACqB,2BAA2B,GAAGrB,KAAK;IACxCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWqB,cAAc;IAC5B,OAAO,IAAI,CAACC,eAAe;EAC/B;EACO,WAAWD,cAAc,CAACtB,KAAc;IAC3C,IAAI,IAAI,CAACuB,eAAe,KAAKvB,KAAK,EAAE;MAChC;;IAGJ,IAAI,CAACuB,eAAe,GAAGvB,KAAK;IAC5BJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWuB,uBAAuB;IACrC,OAAO,IAAI,CAACC,wBAAwB;EACxC;EACO,WAAWD,uBAAuB,CAACxB,KAAc;IACpD,IAAI,IAAI,CAACyB,wBAAwB,KAAKzB,KAAK,EAAE;MACzC;;IAGJ,IAAI,CAACyB,wBAAwB,GAAGzB,KAAK;IACrCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWyB,2BAA2B;IACzC,OAAO,IAAI,CAACC,4BAA4B;EAC5C;EACO,WAAWD,2BAA2B,CAAC1B,KAAc;IACxD,IAAI,IAAI,CAAC2B,4BAA4B,KAAK3B,KAAK,EAAE;MAC7C;;IAGJ,IAAI,CAAC2B,4BAA4B,GAAG3B,KAAK;IACzCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAW2B,2BAA2B;IACzC,OAAO,IAAI,CAACC,4BAA4B;EAC5C;EACO,WAAWD,2BAA2B,CAAC5B,KAAc;IACxD,IAAI,IAAI,CAAC6B,4BAA4B,KAAK7B,KAAK,EAAE;MAC7C;;IAGJ,IAAI,CAAC6B,4BAA4B,GAAG7B,KAAK;IACzCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAW6B,mBAAmB;IACjC,OAAO,IAAI,CAACC,oBAAoB;EACpC;EACO,WAAWD,mBAAmB,CAAC9B,KAAc;IAChD,IAAI,IAAI,CAAC+B,oBAAoB,KAAK/B,KAAK,EAAE;MACrC;;IAGJ,IAAI,CAAC+B,oBAAoB,GAAG/B,KAAK;IACjCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAW+B,yBAAyB;IACvC,OAAO,IAAI,CAACC,0BAA0B;EAC1C;EACO,WAAWD,yBAAyB,CAAChC,KAAc;IACtD,IAAI,IAAI,CAACiC,0BAA0B,KAAKjC,KAAK,EAAE;MAC3C;;IAGJ,IAAI,CAACiC,0BAA0B,GAAGjC,KAAK;IACvCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWiC,uBAAuB;IACrC,OAAO,IAAI,CAACC,wBAAwB;EACxC;EACO,WAAWD,uBAAuB,CAAClC,KAAc;IACpD,IAAI,IAAI,CAACmC,wBAAwB,KAAKnC,KAAK,EAAE;MACzC;;IAGJ,IAAI,CAACmC,wBAAwB,GAAGnC,KAAK;IACrCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWmC,iCAAiC;IAC/C,OAAO,IAAI,CAACD,wBAAwB;EACxC;EACO,WAAWC,iCAAiC,CAACpC,KAAc;IAC9D,IAAI,IAAI,CAACqC,kCAAkC,KAAKrC,KAAK,EAAE;MACnD;;IAGJ,IAAI,CAACqC,kCAAkC,GAAGrC,KAAK;IAC/CJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWqC,mCAAmC;IACjD,OAAO,IAAI,CAACH,wBAAwB;EACxC;EACO,WAAWG,mCAAmC,CAACtC,KAAc;IAChE,IAAI,IAAI,CAACuC,oCAAoC,KAAKvC,KAAK,EAAE;MACrD;;IAGJ,IAAI,CAACuC,oCAAoC,GAAGvC,KAAK;IACjDJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;EAGA;;;EAGO,WAAWuC,yBAAyB;IACvC,OAAO,IAAI,CAACC,0BAA0B;EAC1C;EACO,WAAWD,yBAAyB,CAACxC,KAAc;IACtD,IAAI,IAAI,CAACyC,0BAA0B,KAAKzC,KAAK,EAAE;MAC3C;;IAGJ,IAAI,CAACyC,0BAA0B,GAAGzC,KAAK;IACvCJ,MAAM,CAACK,uBAAuB,CAAC;EACnC;;AA/UA;AACeJ,oCAAsB,GAAG,IAAI;AAgB7BA,mCAAqB,GAAG,IAAI;AAgB5BA,oCAAsB,GAAG,IAAI;AAgB7BA,oCAAsB,GAAG,IAAI;AAgB7BA,uCAAyB,GAAG,IAAI;AAgBhCA,qCAAuB,GAAG,IAAI;AAgB9BA,qCAAuB,GAAG,IAAI;AAgB9BA,iCAAmB,GAAG,IAAI;AAgB1BA,qCAAuB,GAAG,IAAI;AAgB9BA,uCAAyB,GAAG,IAAI;AAgBhCA,yCAA2B,GAAG,IAAI;AAgBlCA,6BAAe,GAAG,IAAI;AAgBtBA,sCAAwB,GAAG,IAAI;AAgB/BA,0CAA4B,GAAG,IAAI;AAgBnCA,0CAA4B,GAAG,IAAI;AAgBnCA,kCAAoB,GAAG,IAAI;AAgB3BA,wCAA0B,GAAG,IAAI;AAgBjCA,sCAAwB,GAAG,IAAI;AAgB/BA,gDAAkC,GAAG,IAAI;AAgBzCA,kDAAoC,GAAG,IAAI;AAgB3CA,wCAA0B,GAAG,IAAI","names":["Engine","MaterialFlags","DiffuseTextureEnabled","_DiffuseTextureEnabled","value","MarkAllMaterialsAsDirty","DetailTextureEnabled","_DetailTextureEnabled","AmbientTextureEnabled","_AmbientTextureEnabled","OpacityTextureEnabled","_OpacityTextureEnabled","ReflectionTextureEnabled","_ReflectionTextureEnabled","EmissiveTextureEnabled","_EmissiveTextureEnabled","SpecularTextureEnabled","_SpecularTextureEnabled","BumpTextureEnabled","_BumpTextureEnabled","LightmapTextureEnabled","_LightmapTextureEnabled","RefractionTextureEnabled","_RefractionTextureEnabled","ColorGradingTextureEnabled","_ColorGradingTextureEnabled","FresnelEnabled","_FresnelEnabled","ClearCoatTextureEnabled","_ClearCoatTextureEnabled","ClearCoatBumpTextureEnabled","_ClearCoatBumpTextureEnabled","ClearCoatTintTextureEnabled","_ClearCoatTintTextureEnabled","SheenTextureEnabled","_SheenTextureEnabled","AnisotropicTextureEnabled","_AnisotropicTextureEnabled","ThicknessTextureEnabled","_ThicknessTextureEnabled","RefractionIntensityTextureEnabled","_RefractionIntensityTextureEnabled","TranslucencyIntensityTextureEnabled","_TranslucencyIntensityTextureEnabled","IridescenceTextureEnabled","_IridescenceTextureEnabled"],"sourceRoot":"","sources":["../../../../lts/core/generated/Materials/materialFlags.ts"],"sourcesContent":["import { Engine } from \"../Engines/engine\";\r\nimport { Constants } from \"../Engines/constants\";\r\n\r\n/**\r\n * This groups all the flags used to control the materials channel.\r\n */\r\nexport class MaterialFlags {\r\n    // Flags used to enable or disable a type of texture for all Standard Materials\r\n    private static _DiffuseTextureEnabled = true;\r\n    /**\r\n     * Are diffuse textures enabled in the application.\r\n     */\r\n    public static get DiffuseTextureEnabled(): boolean {\r\n        return this._DiffuseTextureEnabled;\r\n    }\r\n    public static set DiffuseTextureEnabled(value: boolean) {\r\n        if (this._DiffuseTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._DiffuseTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _DetailTextureEnabled = true;\r\n    /**\r\n     * Are detail textures enabled in the application.\r\n     */\r\n    public static get DetailTextureEnabled(): boolean {\r\n        return this._DetailTextureEnabled;\r\n    }\r\n    public static set DetailTextureEnabled(value: boolean) {\r\n        if (this._DetailTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._DetailTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _AmbientTextureEnabled = true;\r\n    /**\r\n     * Are ambient textures enabled in the application.\r\n     */\r\n    public static get AmbientTextureEnabled(): boolean {\r\n        return this._AmbientTextureEnabled;\r\n    }\r\n    public static set AmbientTextureEnabled(value: boolean) {\r\n        if (this._AmbientTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._AmbientTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _OpacityTextureEnabled = true;\r\n    /**\r\n     * Are opacity textures enabled in the application.\r\n     */\r\n    public static get OpacityTextureEnabled(): boolean {\r\n        return this._OpacityTextureEnabled;\r\n    }\r\n    public static set OpacityTextureEnabled(value: boolean) {\r\n        if (this._OpacityTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._OpacityTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ReflectionTextureEnabled = true;\r\n    /**\r\n     * Are reflection textures enabled in the application.\r\n     */\r\n    public static get ReflectionTextureEnabled(): boolean {\r\n        return this._ReflectionTextureEnabled;\r\n    }\r\n    public static set ReflectionTextureEnabled(value: boolean) {\r\n        if (this._ReflectionTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ReflectionTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _EmissiveTextureEnabled = true;\r\n    /**\r\n     * Are emissive textures enabled in the application.\r\n     */\r\n    public static get EmissiveTextureEnabled(): boolean {\r\n        return this._EmissiveTextureEnabled;\r\n    }\r\n    public static set EmissiveTextureEnabled(value: boolean) {\r\n        if (this._EmissiveTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._EmissiveTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _SpecularTextureEnabled = true;\r\n    /**\r\n     * Are specular textures enabled in the application.\r\n     */\r\n    public static get SpecularTextureEnabled(): boolean {\r\n        return this._SpecularTextureEnabled;\r\n    }\r\n    public static set SpecularTextureEnabled(value: boolean) {\r\n        if (this._SpecularTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._SpecularTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _BumpTextureEnabled = true;\r\n    /**\r\n     * Are bump textures enabled in the application.\r\n     */\r\n    public static get BumpTextureEnabled(): boolean {\r\n        return this._BumpTextureEnabled;\r\n    }\r\n    public static set BumpTextureEnabled(value: boolean) {\r\n        if (this._BumpTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._BumpTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _LightmapTextureEnabled = true;\r\n    /**\r\n     * Are lightmap textures enabled in the application.\r\n     */\r\n    public static get LightmapTextureEnabled(): boolean {\r\n        return this._LightmapTextureEnabled;\r\n    }\r\n    public static set LightmapTextureEnabled(value: boolean) {\r\n        if (this._LightmapTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._LightmapTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _RefractionTextureEnabled = true;\r\n    /**\r\n     * Are refraction textures enabled in the application.\r\n     */\r\n    public static get RefractionTextureEnabled(): boolean {\r\n        return this._RefractionTextureEnabled;\r\n    }\r\n    public static set RefractionTextureEnabled(value: boolean) {\r\n        if (this._RefractionTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._RefractionTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ColorGradingTextureEnabled = true;\r\n    /**\r\n     * Are color grading textures enabled in the application.\r\n     */\r\n    public static get ColorGradingTextureEnabled(): boolean {\r\n        return this._ColorGradingTextureEnabled;\r\n    }\r\n    public static set ColorGradingTextureEnabled(value: boolean) {\r\n        if (this._ColorGradingTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ColorGradingTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _FresnelEnabled = true;\r\n    /**\r\n     * Are fresnels enabled in the application.\r\n     */\r\n    public static get FresnelEnabled(): boolean {\r\n        return this._FresnelEnabled;\r\n    }\r\n    public static set FresnelEnabled(value: boolean) {\r\n        if (this._FresnelEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._FresnelEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_FresnelDirtyFlag);\r\n    }\r\n\r\n    private static _ClearCoatTextureEnabled = true;\r\n    /**\r\n     * Are clear coat textures enabled in the application.\r\n     */\r\n    public static get ClearCoatTextureEnabled(): boolean {\r\n        return this._ClearCoatTextureEnabled;\r\n    }\r\n    public static set ClearCoatTextureEnabled(value: boolean) {\r\n        if (this._ClearCoatTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ClearCoatTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ClearCoatBumpTextureEnabled = true;\r\n    /**\r\n     * Are clear coat bump textures enabled in the application.\r\n     */\r\n    public static get ClearCoatBumpTextureEnabled(): boolean {\r\n        return this._ClearCoatBumpTextureEnabled;\r\n    }\r\n    public static set ClearCoatBumpTextureEnabled(value: boolean) {\r\n        if (this._ClearCoatBumpTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ClearCoatBumpTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ClearCoatTintTextureEnabled = true;\r\n    /**\r\n     * Are clear coat tint textures enabled in the application.\r\n     */\r\n    public static get ClearCoatTintTextureEnabled(): boolean {\r\n        return this._ClearCoatTintTextureEnabled;\r\n    }\r\n    public static set ClearCoatTintTextureEnabled(value: boolean) {\r\n        if (this._ClearCoatTintTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ClearCoatTintTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _SheenTextureEnabled = true;\r\n    /**\r\n     * Are sheen textures enabled in the application.\r\n     */\r\n    public static get SheenTextureEnabled(): boolean {\r\n        return this._SheenTextureEnabled;\r\n    }\r\n    public static set SheenTextureEnabled(value: boolean) {\r\n        if (this._SheenTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._SheenTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _AnisotropicTextureEnabled = true;\r\n    /**\r\n     * Are anisotropic textures enabled in the application.\r\n     */\r\n    public static get AnisotropicTextureEnabled(): boolean {\r\n        return this._AnisotropicTextureEnabled;\r\n    }\r\n    public static set AnisotropicTextureEnabled(value: boolean) {\r\n        if (this._AnisotropicTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._AnisotropicTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _ThicknessTextureEnabled = true;\r\n    /**\r\n     * Are thickness textures enabled in the application.\r\n     */\r\n    public static get ThicknessTextureEnabled(): boolean {\r\n        return this._ThicknessTextureEnabled;\r\n    }\r\n    public static set ThicknessTextureEnabled(value: boolean) {\r\n        if (this._ThicknessTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._ThicknessTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _RefractionIntensityTextureEnabled = true;\r\n    /**\r\n     * Are refraction intensity textures enabled in the application.\r\n     */\r\n    public static get RefractionIntensityTextureEnabled(): boolean {\r\n        return this._ThicknessTextureEnabled;\r\n    }\r\n    public static set RefractionIntensityTextureEnabled(value: boolean) {\r\n        if (this._RefractionIntensityTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._RefractionIntensityTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _TranslucencyIntensityTextureEnabled = true;\r\n    /**\r\n     * Are translucency intensity textures enabled in the application.\r\n     */\r\n    public static get TranslucencyIntensityTextureEnabled(): boolean {\r\n        return this._ThicknessTextureEnabled;\r\n    }\r\n    public static set TranslucencyIntensityTextureEnabled(value: boolean) {\r\n        if (this._TranslucencyIntensityTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._TranslucencyIntensityTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n\r\n    private static _IridescenceTextureEnabled = true;\r\n    /**\r\n     * Are translucency intensity textures enabled in the application.\r\n     */\r\n    public static get IridescenceTextureEnabled(): boolean {\r\n        return this._IridescenceTextureEnabled;\r\n    }\r\n    public static set IridescenceTextureEnabled(value: boolean) {\r\n        if (this._IridescenceTextureEnabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._IridescenceTextureEnabled = value;\r\n        Engine.MarkAllMaterialsAsDirty(Constants.MATERIAL_TextureDirtyFlag);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}