{"ast":null,"code":"/**\n * Defines the kind of connection point for node based material\n */\nexport var NodeMaterialBlockConnectionPointTypes;\n(function (NodeMaterialBlockConnectionPointTypes) {\n  /** Float */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Float\"] = 1] = \"Float\";\n  /** Int */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Int\"] = 2] = \"Int\";\n  /** Vector2 */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Vector2\"] = 4] = \"Vector2\";\n  /** Vector3 */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Vector3\"] = 8] = \"Vector3\";\n  /** Vector4 */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Vector4\"] = 16] = \"Vector4\";\n  /** Color3 */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Color3\"] = 32] = \"Color3\";\n  /** Color4 */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Color4\"] = 64] = \"Color4\";\n  /** Matrix */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Matrix\"] = 128] = \"Matrix\";\n  /** Custom object */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Object\"] = 256] = \"Object\";\n  /** Detect type based on connection */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"AutoDetect\"] = 1024] = \"AutoDetect\";\n  /** Output type that will be defined by input type */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"BasedOnInput\"] = 2048] = \"BasedOnInput\";\n  /** Bitmask of all types */\n  NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"All\"] = 4095] = \"All\";\n})(NodeMaterialBlockConnectionPointTypes || (NodeMaterialBlockConnectionPointTypes = {}));","map":{"version":3,"mappings":"AAAA;;;AAGA,WAAYA,qCAyBX;AAzBD,WAAYA,qCAAqC;EAC7C;EACAA,mGAAc;EACd;EACAA,+FAAY;EACZ;EACAA,uGAAgB;EAChB;EACAA,uGAAgB;EAChB;EACAA,wGAAgB;EAChB;EACAA,sGAAe;EACf;EACAA,sGAAe;EACf;EACAA,uGAAe;EACf;EACAA,uGAAe;EACf;EACAA,gHAAmB;EACnB;EACAA,oHAAqB;EACrB;EACAA,kGAAY;AAChB,CAAC,EAzBWA,qCAAqC,KAArCA,qCAAqC","names":["NodeMaterialBlockConnectionPointTypes"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Enums/nodeMaterialBlockConnectionPointTypes.ts"],"sourcesContent":["/**\r\n * Defines the kind of connection point for node based material\r\n */\r\nexport enum NodeMaterialBlockConnectionPointTypes {\r\n    /** Float */\r\n    Float = 0x0001,\r\n    /** Int */\r\n    Int = 0x0002,\r\n    /** Vector2 */\r\n    Vector2 = 0x0004,\r\n    /** Vector3 */\r\n    Vector3 = 0x0008,\r\n    /** Vector4 */\r\n    Vector4 = 0x0010,\r\n    /** Color3 */\r\n    Color3 = 0x0020,\r\n    /** Color4 */\r\n    Color4 = 0x0040,\r\n    /** Matrix */\r\n    Matrix = 0x0080,\r\n    /** Custom object */\r\n    Object = 0x0100,\r\n    /** Detect type based on connection */\r\n    AutoDetect = 0x0400,\r\n    /** Output type that will be defined by input type */\r\n    BasedOnInput = 0x0800,\r\n    /** Bitmask of all types */\r\n    All = 0x0fff,\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}