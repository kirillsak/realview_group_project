{"ast":null,"code":"import { DetailMapConfiguration } from \"./material.detailMapConfiguration.js\";\nimport { PBRAnisotropicConfiguration } from \"./PBR/pbrAnisotropicConfiguration.js\";\nimport { PBRBaseMaterial } from \"./PBR/pbrBaseMaterial.js\";\nimport { PBRBRDFConfiguration } from \"./PBR/pbrBRDFConfiguration.js\";\nimport { PBRClearCoatConfiguration } from \"./PBR/pbrClearCoatConfiguration.js\";\nimport { PBRIridescenceConfiguration } from \"./PBR/pbrIridescenceConfiguration.js\";\nimport { PBRSheenConfiguration } from \"./PBR/pbrSheenConfiguration.js\";\nimport { PBRSubSurfaceConfiguration } from \"./PBR/pbrSubSurfaceConfiguration.js\";\nimport { StandardMaterial } from \"./standardMaterial.js\";\n/**\n * Creates an instance of the anisotropic plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createPBRAnisotropicPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRAnisotropicConfiguration(material);\n  }\n  return null;\n}\n/**\n * Creates an instance of the brdf plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createPBRBRDFPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRBRDFConfiguration(material);\n  }\n  return null;\n}\n/**\n * Creates an instance of the clear coat plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createPBRClearCoatPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRClearCoatConfiguration(material);\n  }\n  return null;\n}\n/**\n * Creates an instance of the iridescence plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createPBRIridescencePlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRIridescenceConfiguration(material);\n  }\n  return null;\n}\n/**\n * Creates an instance of the sheen plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createPBRSheenPlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRSheenConfiguration(material);\n  }\n  return null;\n}\n/**\n * Creates an instance of the sub surface plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createPBRSubSurfacePlugin(material) {\n  if (material instanceof PBRBaseMaterial) {\n    return new PBRSubSurfaceConfiguration(material);\n  }\n  return null;\n}\n/**\n * Creates an instance of the detail map plugin\n * @param material parent material the plugin will be created for\n * @returns the plugin instance or null if the plugin is incompatible with material\n */\nexport function createDetailMapPlugin(material) {\n  if (material instanceof PBRBaseMaterial || material instanceof StandardMaterial) {\n    return new DetailMapConfiguration(material);\n  }\n  return null;\n}","map":{"version":3,"mappings":"AACA,SAASA,sBAAsB,QAAQ,sCAAoC;AAE3E,SAASC,2BAA2B,QAAQ,sCAAoC;AAChF,SAASC,eAAe,QAAQ,0BAAwB;AACxD,SAASC,oBAAoB,QAAQ,+BAA6B;AAClE,SAASC,yBAAyB,QAAQ,oCAAkC;AAC5E,SAASC,2BAA2B,QAAQ,sCAAoC;AAChF,SAASC,qBAAqB,QAAQ,gCAA8B;AACpE,SAASC,0BAA0B,QAAQ,qCAAmC;AAC9E,SAASC,gBAAgB,QAAQ,uBAAqB;AAItD;;;;;AAKA,OAAM,SAAUC,0BAA0B,CAACC,QAAkB;EACzD,IAAIA,QAAQ,YAAYR,eAAe,EAAE;IACrC,OAAO,IAAID,2BAA2B,CAACS,QAAQ,CAAC;;EAEpD,OAAO,IAAI;AACf;AAEA;;;;;AAKA,OAAM,SAAUC,mBAAmB,CAACD,QAAkB;EAClD,IAAIA,QAAQ,YAAYR,eAAe,EAAE;IACrC,OAAO,IAAIC,oBAAoB,CAACO,QAAQ,CAAC;;EAE7C,OAAO,IAAI;AACf;AAEA;;;;;AAKA,OAAM,SAAUE,wBAAwB,CAACF,QAAkB;EACvD,IAAIA,QAAQ,YAAYR,eAAe,EAAE;IACrC,OAAO,IAAIE,yBAAyB,CAACM,QAAQ,CAAC;;EAElD,OAAO,IAAI;AACf;AAEA;;;;;AAKA,OAAM,SAAUG,0BAA0B,CAACH,QAAkB;EACzD,IAAIA,QAAQ,YAAYR,eAAe,EAAE;IACrC,OAAO,IAAIG,2BAA2B,CAACK,QAAQ,CAAC;;EAEpD,OAAO,IAAI;AACf;AAEA;;;;;AAKA,OAAM,SAAUI,oBAAoB,CAACJ,QAAkB;EACnD,IAAIA,QAAQ,YAAYR,eAAe,EAAE;IACrC,OAAO,IAAII,qBAAqB,CAACI,QAAQ,CAAC;;EAE9C,OAAO,IAAI;AACf;AAEA;;;;;AAKA,OAAM,SAAUK,yBAAyB,CAACL,QAAkB;EACxD,IAAIA,QAAQ,YAAYR,eAAe,EAAE;IACrC,OAAO,IAAIK,0BAA0B,CAACG,QAAQ,CAAC;;EAEnD,OAAO,IAAI;AACf;AAEA;;;;;AAKA,OAAM,SAAUM,qBAAqB,CAACN,QAAkB;EACpD,IAAIA,QAAQ,YAAYR,eAAe,IAAIQ,QAAQ,YAAYF,gBAAgB,EAAE;IAC7E,OAAO,IAAIR,sBAAsB,CAACU,QAAQ,CAAC;;EAE/C,OAAO,IAAI;AACf","names":["DetailMapConfiguration","PBRAnisotropicConfiguration","PBRBaseMaterial","PBRBRDFConfiguration","PBRClearCoatConfiguration","PBRIridescenceConfiguration","PBRSheenConfiguration","PBRSubSurfaceConfiguration","StandardMaterial","createPBRAnisotropicPlugin","material","createPBRBRDFPlugin","createPBRClearCoatPlugin","createPBRIridescencePlugin","createPBRSheenPlugin","createPBRSubSurfacePlugin","createDetailMapPlugin"],"sourceRoot":"","sources":["../../../../lts/core/generated/Materials/materialPluginFactoryExport.ts"],"sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { DetailMapConfiguration } from \"./material.detailMapConfiguration\";\r\nimport type { MaterialPluginBase } from \"./materialPluginBase\";\r\nimport { PBRAnisotropicConfiguration } from \"./PBR/pbrAnisotropicConfiguration\";\r\nimport { PBRBaseMaterial } from \"./PBR/pbrBaseMaterial\";\r\nimport { PBRBRDFConfiguration } from \"./PBR/pbrBRDFConfiguration\";\r\nimport { PBRClearCoatConfiguration } from \"./PBR/pbrClearCoatConfiguration\";\r\nimport { PBRIridescenceConfiguration } from \"./PBR/pbrIridescenceConfiguration\";\r\nimport { PBRSheenConfiguration } from \"./PBR/pbrSheenConfiguration\";\r\nimport { PBRSubSurfaceConfiguration } from \"./PBR/pbrSubSurfaceConfiguration\";\r\nimport { StandardMaterial } from \"./standardMaterial\";\r\n\r\ndeclare type Material = import(\"./material\").Material;\r\n\r\n/**\r\n * Creates an instance of the anisotropic plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRAnisotropicPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRAnisotropicConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the brdf plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRBRDFPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRBRDFConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the clear coat plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRClearCoatPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRClearCoatConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the iridescence plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRIridescencePlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRIridescenceConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the sheen plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRSheenPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRSheenConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the sub surface plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createPBRSubSurfacePlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial) {\r\n        return new PBRSubSurfaceConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates an instance of the detail map plugin\r\n * @param material parent material the plugin will be created for\r\n * @returns the plugin instance or null if the plugin is incompatible with material\r\n */\r\nexport function createDetailMapPlugin(material: Material): Nullable<MaterialPluginBase> {\r\n    if (material instanceof PBRBaseMaterial || material instanceof StandardMaterial) {\r\n        return new DetailMapConfiguration(material);\r\n    }\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}