{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/** @internal */\nexport function addClipPlaneUniforms(uniforms) {\n  if (uniforms.indexOf(\"vClipPlane\") === -1) {\n    uniforms.push(\"vClipPlane\");\n  }\n  if (uniforms.indexOf(\"vClipPlane2\") === -1) {\n    uniforms.push(\"vClipPlane2\");\n  }\n  if (uniforms.indexOf(\"vClipPlane3\") === -1) {\n    uniforms.push(\"vClipPlane3\");\n  }\n  if (uniforms.indexOf(\"vClipPlane4\") === -1) {\n    uniforms.push(\"vClipPlane4\");\n  }\n  if (uniforms.indexOf(\"vClipPlane5\") === -1) {\n    uniforms.push(\"vClipPlane5\");\n  }\n  if (uniforms.indexOf(\"vClipPlane6\") === -1) {\n    uniforms.push(\"vClipPlane6\");\n  }\n}\n/** @internal */\nexport function prepareDefinesForClipPlanes(primaryHolder, secondaryHolder, defines) {\n  var _a, _b, _c, _d, _e, _f;\n  let changed = false;\n  let clipPlane = (_a = primaryHolder.clipPlane) !== null && _a !== void 0 ? _a : secondaryHolder.clipPlane;\n  changed = addDefine(clipPlane, defines, \"CLIPPLANE\") || changed;\n  clipPlane = (_b = primaryHolder.clipPlane2) !== null && _b !== void 0 ? _b : secondaryHolder.clipPlane2;\n  changed = addDefine(clipPlane, defines, \"CLIPPLANE2\") || changed;\n  clipPlane = (_c = primaryHolder.clipPlane3) !== null && _c !== void 0 ? _c : secondaryHolder.clipPlane3;\n  changed = addDefine(clipPlane, defines, \"CLIPPLANE3\") || changed;\n  clipPlane = (_d = primaryHolder.clipPlane4) !== null && _d !== void 0 ? _d : secondaryHolder.clipPlane4;\n  changed = addDefine(clipPlane, defines, \"CLIPPLANE4\") || changed;\n  clipPlane = (_e = primaryHolder.clipPlane5) !== null && _e !== void 0 ? _e : secondaryHolder.clipPlane5;\n  changed = addDefine(clipPlane, defines, \"CLIPPLANE5\") || changed;\n  clipPlane = (_f = primaryHolder.clipPlane6) !== null && _f !== void 0 ? _f : secondaryHolder.clipPlane6;\n  changed = addDefine(clipPlane, defines, \"CLIPPLANE6\") || changed;\n  return changed;\n}\n/** @internal */\nexport function bindClipPlane(effect, primaryHolder, secondaryHolder) {\n  var _a, _b, _c, _d, _e, _f;\n  let clipPlane = (_a = primaryHolder.clipPlane) !== null && _a !== void 0 ? _a : secondaryHolder.clipPlane;\n  setClipPlane(effect, \"vClipPlane\", clipPlane);\n  clipPlane = (_b = primaryHolder.clipPlane2) !== null && _b !== void 0 ? _b : secondaryHolder.clipPlane2;\n  setClipPlane(effect, \"vClipPlane2\", clipPlane);\n  clipPlane = (_c = primaryHolder.clipPlane3) !== null && _c !== void 0 ? _c : secondaryHolder.clipPlane3;\n  setClipPlane(effect, \"vClipPlane3\", clipPlane);\n  clipPlane = (_d = primaryHolder.clipPlane4) !== null && _d !== void 0 ? _d : secondaryHolder.clipPlane4;\n  setClipPlane(effect, \"vClipPlane4\", clipPlane);\n  clipPlane = (_e = primaryHolder.clipPlane5) !== null && _e !== void 0 ? _e : secondaryHolder.clipPlane5;\n  setClipPlane(effect, \"vClipPlane5\", clipPlane);\n  clipPlane = (_f = primaryHolder.clipPlane6) !== null && _f !== void 0 ? _f : secondaryHolder.clipPlane6;\n  setClipPlane(effect, \"vClipPlane6\", clipPlane);\n}\nfunction setClipPlane(effect, uniformName, clipPlane) {\n  if (clipPlane) {\n    effect.setFloat4(uniformName, clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n  }\n}\nfunction addDefine(clipPlane, defines, defineName) {\n  let isSet = true;\n  if (clipPlane) {\n    if (Array.isArray(defines)) {\n      const defineString = \"#define \" + defineName;\n      isSet = defines.indexOf(defineString) !== -1;\n      if (!isSet) {\n        defines.push(defineString);\n      }\n    } else {\n      isSet = defines[defineName];\n      defines[defineName] = true;\n    }\n  }\n  return !isSet;\n}","map":{"version":3,"mappings":"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","names":["addClipPlaneUniforms","uniforms","indexOf","push","prepareDefinesForClipPlanes","primaryHolder","secondaryHolder","defines","changed","clipPlane","addDefine","clipPlane2","clipPlane3","clipPlane4","clipPlane5","clipPlane6","bindClipPlane","effect","setClipPlane","uniformName","setFloat4","normal","x","y","z","d","defineName","isSet","Array","isArray","defineString"],"sourceRoot":"","sources":["../../../../lts/core/generated/Materials/clipPlaneMaterialHelper.ts"],"sourcesContent":["import type { Effect } from \"./effect\";\r\nimport type { IClipPlanesHolder } from \"../Misc/interfaces/iClipPlanesHolder\";\r\nimport type { Nullable } from \"../types\";\r\nimport type { Plane } from \"../Maths/math.plane\";\r\n\r\n/** @internal */\r\nexport function addClipPlaneUniforms(uniforms: string[]): void {\r\n    if (uniforms.indexOf(\"vClipPlane\") === -1) {\r\n        uniforms.push(\"vClipPlane\");\r\n    }\r\n    if (uniforms.indexOf(\"vClipPlane2\") === -1) {\r\n        uniforms.push(\"vClipPlane2\");\r\n    }\r\n    if (uniforms.indexOf(\"vClipPlane3\") === -1) {\r\n        uniforms.push(\"vClipPlane3\");\r\n    }\r\n    if (uniforms.indexOf(\"vClipPlane4\") === -1) {\r\n        uniforms.push(\"vClipPlane4\");\r\n    }\r\n    if (uniforms.indexOf(\"vClipPlane5\") === -1) {\r\n        uniforms.push(\"vClipPlane5\");\r\n    }\r\n    if (uniforms.indexOf(\"vClipPlane6\") === -1) {\r\n        uniforms.push(\"vClipPlane6\");\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport function prepareDefinesForClipPlanes(primaryHolder: IClipPlanesHolder, secondaryHolder: IClipPlanesHolder, defines: string[] | Record<string, any>): boolean {\r\n    let changed = false;\r\n    let clipPlane = primaryHolder.clipPlane ?? secondaryHolder.clipPlane;\r\n    changed = addDefine(clipPlane, defines, \"CLIPPLANE\") || changed;\r\n    clipPlane = primaryHolder.clipPlane2 ?? secondaryHolder.clipPlane2;\r\n    changed = addDefine(clipPlane, defines, \"CLIPPLANE2\") || changed;\r\n    clipPlane = primaryHolder.clipPlane3 ?? secondaryHolder.clipPlane3;\r\n    changed = addDefine(clipPlane, defines, \"CLIPPLANE3\") || changed;\r\n    clipPlane = primaryHolder.clipPlane4 ?? secondaryHolder.clipPlane4;\r\n    changed = addDefine(clipPlane, defines, \"CLIPPLANE4\") || changed;\r\n    clipPlane = primaryHolder.clipPlane5 ?? secondaryHolder.clipPlane5;\r\n    changed = addDefine(clipPlane, defines, \"CLIPPLANE5\") || changed;\r\n    clipPlane = primaryHolder.clipPlane6 ?? secondaryHolder.clipPlane6;\r\n    changed = addDefine(clipPlane, defines, \"CLIPPLANE6\") || changed;\r\n    return changed;\r\n}\r\n\r\n/** @internal */\r\nexport function bindClipPlane(effect: Effect, primaryHolder: IClipPlanesHolder, secondaryHolder: IClipPlanesHolder): void {\r\n    let clipPlane = primaryHolder.clipPlane ?? secondaryHolder.clipPlane;\r\n    setClipPlane(effect, \"vClipPlane\", clipPlane);\r\n    clipPlane = primaryHolder.clipPlane2 ?? secondaryHolder.clipPlane2;\r\n    setClipPlane(effect, \"vClipPlane2\", clipPlane);\r\n    clipPlane = primaryHolder.clipPlane3 ?? secondaryHolder.clipPlane3;\r\n    setClipPlane(effect, \"vClipPlane3\", clipPlane);\r\n    clipPlane = primaryHolder.clipPlane4 ?? secondaryHolder.clipPlane4;\r\n    setClipPlane(effect, \"vClipPlane4\", clipPlane);\r\n    clipPlane = primaryHolder.clipPlane5 ?? secondaryHolder.clipPlane5;\r\n    setClipPlane(effect, \"vClipPlane5\", clipPlane);\r\n    clipPlane = primaryHolder.clipPlane6 ?? secondaryHolder.clipPlane6;\r\n    setClipPlane(effect, \"vClipPlane6\", clipPlane);\r\n}\r\n\r\nfunction setClipPlane(effect: Effect, uniformName: string, clipPlane: Nullable<Plane>): void {\r\n    if (clipPlane) {\r\n        effect.setFloat4(uniformName, clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n    }\r\n}\r\n\r\nfunction addDefine(clipPlane: Nullable<Plane>, defines: string[] | Record<string, any>, defineName: string): boolean {\r\n    let isSet = true;\r\n    if (clipPlane) {\r\n        if (Array.isArray(defines)) {\r\n            const defineString = \"#define \" + defineName;\r\n            isSet = defines.indexOf(defineString) !== -1;\r\n            if (!isSet) {\r\n                defines.push(defineString);\r\n            }\r\n        } else {\r\n            isSet = defines[defineName];\r\n            defines[defineName] = true;\r\n        }\r\n    }\r\n    return !isSet;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}