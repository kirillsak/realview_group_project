{"ast":null,"code":"/**\n * Enum for the animation key frame interpolation type\n */\nexport var AnimationKeyInterpolation;\n(function (AnimationKeyInterpolation) {\n  /**\n   * Use tangents to interpolate between start and end values.\n   */\n  AnimationKeyInterpolation[AnimationKeyInterpolation[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * Do not interpolate between keys and use the start key value only. Tangents are ignored\n   */\n  AnimationKeyInterpolation[AnimationKeyInterpolation[\"STEP\"] = 1] = \"STEP\";\n})(AnimationKeyInterpolation || (AnimationKeyInterpolation = {}));","map":{"version":3,"mappings":"AA8BA;;;AAGA,WAAYA,yBASX;AATD,WAAYA,yBAAyB;EACjC;;;EAGAA,yEAAQ;EACR;;;EAGAA,yEAAQ;AACZ,CAAC,EATWA,yBAAyB,KAAzBA,yBAAyB","names":["AnimationKeyInterpolation"],"sourceRoot":"","sources":["../../../../lts/core/generated/Animations/animationKey.ts"],"sourcesContent":["/**\r\n * Defines an interface which represents an animation key frame\r\n */\r\nexport interface IAnimationKey {\r\n    /**\r\n     * Frame of the key frame\r\n     */\r\n    frame: number;\r\n    /**\r\n     * Value at the specifies key frame\r\n     */\r\n    value: any;\r\n    /**\r\n     * The input tangent for the cubic hermite spline\r\n     */\r\n    inTangent?: any;\r\n    /**\r\n     * The output tangent for the cubic hermite spline\r\n     */\r\n    outTangent?: any;\r\n    /**\r\n     * The animation interpolation type\r\n     */\r\n    interpolation?: AnimationKeyInterpolation;\r\n    /**\r\n     * Property defined by UI tools to link (or not ) the tangents\r\n     */\r\n    lockedTangent?: boolean;\r\n}\r\n\r\n/**\r\n * Enum for the animation key frame interpolation type\r\n */\r\nexport enum AnimationKeyInterpolation {\r\n    /**\r\n     * Use tangents to interpolate between start and end values.\r\n     */\r\n    NONE = 0,\r\n    /**\r\n     * Do not interpolate between keys and use the start key value only. Tangents are ignored\r\n     */\r\n    STEP = 1,\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}