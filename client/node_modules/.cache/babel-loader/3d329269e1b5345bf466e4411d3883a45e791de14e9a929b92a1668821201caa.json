{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nconst name = \"fluidRenderingParticleDepthVertexShader\";\nconst shader = `attribute vec3 position;\nattribute vec2 offset;\nuniform mat4 view;\nuniform mat4 projection;\nuniform vec2 size;\nvarying vec2 uv;\nvarying vec3 viewPos;\nvarying float sphereRadius;\n#ifdef FLUIDRENDERING_VELOCITY\nattribute vec3 velocity;\nvarying float velocityNorm;\n#endif\nvoid main(void) {\nvec3 cornerPos;\ncornerPos.xy=vec2(offset.x-0.5,offset.y-0.5)*size;\ncornerPos.z=0.0;\nviewPos=(view*vec4(position,1.0)).xyz;\ngl_Position=projection*vec4(viewPos+cornerPos,1.0);\nuv=offset;\nsphereRadius=size.x/2.0;\n#ifdef FLUIDRENDERING_VELOCITY\nvelocityNorm=length(velocity);\n#endif\n}\n`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const fluidRenderingParticleDepthVertexShader = {\n  name,\n  shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,2BAAyB;AAErD,MAAMC,IAAI,GAAG,yCAAyC;AACtD,MAAMC,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;CAwBd;AACD;AACAF,WAAW,CAACG,YAAY,CAACF,IAAI,CAAC,GAAGC,MAAM;AACvC;AACA,OAAO,MAAME,uCAAuC,GAAG;EAAEH,IAAI;EAAEC;AAAM,CAAE","names":["ShaderStore","name","shader","ShadersStore","fluidRenderingParticleDepthVertexShader"],"sourceRoot":"","sources":["../../../../lts/core/generated/Shaders/fluidRenderingParticleDepth.vertex.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"fluidRenderingParticleDepthVertexShader\";\nconst shader = `attribute vec3 position;\rattribute vec2 offset;\runiform mat4 view;\runiform mat4 projection;\runiform vec2 size;\rvarying vec2 uv;\rvarying vec3 viewPos;\rvarying float sphereRadius;\r#ifdef FLUIDRENDERING_VELOCITY\nattribute vec3 velocity;\rvarying float velocityNorm;\r#endif\nvoid main(void) {\rvec3 cornerPos;\rcornerPos.xy=vec2(offset.x-0.5,offset.y-0.5)*size;\rcornerPos.z=0.0;\rviewPos=(view*vec4(position,1.0)).xyz;\rgl_Position=projection*vec4(viewPos+cornerPos,1.0);\ruv=offset;\rsphereRadius=size.x/2.0;\r#ifdef FLUIDRENDERING_VELOCITY\nvelocityNorm=length(velocity);\r#endif\n}\r`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const fluidRenderingParticleDepthVertexShader = { name, shader };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}