{"ast":null,"code":"import { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to make gl_FragCoord available\n */\nexport class FragCoordBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new FragCoordBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n    this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"FragCoordBlock\";\n  }\n  /**\n   * Gets the xy component\n   */\n  get xy() {\n    return this._outputs[0];\n  }\n  /**\n   * Gets the xyz component\n   */\n  get xyz() {\n    return this._outputs[1];\n  }\n  /**\n   * Gets the xyzw component\n   */\n  get xyzw() {\n    return this._outputs[2];\n  }\n  /**\n   * Gets the x component\n   */\n  get x() {\n    return this._outputs[3];\n  }\n  /**\n   * Gets the y component\n   */\n  get y() {\n    return this._outputs[4];\n  }\n  /**\n   * Gets the z component\n   */\n  get z() {\n    return this._outputs[5];\n  }\n  /**\n   * Gets the w component\n   */\n  get output() {\n    return this._outputs[6];\n  }\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  writeOutputs(state) {\n    let code = \"\";\n    for (const output of this._outputs) {\n      if (output.hasEndpoints) {\n        code += `${this._declareOutput(output, state)} = gl_FragCoord.${output.name};\\r\\n`;\n      }\n    }\n    return code;\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    if (state.target === NodeMaterialBlockTargets.Vertex) {\n      throw \"FragCoordBlock must only be used in a fragment shader\";\n    }\n    state.compilationString += this.writeOutputs(state);\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.FragCoordBlock\", FragCoordBlock);","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,4BAA0B;AAC5D,SAASC,qCAAqC,QAAQ,sDAAoD;AAG1G,SAASC,wBAAwB,QAAQ,yCAAuC;AAChF,SAASC,aAAa,QAAQ,+BAA6B;AAE3D;;;AAGA,OAAM,MAAOC,cAAe,SAAQJ,iBAAiB;EACjD;;;;EAIAK,YAAmBC,IAAY;IAC3B,KAAK,CAACA,IAAI,EAAEJ,wBAAwB,CAACK,QAAQ,CAAC;IAE9C,IAAI,CAACC,cAAc,CAAC,IAAI,EAAEP,qCAAqC,CAACQ,OAAO,EAAEP,wBAAwB,CAACK,QAAQ,CAAC;IAC3G,IAAI,CAACC,cAAc,CAAC,KAAK,EAAEP,qCAAqC,CAACS,OAAO,EAAER,wBAAwB,CAACK,QAAQ,CAAC;IAC5G,IAAI,CAACC,cAAc,CAAC,MAAM,EAAEP,qCAAqC,CAACU,OAAO,EAAET,wBAAwB,CAACK,QAAQ,CAAC;IAC7G,IAAI,CAACC,cAAc,CAAC,GAAG,EAAEP,qCAAqC,CAACW,KAAK,EAAEV,wBAAwB,CAACK,QAAQ,CAAC;IACxG,IAAI,CAACC,cAAc,CAAC,GAAG,EAAEP,qCAAqC,CAACW,KAAK,EAAEV,wBAAwB,CAACK,QAAQ,CAAC;IACxG,IAAI,CAACC,cAAc,CAAC,GAAG,EAAEP,qCAAqC,CAACW,KAAK,EAAEV,wBAAwB,CAACK,QAAQ,CAAC;IACxG,IAAI,CAACC,cAAc,CAAC,GAAG,EAAEP,qCAAqC,CAACW,KAAK,EAAEV,wBAAwB,CAACK,QAAQ,CAAC;EAC5G;EAEA;;;;EAIOM,YAAY;IACf,OAAO,gBAAgB;EAC3B;EAEA;;;EAGA,IAAWC,EAAE;IACT,OAAO,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWC,GAAG;IACV,OAAO,IAAI,CAACD,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWE,IAAI;IACX,OAAO,IAAI,CAACF,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWG,CAAC;IACR,OAAO,IAAI,CAACH,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWI,CAAC;IACR,OAAO,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWK,CAAC;IACR,OAAO,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWM,MAAM;IACb,OAAO,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;EACUO,YAAY,CAACC,KAA6B;IAChD,IAAIC,IAAI,GAAG,EAAE;IAEb,KAAK,MAAMH,MAAM,IAAI,IAAI,CAACN,QAAQ,EAAE;MAChC,IAAIM,MAAM,CAACI,YAAY,EAAE;QACrBD,IAAI,IAAI,GAAG,IAAI,CAACE,cAAc,CAACL,MAAM,EAAEE,KAAK,CAAC,mBAAmBF,MAAM,CAACf,IAAI,OAAO;;;IAI1F,OAAOkB,IAAI;EACf;EAEUG,WAAW,CAACJ,KAA6B;IAC/C,KAAK,CAACI,WAAW,CAACJ,KAAK,CAAC;IAExB,IAAIA,KAAK,CAACK,MAAM,KAAK1B,wBAAwB,CAAC2B,MAAM,EAAE;MAClD,MAAM,uDAAuD;;IAGjEN,KAAK,CAACO,iBAAiB,IAAI,IAAI,CAACR,YAAY,CAACC,KAAK,CAAC;IAEnD,OAAO,IAAI;EACf;;AAGJpB,aAAa,CAAC,wBAAwB,EAAEC,cAAc,CAAC","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","FragCoordBlock","constructor","name","Fragment","registerOutput","Vector2","Vector3","Vector4","Float","getClassName","xy","_outputs","xyz","xyzw","x","y","z","output","writeOutputs","state","code","hasEndpoints","_declareOutput","_buildBlock","target","Vertex","compilationString"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/Fragment/fragCoordBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\n\r\n/**\r\n * Block used to make gl_FragCoord available\r\n */\r\nexport class FragCoordBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new FragCoordBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"FragCoordBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component\r\n     */\r\n    public get xy(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component\r\n     */\r\n    public get xyz(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyzw component\r\n     */\r\n    public get xyzw(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the x component\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the y component\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the z component\r\n     */\r\n    public get z(): NodeMaterialConnectionPoint {\r\n        return this._outputs[5];\r\n    }\r\n\r\n    /**\r\n     * Gets the w component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[6];\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    protected writeOutputs(state: NodeMaterialBuildState): string {\r\n        let code = \"\";\r\n\r\n        for (const output of this._outputs) {\r\n            if (output.hasEndpoints) {\r\n                code += `${this._declareOutput(output, state)} = gl_FragCoord.${output.name};\\r\\n`;\r\n            }\r\n        }\r\n\r\n        return code;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        if (state.target === NodeMaterialBlockTargets.Vertex) {\r\n            throw \"FragCoordBlock must only be used in a fragment shader\";\r\n        }\r\n\r\n        state.compilationString += this.writeOutputs(state);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.FragCoordBlock\", FragCoordBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}