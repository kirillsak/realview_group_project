{"ast":null,"code":"import { Vector3, Vector2 } from \"./math.vector.js\";\n/**\n * Contains position and normal vectors for a vertex\n */\nexport class PositionNormalVertex {\n  /**\n   * Creates a PositionNormalVertex\n   * @param position the position of the vertex (defaut: 0,0,0)\n   * @param normal the normal of the vertex (defaut: 0,1,0)\n   */\n  constructor( /** the position of the vertex (defaut: 0,0,0) */\n  position = Vector3.Zero(), /** the normal of the vertex (defaut: 0,1,0) */\n  normal = Vector3.Up()) {\n    this.position = position;\n    this.normal = normal;\n  }\n  /**\n   * Clones the PositionNormalVertex\n   * @returns the cloned PositionNormalVertex\n   */\n  clone() {\n    return new PositionNormalVertex(this.position.clone(), this.normal.clone());\n  }\n}\n/**\n * Contains position, normal and uv vectors for a vertex\n */\nexport class PositionNormalTextureVertex {\n  /**\n   * Creates a PositionNormalTextureVertex\n   * @param position the position of the vertex (defaut: 0,0,0)\n   * @param normal the normal of the vertex (defaut: 0,1,0)\n   * @param uv the uv of the vertex (default: 0,0)\n   */\n  constructor( /** the position of the vertex (defaut: 0,0,0) */\n  position = Vector3.Zero(), /** the normal of the vertex (defaut: 0,1,0) */\n  normal = Vector3.Up(), /** the uv of the vertex (default: 0,0) */\n  uv = Vector2.Zero()) {\n    this.position = position;\n    this.normal = normal;\n    this.uv = uv;\n  }\n  /**\n   * Clones the PositionNormalTextureVertex\n   * @returns the cloned PositionNormalTextureVertex\n   */\n  clone() {\n    return new PositionNormalTextureVertex(this.position.clone(), this.normal.clone(), this.uv.clone());\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,kBAAgB;AAEjD;;;AAGA,OAAM,MAAOC,oBAAoB;EAC7B;;;;;EAKAC,aACI;EACOC,WAAoBJ,OAAO,CAACK,IAAI,EAAE,EACzC;EACOC,SAAkBN,OAAO,CAACO,EAAE,EAAE;IAF9B,aAAQ,GAARH,QAAQ;IAER,WAAM,GAANE,MAAM;EACd;EAEH;;;;EAIOE,KAAK;IACR,OAAO,IAAIN,oBAAoB,CAAC,IAAI,CAACE,QAAQ,CAACI,KAAK,EAAE,EAAE,IAAI,CAACF,MAAM,CAACE,KAAK,EAAE,CAAC;EAC/E;;AAGJ;;;AAGA,OAAM,MAAOC,2BAA2B;EACpC;;;;;;EAMAN,aACI;EACOC,WAAoBJ,OAAO,CAACK,IAAI,EAAE,EACzC;EACOC,SAAkBN,OAAO,CAACO,EAAE,EAAE,EACrC;EACOG,KAAcT,OAAO,CAACI,IAAI,EAAE;IAJ5B,aAAQ,GAARD,QAAQ;IAER,WAAM,GAANE,MAAM;IAEN,OAAE,GAAFI,EAAE;EACV;EACH;;;;EAIOF,KAAK;IACR,OAAO,IAAIC,2BAA2B,CAAC,IAAI,CAACL,QAAQ,CAACI,KAAK,EAAE,EAAE,IAAI,CAACF,MAAM,CAACE,KAAK,EAAE,EAAE,IAAI,CAACE,EAAE,CAACF,KAAK,EAAE,CAAC;EACvG","names":["Vector3","Vector2","PositionNormalVertex","constructor","position","Zero","normal","Up","clone","PositionNormalTextureVertex","uv"],"sourceRoot":"","sources":["../../../../lts/core/generated/Maths/math.vertexFormat.ts"],"sourcesContent":["import { Vector3, Vector2 } from \"./math.vector\";\r\n\r\n/**\r\n * Contains position and normal vectors for a vertex\r\n */\r\nexport class PositionNormalVertex {\r\n    /**\r\n     * Creates a PositionNormalVertex\r\n     * @param position the position of the vertex (defaut: 0,0,0)\r\n     * @param normal the normal of the vertex (defaut: 0,1,0)\r\n     */\r\n    constructor(\r\n        /** the position of the vertex (defaut: 0,0,0) */\r\n        public position: Vector3 = Vector3.Zero(),\r\n        /** the normal of the vertex (defaut: 0,1,0) */\r\n        public normal: Vector3 = Vector3.Up()\r\n    ) {}\r\n\r\n    /**\r\n     * Clones the PositionNormalVertex\r\n     * @returns the cloned PositionNormalVertex\r\n     */\r\n    public clone(): PositionNormalVertex {\r\n        return new PositionNormalVertex(this.position.clone(), this.normal.clone());\r\n    }\r\n}\r\n\r\n/**\r\n * Contains position, normal and uv vectors for a vertex\r\n */\r\nexport class PositionNormalTextureVertex {\r\n    /**\r\n     * Creates a PositionNormalTextureVertex\r\n     * @param position the position of the vertex (defaut: 0,0,0)\r\n     * @param normal the normal of the vertex (defaut: 0,1,0)\r\n     * @param uv the uv of the vertex (default: 0,0)\r\n     */\r\n    constructor(\r\n        /** the position of the vertex (defaut: 0,0,0) */\r\n        public position: Vector3 = Vector3.Zero(),\r\n        /** the normal of the vertex (defaut: 0,1,0) */\r\n        public normal: Vector3 = Vector3.Up(),\r\n        /** the uv of the vertex (default: 0,0) */\r\n        public uv: Vector2 = Vector2.Zero()\r\n    ) {}\r\n    /**\r\n     * Clones the PositionNormalTextureVertex\r\n     * @returns the cloned PositionNormalTextureVertex\r\n     */\r\n    public clone(): PositionNormalTextureVertex {\r\n        return new PositionNormalTextureVertex(this.position.clone(), this.normal.clone(), this.uv.clone());\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}