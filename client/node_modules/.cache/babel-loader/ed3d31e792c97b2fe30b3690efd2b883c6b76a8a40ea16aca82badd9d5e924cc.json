{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Operations supported by the Wave block\n */\nexport var WaveBlockKind;\n(function (WaveBlockKind) {\n  /** SawTooth */\n  WaveBlockKind[WaveBlockKind[\"SawTooth\"] = 0] = \"SawTooth\";\n  /** Square */\n  WaveBlockKind[WaveBlockKind[\"Square\"] = 1] = \"Square\";\n  /** Triangle */\n  WaveBlockKind[WaveBlockKind[\"Triangle\"] = 2] = \"Triangle\";\n})(WaveBlockKind || (WaveBlockKind = {}));\n/**\n * Block used to apply wave operation to floats\n */\nexport class WaveBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new WaveBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    /**\n     * Gets or sets the kibnd of wave to be applied by the block\n     */\n    this.kind = WaveBlockKind.SawTooth;\n    this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n    this._outputs[0]._typeConnectionSource = this._inputs[0];\n    this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"WaveBlock\";\n  }\n  /**\n   * Gets the input component\n   */\n  get input() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const output = this._outputs[0];\n    switch (this.kind) {\n      case WaveBlockKind.SawTooth:\n        {\n          state.compilationString += this._declareOutput(output, state) + ` = ${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName});\\r\\n`;\n          break;\n        }\n      case WaveBlockKind.Square:\n        {\n          state.compilationString += this._declareOutput(output, state) + ` = 1.0 - 2.0 * round(fract(${this.input.associatedVariableName}));\\r\\n`;\n          break;\n        }\n      case WaveBlockKind.Triangle:\n        {\n          state.compilationString += this._declareOutput(output, state) + ` = 2.0 * abs(2.0 * (${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName}))) - 1.0;\\r\\n`;\n          break;\n        }\n    }\n    return this;\n  }\n  serialize() {\n    const serializationObject = super.serialize();\n    serializationObject.kind = this.kind;\n    return serializationObject;\n  }\n  _deserialize(serializationObject, scene, rootUrl) {\n    super._deserialize(serializationObject, scene, rootUrl);\n    this.kind = serializationObject.kind;\n  }\n}\nRegisterClass(\"BABYLON.WaveBlock\", WaveBlock);","map":{"version":3,"mappings":";AAAA,SAASA,iBAAiB,QAAQ,yBAAuB;AACzD,SAASC,qCAAqC,QAAQ,mDAAiD;AAGvG,SAASC,wBAAwB,QAAQ,sCAAoC;AAC7E,SAASC,aAAa,QAAQ,4BAA0B;AAGxD;;;AAGA,WAAYC,aAOX;AAPD,WAAYA,aAAa;EACrB;EACAA,yDAAQ;EACR;EACAA,qDAAM;EACN;EACAA,yDAAQ;AACZ,CAAC,EAPWA,aAAa,KAAbA,aAAa;AASzB;;;AAGA,OAAM,MAAOC,SAAU,SAAQL,iBAAiB;EAM5C;;;;EAIAM,YAAmBC,IAAY;IAC3B,KAAK,CAACA,IAAI,EAAEL,wBAAwB,CAACM,OAAO,CAAC;IAVjD;;;IAGO,SAAI,GAAGJ,aAAa,CAACK,QAAQ;IAShC,IAAI,CAACC,aAAa,CAAC,OAAO,EAAET,qCAAqC,CAACU,UAAU,CAAC;IAC7E,IAAI,CAACC,cAAc,CAAC,QAAQ,EAAEX,qCAAqC,CAACY,YAAY,CAAC;IAEjF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,qBAAqB,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IAExD,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,CAACC,4BAA4B,CAACC,IAAI,CAACjB,qCAAqC,CAACkB,MAAM,CAAC;EACnG;EAEA;;;;EAIOC,YAAY;IACf,OAAO,WAAW;EACtB;EAEA;;;EAGA,IAAWC,KAAK;IACZ,OAAO,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEA;;;EAGA,IAAWM,MAAM;IACb,OAAO,IAAI,CAACR,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEUS,WAAW,CAACC,KAA6B;IAC/C,KAAK,CAACD,WAAW,CAACC,KAAK,CAAC;IAExB,MAAMF,MAAM,GAAG,IAAI,CAACR,QAAQ,CAAC,CAAC,CAAC;IAE/B,QAAQ,IAAI,CAACW,IAAI;MACb,KAAKrB,aAAa,CAACK,QAAQ;QAAE;UACzBe,KAAK,CAACE,iBAAiB,IAAI,IAAI,CAACC,cAAc,CAACL,MAAM,EAAEE,KAAK,CAAC,GAAG,MAAM,IAAI,CAACH,KAAK,CAACO,sBAAsB,kBAAkB,IAAI,CAACP,KAAK,CAACO,sBAAsB,QAAQ;UAClK;;MAEJ,KAAKxB,aAAa,CAACyB,MAAM;QAAE;UACvBL,KAAK,CAACE,iBAAiB,IAAI,IAAI,CAACC,cAAc,CAACL,MAAM,EAAEE,KAAK,CAAC,GAAG,8BAA8B,IAAI,CAACH,KAAK,CAACO,sBAAsB,SAAS;UACxI;;MAEJ,KAAKxB,aAAa,CAAC0B,QAAQ;QAAE;UACzBN,KAAK,CAACE,iBAAiB,IACnB,IAAI,CAACC,cAAc,CAACL,MAAM,EAAEE,KAAK,CAAC,GAClC,uBAAuB,IAAI,CAACH,KAAK,CAACO,sBAAsB,kBAAkB,IAAI,CAACP,KAAK,CAACO,sBAAsB,gBAAgB;UAC/H;;IACH;IAGL,OAAO,IAAI;EACf;EAEOG,SAAS;IACZ,MAAMC,mBAAmB,GAAG,KAAK,CAACD,SAAS,EAAE;IAE7CC,mBAAmB,CAACP,IAAI,GAAG,IAAI,CAACA,IAAI;IAEpC,OAAOO,mBAAmB;EAC9B;EAEOC,YAAY,CAACD,mBAAwB,EAAEE,KAAY,EAAEC,OAAe;IACvE,KAAK,CAACF,YAAY,CAACD,mBAAmB,EAAEE,KAAK,EAAEC,OAAO,CAAC;IAEvD,IAAI,CAACV,IAAI,GAAGO,mBAAmB,CAACP,IAAI;EACxC;;AAGJtB,aAAa,CAAC,mBAAmB,EAAEE,SAAS,CAAC","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","WaveBlockKind","WaveBlock","constructor","name","Neutral","SawTooth","registerInput","AutoDetect","registerOutput","BasedOnInput","_outputs","_typeConnectionSource","_inputs","excludedConnectionPointTypes","push","Matrix","getClassName","input","output","_buildBlock","state","kind","compilationString","_declareOutput","associatedVariableName","Square","Triangle","serialize","serializationObject","_deserialize","scene","rootUrl"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/waveBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { Scene } from \"../../../scene\";\r\n\r\n/**\r\n * Operations supported by the Wave block\r\n */\r\nexport enum WaveBlockKind {\r\n    /** SawTooth */\r\n    SawTooth,\r\n    /** Square */\r\n    Square,\r\n    /** Triangle */\r\n    Triangle,\r\n}\r\n\r\n/**\r\n * Block used to apply wave operation to floats\r\n */\r\nexport class WaveBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Gets or sets the kibnd of wave to be applied by the block\r\n     */\r\n    public kind = WaveBlockKind.SawTooth;\r\n\r\n    /**\r\n     * Creates a new WaveBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"WaveBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        switch (this.kind) {\r\n            case WaveBlockKind.SawTooth: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = ${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName});\\r\\n`;\r\n                break;\r\n            }\r\n            case WaveBlockKind.Square: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = 1.0 - 2.0 * round(fract(${this.input.associatedVariableName}));\\r\\n`;\r\n                break;\r\n            }\r\n            case WaveBlockKind.Triangle: {\r\n                state.compilationString +=\r\n                    this._declareOutput(output, state) +\r\n                    ` = 2.0 * abs(2.0 * (${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName}))) - 1.0;\\r\\n`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.kind = this.kind;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.kind = serializationObject.kind;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.WaveBlock\", WaveBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}