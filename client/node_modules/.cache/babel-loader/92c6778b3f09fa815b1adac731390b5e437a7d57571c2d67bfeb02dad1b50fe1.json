{"ast":null,"code":"import { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\n/**\n * A generic trigger-only motion controller for WebXR\n */\nexport class WebXRGenericTriggerMotionController extends WebXRAbstractMotionController {\n  constructor(scene, gamepadObject, handedness) {\n    super(scene, GenericTriggerLayout[handedness], gamepadObject, handedness);\n    this.profileId = WebXRGenericTriggerMotionController.ProfileId;\n  }\n  _getFilenameAndPath() {\n    return {\n      filename: \"generic.babylon\",\n      path: \"https://controllers.babylonjs.com/generic/\"\n    };\n  }\n  _getModelLoadingConstraints() {\n    return true;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _processLoadedModel(meshes) {\n    // nothing to do\n  }\n  _setRootMesh(meshes) {\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    meshes.forEach(mesh => {\n      mesh.isPickable = false;\n      if (!mesh.parent) {\n        mesh.setParent(this.rootMesh);\n      }\n    });\n    this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n  }\n  _updateModel() {\n    // no-op\n  }\n}\n/**\n * Static version of the profile id of this controller\n */\nWebXRGenericTriggerMotionController.ProfileId = \"generic-trigger\";\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/generic/generic-trigger-touchpad-thumbstick.json\nconst GenericTriggerLayout = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-left\",\n    assetPath: \"left.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-right\",\n    assetPath: \"right.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-trigger-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,6BAA6B,QAAQ,oCAAkC;AAGhF,SAASC,IAAI,QAAQ,sBAAoB;AACzC,SAASC,UAAU,QAAQ,4BAA0B;AAErD;;;AAGA,OAAM,MAAOC,mCAAoC,SAAQH,6BAA6B;EAQlFI,YAAYC,KAAY,EAAEC,aAA6C,EAAEC,UAAsC;IAC3G,KAAK,CAACF,KAAK,EAAEG,oBAAoB,CAACD,UAAU,CAAC,EAAED,aAAa,EAAEC,UAAU,CAAC;IAHtE,cAAS,GAAGJ,mCAAmC,CAACM,SAAS;EAIhE;EAEUC,mBAAmB;IACzB,OAAO;MACHC,QAAQ,EAAE,iBAAiB;MAC3BC,IAAI,EAAE;KACT;EACL;EAEUC,2BAA2B;IACjC,OAAO,IAAI;EACf;EAEA;EACUC,mBAAmB,CAACC,MAAsB;IAChD;EAAA;EAGMC,YAAY,CAACD,MAAsB;IACzC,IAAI,CAACE,QAAQ,GAAG,IAAIhB,IAAI,CAAC,IAAI,CAACiB,SAAS,GAAG,GAAG,GAAG,IAAI,CAACX,UAAU,EAAE,IAAI,CAACF,KAAK,CAAC;IAE5EU,MAAM,CAACI,OAAO,CAAEC,IAAI,IAAI;MACpBA,IAAI,CAACC,UAAU,GAAG,KAAK;MACvB,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE;QACdF,IAAI,CAACG,SAAS,CAAC,IAAI,CAACN,QAAQ,CAAC;;IAErC,CAAC,CAAC;IAEF,IAAI,CAACA,QAAQ,CAACO,kBAAkB,GAAGtB,UAAU,CAACuB,eAAe,CAAC,CAAC,EAAEC,IAAI,CAACC,EAAE,EAAE,CAAC,CAAC;EAChF;EAEUC,YAAY;IAClB;EAAA;;AAzCJ;;;AAGczB,6CAAS,GAAG,iBAAiB;AA0C/C;AACA,MAAMK,oBAAoB,GAA+B;EACrDqB,IAAI,EAAE;IACFC,iBAAiB,EAAE,qBAAqB;IACxCC,UAAU,EAAE;MACR;MACA,qBAAqB,EAAE;QACnBC,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,qBAAqB;QACnCC,eAAe,EAAE;;KAExB;IACDC,cAAc,EAAE,aAAa;IAC7BF,YAAY,EAAE,sBAAsB;IACpCG,SAAS,EAAE;GACd;EACDC,KAAK,EAAE;IACHT,iBAAiB,EAAE,qBAAqB;IACxCC,UAAU,EAAE;MACR;MACA,qBAAqB,EAAE;QACnBC,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,qBAAqB;QACnCC,eAAe,EAAE;;KAExB;IACDC,cAAc,EAAE,aAAa;IAC7BF,YAAY,EAAE,uBAAuB;IACrCG,SAAS,EAAE;GACd;EACDE,IAAI,EAAE;IACFV,iBAAiB,EAAE,qBAAqB;IACxCC,UAAU,EAAE;MACR;MACA,qBAAqB,EAAE;QACnBC,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,qBAAqB;QACnCC,eAAe,EAAE;;KAExB;IACDC,cAAc,EAAE,aAAa;IAC7BF,YAAY,EAAE,sBAAsB;IACpCG,SAAS,EAAE;;CAElB","names":["WebXRAbstractMotionController","Mesh","Quaternion","WebXRGenericTriggerMotionController","constructor","scene","gamepadObject","handedness","GenericTriggerLayout","ProfileId","_getFilenameAndPath","filename","path","_getModelLoadingConstraints","_processLoadedModel","meshes","_setRootMesh","rootMesh","profileId","forEach","mesh","isPickable","parent","setParent","rotationQuaternion","FromEulerAngles","Math","PI","_updateModel","left","selectComponentId","components","type","gamepadIndices","button","rootNodeName","visualResponses","gamepadMapping","assetPath","right","none"],"sourceRoot":"","sources":["../../../../../lts/core/generated/XR/motionController/webXRGenericMotionController.ts"],"sourcesContent":["import type { IMinimalMotionControllerObject, MotionControllerHandedness, IMotionControllerLayoutMap } from \"./webXRAbstractMotionController\";\r\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Mesh } from \"../../Meshes/mesh\";\r\nimport { Quaternion } from \"../../Maths/math.vector\";\r\n\r\n/**\r\n * A generic trigger-only motion controller for WebXR\r\n */\r\nexport class WebXRGenericTriggerMotionController extends WebXRAbstractMotionController {\r\n    /**\r\n     * Static version of the profile id of this controller\r\n     */\r\n    public static ProfileId = \"generic-trigger\";\r\n\r\n    public profileId = WebXRGenericTriggerMotionController.ProfileId;\r\n\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        super(scene, GenericTriggerLayout[handedness], gamepadObject, handedness);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        return {\r\n            filename: \"generic.babylon\",\r\n            path: \"https://controllers.babylonjs.com/generic/\",\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        return true;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected _processLoadedModel(meshes: AbstractMesh[]): void {\r\n        // nothing to do\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\r\n\r\n        meshes.forEach((mesh) => {\r\n            mesh.isPickable = false;\r\n            if (!mesh.parent) {\r\n                mesh.setParent(this.rootMesh);\r\n            }\r\n        });\r\n\r\n        this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op\r\n    }\r\n}\r\n\r\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/generic/generic-trigger-touchpad-thumbstick.json\r\nconst GenericTriggerLayout: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-trigger-left\",\r\n        assetPath: \"left.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-trigger-right\",\r\n        assetPath: \"right.glb\",\r\n    },\r\n    none: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-trigger-none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}