{"ast":null,"code":"import { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\nimport { SceneLoader } from \"../../Loading/sceneLoader.js\";\nimport { Logger } from \"../../Misc/logger.js\";\n/**\n * The motion controller class for all microsoft mixed reality controllers\n */\nexport class WebXRMicrosoftMixedRealityController extends WebXRAbstractMotionController {\n  constructor(scene, gamepadObject, handedness) {\n    super(scene, MixedRealityProfile[\"left-right\"], gamepadObject, handedness);\n    // use this in the future - https://github.com/immersive-web/webxr-input-profiles/tree/master/packages/assets/profiles/microsoft\n    this._mapping = {\n      defaultButton: {\n        valueNodeName: \"VALUE\",\n        unpressedNodeName: \"UNPRESSED\",\n        pressedNodeName: \"PRESSED\"\n      },\n      defaultAxis: {\n        valueNodeName: \"VALUE\",\n        minNodeName: \"MIN\",\n        maxNodeName: \"MAX\"\n      },\n      buttons: {\n        \"xr-standard-trigger\": {\n          rootNodeName: \"SELECT\",\n          componentProperty: \"button\",\n          states: [\"default\", \"touched\", \"pressed\"]\n        },\n        \"xr-standard-squeeze\": {\n          rootNodeName: \"GRASP\",\n          componentProperty: \"state\",\n          states: [\"pressed\"]\n        },\n        \"xr-standard-touchpad\": {\n          rootNodeName: \"TOUCHPAD_PRESS\",\n          labelAnchorNodeName: \"squeeze-label\",\n          touchPointNodeName: \"TOUCH\" // TODO - use this for visual feedback\n        },\n\n        \"xr-standard-thumbstick\": {\n          rootNodeName: \"THUMBSTICK_PRESS\",\n          componentProperty: \"state\",\n          states: [\"pressed\"]\n        }\n      },\n      axes: {\n        \"xr-standard-touchpad\": {\n          \"x-axis\": {\n            rootNodeName: \"TOUCHPAD_TOUCH_X\"\n          },\n          \"y-axis\": {\n            rootNodeName: \"TOUCHPAD_TOUCH_Y\"\n          }\n        },\n        \"xr-standard-thumbstick\": {\n          \"x-axis\": {\n            rootNodeName: \"THUMBSTICK_X\"\n          },\n          \"y-axis\": {\n            rootNodeName: \"THUMBSTICK_Y\"\n          }\n        }\n      }\n    };\n    this.profileId = \"microsoft-mixed-reality\";\n  }\n  _getFilenameAndPath() {\n    let filename = \"\";\n    if (this.handedness === \"left\") {\n      filename = WebXRMicrosoftMixedRealityController.MODEL_LEFT_FILENAME;\n    } else {\n      // Right is the default if no hand is specified\n      filename = WebXRMicrosoftMixedRealityController.MODEL_RIGHT_FILENAME;\n    }\n    const device = \"default\";\n    const path = WebXRMicrosoftMixedRealityController.MODEL_BASE_URL + device + \"/\";\n    return {\n      filename,\n      path\n    };\n  }\n  _getModelLoadingConstraints() {\n    const glbLoaded = SceneLoader.IsPluginForExtensionAvailable(\".glb\");\n    if (!glbLoaded) {\n      Logger.Warn(\"glTF / glb loaded was not registered, using generic controller instead\");\n    }\n    return glbLoaded;\n  }\n  _processLoadedModel(_meshes) {\n    if (!this.rootMesh) {\n      return;\n    }\n    // Button Meshes\n    this.getComponentIds().forEach((id, i) => {\n      if (this.disableAnimation) {\n        return;\n      }\n      if (id && this.rootMesh) {\n        const buttonMap = this._mapping.buttons[id];\n        const buttonMeshName = buttonMap.rootNodeName;\n        if (!buttonMeshName) {\n          Logger.Log(\"Skipping unknown button at index: \" + i + \" with mapped name: \" + id);\n          return;\n        }\n        const buttonMesh = this._getChildByName(this.rootMesh, buttonMeshName);\n        if (!buttonMesh) {\n          Logger.Warn(\"Missing button mesh with name: \" + buttonMeshName);\n          return;\n        }\n        buttonMap.valueMesh = this._getImmediateChildByName(buttonMesh, this._mapping.defaultButton.valueNodeName);\n        buttonMap.pressedMesh = this._getImmediateChildByName(buttonMesh, this._mapping.defaultButton.pressedNodeName);\n        buttonMap.unpressedMesh = this._getImmediateChildByName(buttonMesh, this._mapping.defaultButton.unpressedNodeName);\n        if (buttonMap.valueMesh && buttonMap.pressedMesh && buttonMap.unpressedMesh) {\n          const comp = this.getComponent(id);\n          if (comp) {\n            comp.onButtonStateChangedObservable.add(component => {\n              this._lerpTransform(buttonMap, component.value);\n            }, undefined, true);\n          }\n        } else {\n          // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\n          Logger.Warn(\"Missing button submesh under mesh with name: \" + buttonMeshName);\n        }\n      }\n    });\n    // Axis Meshes\n    this.getComponentIds().forEach(id => {\n      const comp = this.getComponent(id);\n      if (!comp.isAxes()) {\n        return;\n      }\n      [\"x-axis\", \"y-axis\"].forEach(axis => {\n        if (!this.rootMesh) {\n          return;\n        }\n        const axisMap = this._mapping.axes[id][axis];\n        const axisMesh = this._getChildByName(this.rootMesh, axisMap.rootNodeName);\n        if (!axisMesh) {\n          Logger.Warn(\"Missing axis mesh with name: \" + axisMap.rootNodeName);\n          return;\n        }\n        axisMap.valueMesh = this._getImmediateChildByName(axisMesh, this._mapping.defaultAxis.valueNodeName);\n        axisMap.minMesh = this._getImmediateChildByName(axisMesh, this._mapping.defaultAxis.minNodeName);\n        axisMap.maxMesh = this._getImmediateChildByName(axisMesh, this._mapping.defaultAxis.maxNodeName);\n        if (axisMap.valueMesh && axisMap.minMesh && axisMap.maxMesh) {\n          if (comp) {\n            comp.onAxisValueChangedObservable.add(axisValues => {\n              const value = axis === \"x-axis\" ? axisValues.x : axisValues.y;\n              this._lerpTransform(axisMap, value, true);\n            }, undefined, true);\n          }\n        } else {\n          // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\n          Logger.Warn(\"Missing axis submesh under mesh with name: \" + axisMap.rootNodeName);\n        }\n      });\n    });\n  }\n  _setRootMesh(meshes) {\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    this.rootMesh.isPickable = false;\n    let rootMesh;\n    // Find the root node in the loaded glTF scene, and attach it as a child of 'parentMesh'\n    for (let i = 0; i < meshes.length; i++) {\n      const mesh = meshes[i];\n      mesh.isPickable = false;\n      if (!mesh.parent) {\n        // Handle root node, attach to the new parentMesh\n        rootMesh = mesh;\n      }\n    }\n    if (rootMesh) {\n      rootMesh.setParent(this.rootMesh);\n    }\n    if (!this.scene.useRightHandedSystem) {\n      this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n    }\n  }\n  _updateModel() {\n    // no-op. model is updated using observables.\n  }\n}\n/**\n * The base url used to load the left and right controller models\n */\nWebXRMicrosoftMixedRealityController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/microsoft/\";\n/**\n * The name of the left controller model file\n */\nWebXRMicrosoftMixedRealityController.MODEL_LEFT_FILENAME = \"left.glb\";\n/**\n * The name of the right controller model file\n */\nWebXRMicrosoftMixedRealityController.MODEL_RIGHT_FILENAME = \"right.glb\";\n// register the profile\nWebXRMotionControllerManager.RegisterController(\"windows-mixed-reality\", (xrInput, scene) => {\n  return new WebXRMicrosoftMixedRealityController(scene, xrInput.gamepad, xrInput.handedness);\n});\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/microsoft/microsoft-mixed-reality.json\nconst MixedRealityProfile = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {\n          xr_standard_trigger_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_trigger_pressed_value\",\n            minNodeName: \"xr_standard_trigger_pressed_min\",\n            maxNodeName: \"xr_standard_trigger_pressed_max\"\n          }\n        }\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {\n          xr_standard_squeeze_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_squeeze_pressed_value\",\n            minNodeName: \"xr_standard_squeeze_pressed_min\",\n            maxNodeName: \"xr_standard_squeeze_pressed_max\"\n          }\n        }\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {\n          xr_standard_touchpad_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_pressed_value\",\n            minNodeName: \"xr_standard_touchpad_pressed_min\",\n            maxNodeName: \"xr_standard_touchpad_pressed_max\"\n          },\n          xr_standard_touchpad_xaxis_pressed: {\n            componentProperty: \"xAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_xaxis_pressed_value\",\n            minNodeName: \"xr_standard_touchpad_xaxis_pressed_min\",\n            maxNodeName: \"xr_standard_touchpad_xaxis_pressed_max\"\n          },\n          xr_standard_touchpad_yaxis_pressed: {\n            componentProperty: \"yAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_yaxis_pressed_value\",\n            minNodeName: \"xr_standard_touchpad_yaxis_pressed_min\",\n            maxNodeName: \"xr_standard_touchpad_yaxis_pressed_max\"\n          },\n          xr_standard_touchpad_xaxis_touched: {\n            componentProperty: \"xAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_xaxis_touched_value\",\n            minNodeName: \"xr_standard_touchpad_xaxis_touched_min\",\n            maxNodeName: \"xr_standard_touchpad_xaxis_touched_max\"\n          },\n          xr_standard_touchpad_yaxis_touched: {\n            componentProperty: \"yAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_yaxis_touched_value\",\n            minNodeName: \"xr_standard_touchpad_yaxis_touched_min\",\n            maxNodeName: \"xr_standard_touchpad_yaxis_touched_max\"\n          },\n          xr_standard_touchpad_axes_touched: {\n            componentProperty: \"state\",\n            states: [\"touched\", \"pressed\"],\n            valueNodeProperty: \"visibility\",\n            valueNodeName: \"xr_standard_touchpad_axes_touched_value\"\n          }\n        },\n        touchPointNodeName: \"xr_standard_touchpad_axes_touched_value\"\n      },\n      \"xr-standard-thumbstick\": {\n        type: \"thumbstick\",\n        gamepadIndices: {\n          button: 3,\n          xAxis: 2,\n          yAxis: 3\n        },\n        rootNodeName: \"xr_standard_thumbstick\",\n        visualResponses: {\n          xr_standard_thumbstick_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_thumbstick_pressed_value\",\n            minNodeName: \"xr_standard_thumbstick_pressed_min\",\n            maxNodeName: \"xr_standard_thumbstick_pressed_max\"\n          },\n          xr_standard_thumbstick_xaxis_pressed: {\n            componentProperty: \"xAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_thumbstick_xaxis_pressed_value\",\n            minNodeName: \"xr_standard_thumbstick_xaxis_pressed_min\",\n            maxNodeName: \"xr_standard_thumbstick_xaxis_pressed_max\"\n          },\n          xr_standard_thumbstick_yaxis_pressed: {\n            componentProperty: \"yAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_thumbstick_yaxis_pressed_value\",\n            minNodeName: \"xr_standard_thumbstick_yaxis_pressed_min\",\n            maxNodeName: \"xr_standard_thumbstick_yaxis_pressed_max\"\n          }\n        }\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"microsoft-mixed-reality-left\",\n    assetPath: \"left.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {\n          xr_standard_trigger_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_trigger_pressed_value\",\n            minNodeName: \"xr_standard_trigger_pressed_min\",\n            maxNodeName: \"xr_standard_trigger_pressed_max\"\n          }\n        }\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {\n          xr_standard_squeeze_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_squeeze_pressed_value\",\n            minNodeName: \"xr_standard_squeeze_pressed_min\",\n            maxNodeName: \"xr_standard_squeeze_pressed_max\"\n          }\n        }\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {\n          xr_standard_touchpad_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_pressed_value\",\n            minNodeName: \"xr_standard_touchpad_pressed_min\",\n            maxNodeName: \"xr_standard_touchpad_pressed_max\"\n          },\n          xr_standard_touchpad_xaxis_pressed: {\n            componentProperty: \"xAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_xaxis_pressed_value\",\n            minNodeName: \"xr_standard_touchpad_xaxis_pressed_min\",\n            maxNodeName: \"xr_standard_touchpad_xaxis_pressed_max\"\n          },\n          xr_standard_touchpad_yaxis_pressed: {\n            componentProperty: \"yAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_yaxis_pressed_value\",\n            minNodeName: \"xr_standard_touchpad_yaxis_pressed_min\",\n            maxNodeName: \"xr_standard_touchpad_yaxis_pressed_max\"\n          },\n          xr_standard_touchpad_xaxis_touched: {\n            componentProperty: \"xAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_xaxis_touched_value\",\n            minNodeName: \"xr_standard_touchpad_xaxis_touched_min\",\n            maxNodeName: \"xr_standard_touchpad_xaxis_touched_max\"\n          },\n          xr_standard_touchpad_yaxis_touched: {\n            componentProperty: \"yAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_touchpad_yaxis_touched_value\",\n            minNodeName: \"xr_standard_touchpad_yaxis_touched_min\",\n            maxNodeName: \"xr_standard_touchpad_yaxis_touched_max\"\n          },\n          xr_standard_touchpad_axes_touched: {\n            componentProperty: \"state\",\n            states: [\"touched\", \"pressed\"],\n            valueNodeProperty: \"visibility\",\n            valueNodeName: \"xr_standard_touchpad_axes_touched_value\"\n          }\n        },\n        touchPointNodeName: \"xr_standard_touchpad_axes_touched_value\"\n      },\n      \"xr-standard-thumbstick\": {\n        type: \"thumbstick\",\n        gamepadIndices: {\n          button: 3,\n          xAxis: 2,\n          yAxis: 3\n        },\n        rootNodeName: \"xr_standard_thumbstick\",\n        visualResponses: {\n          xr_standard_thumbstick_pressed: {\n            componentProperty: \"button\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_thumbstick_pressed_value\",\n            minNodeName: \"xr_standard_thumbstick_pressed_min\",\n            maxNodeName: \"xr_standard_thumbstick_pressed_max\"\n          },\n          xr_standard_thumbstick_xaxis_pressed: {\n            componentProperty: \"xAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_thumbstick_xaxis_pressed_value\",\n            minNodeName: \"xr_standard_thumbstick_xaxis_pressed_min\",\n            maxNodeName: \"xr_standard_thumbstick_xaxis_pressed_max\"\n          },\n          xr_standard_thumbstick_yaxis_pressed: {\n            componentProperty: \"yAxis\",\n            states: [\"default\", \"touched\", \"pressed\"],\n            valueNodeProperty: \"transform\",\n            valueNodeName: \"xr_standard_thumbstick_yaxis_pressed_value\",\n            minNodeName: \"xr_standard_thumbstick_yaxis_pressed_min\",\n            maxNodeName: \"xr_standard_thumbstick_yaxis_pressed_max\"\n          }\n        }\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"microsoft-mixed-reality-right\",\n    assetPath: \"right.glb\"\n  }\n};","map":{"version":3,"mappings":"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","names":["WebXRAbstractMotionController","WebXRMotionControllerManager","Mesh","Quaternion","SceneLoader","Logger","WebXRMicrosoftMixedRealityController","constructor","scene","gamepadObject","handedness","MixedRealityProfile","defaultButton","valueNodeName","unpressedNodeName","pressedNodeName","defaultAxis","minNodeName","maxNodeName","buttons","rootNodeName","componentProperty","states","labelAnchorNodeName","touchPointNodeName","axes","_getFilenameAndPath","filename","MODEL_LEFT_FILENAME","MODEL_RIGHT_FILENAME","device","path","MODEL_BASE_URL","_getModelLoadingConstraints","glbLoaded","IsPluginForExtensionAvailable","Warn","_processLoadedModel","_meshes","rootMesh","getComponentIds","forEach","id","i","disableAnimation","buttonMap","_mapping","buttonMeshName","Log","buttonMesh","_getChildByName","valueMesh","_getImmediateChildByName","pressedMesh","unpressedMesh","comp","getComponent","onButtonStateChangedObservable","add","component","_lerpTransform","value","undefined","isAxes","axis","axisMap","axisMesh","minMesh","maxMesh","onAxisValueChangedObservable","axisValues","x","y","_setRootMesh","meshes","profileId","isPickable","length","mesh","parent","setParent","useRightHandedSystem","rotationQuaternion","FromEulerAngles","Math","PI","_updateModel","RegisterController","xrInput","gamepad","left","selectComponentId","components","type","gamepadIndices","button","visualResponses","xr_standard_trigger_pressed","valueNodeProperty","xr_standard_squeeze_pressed","xAxis","yAxis","xr_standard_touchpad_pressed","xr_standard_touchpad_xaxis_pressed","xr_standard_touchpad_yaxis_pressed","xr_standard_touchpad_xaxis_touched","xr_standard_touchpad_yaxis_touched","xr_standard_touchpad_axes_touched","xr_standard_thumbstick_pressed","xr_standard_thumbstick_xaxis_pressed","xr_standard_thumbstick_yaxis_pressed","gamepadMapping","assetPath","right"],"sourceRoot":"","sources":["../../../../../lts/core/generated/XR/motionController/webXRMicrosoftMixedRealityController.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { IMinimalMotionControllerObject, MotionControllerHandedness, IMotionControllerLayoutMap } from \"./webXRAbstractMotionController\";\r\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Mesh } from \"../../Meshes/mesh\";\r\nimport { Quaternion } from \"../../Maths/math.vector\";\r\nimport { SceneLoader } from \"../../Loading/sceneLoader\";\r\nimport { Logger } from \"../../Misc/logger\";\r\n\r\n/**\r\n * The motion controller class for all microsoft mixed reality controllers\r\n */\r\nexport class WebXRMicrosoftMixedRealityController extends WebXRAbstractMotionController {\r\n    // use this in the future - https://github.com/immersive-web/webxr-input-profiles/tree/master/packages/assets/profiles/microsoft\r\n    protected readonly _mapping = {\r\n        defaultButton: {\r\n            valueNodeName: \"VALUE\",\r\n            unpressedNodeName: \"UNPRESSED\",\r\n            pressedNodeName: \"PRESSED\",\r\n        },\r\n        defaultAxis: {\r\n            valueNodeName: \"VALUE\",\r\n            minNodeName: \"MIN\",\r\n            maxNodeName: \"MAX\",\r\n        },\r\n        buttons: {\r\n            \"xr-standard-trigger\": {\r\n                rootNodeName: \"SELECT\",\r\n                componentProperty: \"button\",\r\n                states: [\"default\", \"touched\", \"pressed\"],\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                rootNodeName: \"GRASP\",\r\n                componentProperty: \"state\",\r\n                states: [\"pressed\"],\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                rootNodeName: \"TOUCHPAD_PRESS\",\r\n                labelAnchorNodeName: \"squeeze-label\",\r\n                touchPointNodeName: \"TOUCH\", // TODO - use this for visual feedback\r\n            },\r\n            \"xr-standard-thumbstick\": {\r\n                rootNodeName: \"THUMBSTICK_PRESS\",\r\n                componentProperty: \"state\",\r\n                states: [\"pressed\"],\r\n            },\r\n        },\r\n        axes: {\r\n            \"xr-standard-touchpad\": {\r\n                \"x-axis\": {\r\n                    rootNodeName: \"TOUCHPAD_TOUCH_X\",\r\n                },\r\n                \"y-axis\": {\r\n                    rootNodeName: \"TOUCHPAD_TOUCH_Y\",\r\n                },\r\n            },\r\n            \"xr-standard-thumbstick\": {\r\n                \"x-axis\": {\r\n                    rootNodeName: \"THUMBSTICK_X\",\r\n                },\r\n                \"y-axis\": {\r\n                    rootNodeName: \"THUMBSTICK_Y\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    /**\r\n     * The base url used to load the left and right controller models\r\n     */\r\n    public static MODEL_BASE_URL: string = \"https://controllers.babylonjs.com/microsoft/\";\r\n    /**\r\n     * The name of the left controller model file\r\n     */\r\n    public static MODEL_LEFT_FILENAME: string = \"left.glb\";\r\n    /**\r\n     * The name of the right controller model file\r\n     */\r\n    public static MODEL_RIGHT_FILENAME: string = \"right.glb\";\r\n\r\n    public profileId = \"microsoft-mixed-reality\";\r\n\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        super(scene, MixedRealityProfile[\"left-right\"], gamepadObject, handedness);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        let filename = \"\";\r\n        if (this.handedness === \"left\") {\r\n            filename = WebXRMicrosoftMixedRealityController.MODEL_LEFT_FILENAME;\r\n        } else {\r\n            // Right is the default if no hand is specified\r\n            filename = WebXRMicrosoftMixedRealityController.MODEL_RIGHT_FILENAME;\r\n        }\r\n\r\n        const device = \"default\";\r\n        const path = WebXRMicrosoftMixedRealityController.MODEL_BASE_URL + device + \"/\";\r\n        return {\r\n            filename,\r\n            path,\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        const glbLoaded = SceneLoader.IsPluginForExtensionAvailable(\".glb\");\r\n        if (!glbLoaded) {\r\n            Logger.Warn(\"glTF / glb loaded was not registered, using generic controller instead\");\r\n        }\r\n        return glbLoaded;\r\n    }\r\n\r\n    protected _processLoadedModel(_meshes: AbstractMesh[]): void {\r\n        if (!this.rootMesh) {\r\n            return;\r\n        }\r\n\r\n        // Button Meshes\r\n        this.getComponentIds().forEach((id, i) => {\r\n            if (this.disableAnimation) {\r\n                return;\r\n            }\r\n            if (id && this.rootMesh) {\r\n                const buttonMap = (<any>this._mapping.buttons)[id];\r\n                const buttonMeshName = buttonMap.rootNodeName;\r\n                if (!buttonMeshName) {\r\n                    Logger.Log(\"Skipping unknown button at index: \" + i + \" with mapped name: \" + id);\r\n                    return;\r\n                }\r\n\r\n                const buttonMesh = this._getChildByName(this.rootMesh, buttonMeshName);\r\n                if (!buttonMesh) {\r\n                    Logger.Warn(\"Missing button mesh with name: \" + buttonMeshName);\r\n                    return;\r\n                }\r\n\r\n                buttonMap.valueMesh = this._getImmediateChildByName(buttonMesh, this._mapping.defaultButton.valueNodeName);\r\n                buttonMap.pressedMesh = this._getImmediateChildByName(buttonMesh, this._mapping.defaultButton.pressedNodeName);\r\n                buttonMap.unpressedMesh = this._getImmediateChildByName(buttonMesh, this._mapping.defaultButton.unpressedNodeName);\r\n\r\n                if (buttonMap.valueMesh && buttonMap.pressedMesh && buttonMap.unpressedMesh) {\r\n                    const comp = this.getComponent(id);\r\n                    if (comp) {\r\n                        comp.onButtonStateChangedObservable.add(\r\n                            (component) => {\r\n                                this._lerpTransform(buttonMap, component.value);\r\n                            },\r\n                            undefined,\r\n                            true\r\n                        );\r\n                    }\r\n                } else {\r\n                    // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\r\n                    Logger.Warn(\"Missing button submesh under mesh with name: \" + buttonMeshName);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Axis Meshes\r\n        this.getComponentIds().forEach((id) => {\r\n            const comp = this.getComponent(id);\r\n            if (!comp.isAxes()) {\r\n                return;\r\n            }\r\n\r\n            [\"x-axis\", \"y-axis\"].forEach((axis) => {\r\n                if (!this.rootMesh) {\r\n                    return;\r\n                }\r\n                const axisMap = (<any>this._mapping.axes)[id][axis];\r\n\r\n                const axisMesh = this._getChildByName(this.rootMesh, axisMap.rootNodeName);\r\n                if (!axisMesh) {\r\n                    Logger.Warn(\"Missing axis mesh with name: \" + axisMap.rootNodeName);\r\n                    return;\r\n                }\r\n\r\n                axisMap.valueMesh = this._getImmediateChildByName(axisMesh, this._mapping.defaultAxis.valueNodeName);\r\n                axisMap.minMesh = this._getImmediateChildByName(axisMesh, this._mapping.defaultAxis.minNodeName);\r\n                axisMap.maxMesh = this._getImmediateChildByName(axisMesh, this._mapping.defaultAxis.maxNodeName);\r\n\r\n                if (axisMap.valueMesh && axisMap.minMesh && axisMap.maxMesh) {\r\n                    if (comp) {\r\n                        comp.onAxisValueChangedObservable.add(\r\n                            (axisValues) => {\r\n                                const value = axis === \"x-axis\" ? axisValues.x : axisValues.y;\r\n                                this._lerpTransform(axisMap, value, true);\r\n                            },\r\n                            undefined,\r\n                            true\r\n                        );\r\n                    }\r\n                } else {\r\n                    // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\r\n                    Logger.Warn(\"Missing axis submesh under mesh with name: \" + axisMap.rootNodeName);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\r\n        this.rootMesh.isPickable = false;\r\n        let rootMesh;\r\n        // Find the root node in the loaded glTF scene, and attach it as a child of 'parentMesh'\r\n        for (let i = 0; i < meshes.length; i++) {\r\n            const mesh = meshes[i];\r\n\r\n            mesh.isPickable = false;\r\n\r\n            if (!mesh.parent) {\r\n                // Handle root node, attach to the new parentMesh\r\n                rootMesh = mesh;\r\n            }\r\n        }\r\n\r\n        if (rootMesh) {\r\n            rootMesh.setParent(this.rootMesh);\r\n        }\r\n\r\n        if (!this.scene.useRightHandedSystem) {\r\n            this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\r\n        }\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op. model is updated using observables.\r\n    }\r\n}\r\n\r\n// register the profile\r\nWebXRMotionControllerManager.RegisterController(\"windows-mixed-reality\", (xrInput: XRInputSource, scene: Scene) => {\r\n    return new WebXRMicrosoftMixedRealityController(scene, <any>xrInput.gamepad, xrInput.handedness);\r\n});\r\n\r\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/microsoft/microsoft-mixed-reality.json\r\nconst MixedRealityProfile: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {\r\n                    xr_standard_trigger_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_trigger_pressed_value\",\r\n                        minNodeName: \"xr_standard_trigger_pressed_min\",\r\n                        maxNodeName: \"xr_standard_trigger_pressed_max\",\r\n                    },\r\n                },\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {\r\n                    xr_standard_squeeze_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_squeeze_pressed_value\",\r\n                        minNodeName: \"xr_standard_squeeze_pressed_min\",\r\n                        maxNodeName: \"xr_standard_squeeze_pressed_max\",\r\n                    },\r\n                },\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {\r\n                    xr_standard_touchpad_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_pressed_value\",\r\n                        minNodeName: \"xr_standard_touchpad_pressed_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_pressed_max\",\r\n                    },\r\n                    xr_standard_touchpad_xaxis_pressed: {\r\n                        componentProperty: \"xAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_xaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_touchpad_xaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_xaxis_pressed_max\",\r\n                    },\r\n                    xr_standard_touchpad_yaxis_pressed: {\r\n                        componentProperty: \"yAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_yaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_touchpad_yaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_yaxis_pressed_max\",\r\n                    },\r\n                    xr_standard_touchpad_xaxis_touched: {\r\n                        componentProperty: \"xAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_xaxis_touched_value\",\r\n                        minNodeName: \"xr_standard_touchpad_xaxis_touched_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_xaxis_touched_max\",\r\n                    },\r\n                    xr_standard_touchpad_yaxis_touched: {\r\n                        componentProperty: \"yAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_yaxis_touched_value\",\r\n                        minNodeName: \"xr_standard_touchpad_yaxis_touched_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_yaxis_touched_max\",\r\n                    },\r\n                    xr_standard_touchpad_axes_touched: {\r\n                        componentProperty: \"state\",\r\n                        states: [\"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"visibility\",\r\n                        valueNodeName: \"xr_standard_touchpad_axes_touched_value\",\r\n                    },\r\n                },\r\n                touchPointNodeName: \"xr_standard_touchpad_axes_touched_value\",\r\n            },\r\n            \"xr-standard-thumbstick\": {\r\n                type: \"thumbstick\",\r\n                gamepadIndices: {\r\n                    button: 3,\r\n                    xAxis: 2,\r\n                    yAxis: 3,\r\n                },\r\n                rootNodeName: \"xr_standard_thumbstick\",\r\n                visualResponses: {\r\n                    xr_standard_thumbstick_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_thumbstick_pressed_value\",\r\n                        minNodeName: \"xr_standard_thumbstick_pressed_min\",\r\n                        maxNodeName: \"xr_standard_thumbstick_pressed_max\",\r\n                    },\r\n                    xr_standard_thumbstick_xaxis_pressed: {\r\n                        componentProperty: \"xAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_thumbstick_xaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_thumbstick_xaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_thumbstick_xaxis_pressed_max\",\r\n                    },\r\n                    xr_standard_thumbstick_yaxis_pressed: {\r\n                        componentProperty: \"yAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_thumbstick_yaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_thumbstick_yaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_thumbstick_yaxis_pressed_max\",\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"microsoft-mixed-reality-left\",\r\n        assetPath: \"left.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {\r\n                    xr_standard_trigger_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_trigger_pressed_value\",\r\n                        minNodeName: \"xr_standard_trigger_pressed_min\",\r\n                        maxNodeName: \"xr_standard_trigger_pressed_max\",\r\n                    },\r\n                },\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {\r\n                    xr_standard_squeeze_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_squeeze_pressed_value\",\r\n                        minNodeName: \"xr_standard_squeeze_pressed_min\",\r\n                        maxNodeName: \"xr_standard_squeeze_pressed_max\",\r\n                    },\r\n                },\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {\r\n                    xr_standard_touchpad_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_pressed_value\",\r\n                        minNodeName: \"xr_standard_touchpad_pressed_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_pressed_max\",\r\n                    },\r\n                    xr_standard_touchpad_xaxis_pressed: {\r\n                        componentProperty: \"xAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_xaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_touchpad_xaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_xaxis_pressed_max\",\r\n                    },\r\n                    xr_standard_touchpad_yaxis_pressed: {\r\n                        componentProperty: \"yAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_yaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_touchpad_yaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_yaxis_pressed_max\",\r\n                    },\r\n                    xr_standard_touchpad_xaxis_touched: {\r\n                        componentProperty: \"xAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_xaxis_touched_value\",\r\n                        minNodeName: \"xr_standard_touchpad_xaxis_touched_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_xaxis_touched_max\",\r\n                    },\r\n                    xr_standard_touchpad_yaxis_touched: {\r\n                        componentProperty: \"yAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_touchpad_yaxis_touched_value\",\r\n                        minNodeName: \"xr_standard_touchpad_yaxis_touched_min\",\r\n                        maxNodeName: \"xr_standard_touchpad_yaxis_touched_max\",\r\n                    },\r\n                    xr_standard_touchpad_axes_touched: {\r\n                        componentProperty: \"state\",\r\n                        states: [\"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"visibility\",\r\n                        valueNodeName: \"xr_standard_touchpad_axes_touched_value\",\r\n                    },\r\n                },\r\n                touchPointNodeName: \"xr_standard_touchpad_axes_touched_value\",\r\n            },\r\n            \"xr-standard-thumbstick\": {\r\n                type: \"thumbstick\",\r\n                gamepadIndices: {\r\n                    button: 3,\r\n                    xAxis: 2,\r\n                    yAxis: 3,\r\n                },\r\n                rootNodeName: \"xr_standard_thumbstick\",\r\n                visualResponses: {\r\n                    xr_standard_thumbstick_pressed: {\r\n                        componentProperty: \"button\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_thumbstick_pressed_value\",\r\n                        minNodeName: \"xr_standard_thumbstick_pressed_min\",\r\n                        maxNodeName: \"xr_standard_thumbstick_pressed_max\",\r\n                    },\r\n                    xr_standard_thumbstick_xaxis_pressed: {\r\n                        componentProperty: \"xAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_thumbstick_xaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_thumbstick_xaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_thumbstick_xaxis_pressed_max\",\r\n                    },\r\n                    xr_standard_thumbstick_yaxis_pressed: {\r\n                        componentProperty: \"yAxis\",\r\n                        states: [\"default\", \"touched\", \"pressed\"],\r\n                        valueNodeProperty: \"transform\",\r\n                        valueNodeName: \"xr_standard_thumbstick_yaxis_pressed_value\",\r\n                        minNodeName: \"xr_standard_thumbstick_yaxis_pressed_min\",\r\n                        maxNodeName: \"xr_standard_thumbstick_yaxis_pressed_max\",\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"microsoft-mixed-reality-right\",\r\n        assetPath: \"right.glb\",\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}