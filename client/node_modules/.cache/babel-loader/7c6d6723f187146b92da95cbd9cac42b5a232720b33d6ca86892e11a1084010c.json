{"ast":null,"code":"import { __decorate } from \"../../../tslib.es6.js\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator.js\";\n/**\n * block used to Generate a Worley Noise 3D Noise Pattern\n */\n//  Source: https://github.com/Erkaman/glsl-worley\n//  Converted to BJS by Pryme8\n//\n//  Worley Noise 3D\n//  Return vec2 value range of -1.0->1.0, F1-F2 respectivly\nexport class WorleyNoise3DBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new WorleyNoise3DBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    /** Gets or sets a boolean indicating that normal should be inverted on X axis */\n    this.manhattanDistance = false;\n    this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.Vector3);\n    this.registerInput(\"jitter\", NodeMaterialBlockConnectionPointTypes.Float);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector2);\n    this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n    this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"WorleyNoise3DBlock\";\n  }\n  /**\n   * Gets the seed input component\n   */\n  get seed() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the jitter input component\n   */\n  get jitter() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  /**\n   * Gets the x component\n   */\n  get x() {\n    return this._outputs[1];\n  }\n  /**\n   * Gets the y component\n   */\n  get y() {\n    return this._outputs[2];\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    if (!this.seed.isConnected) {\n      return;\n    }\n    if (!this.output.hasEndpoints && !this.x.hasEndpoints && !this.y.hasEndpoints) {\n      return;\n    }\n    let functionString = `vec3 permute(vec3 x){\\r\\n`;\n    functionString += `    return mod((34.0 * x + 1.0) * x, 289.0);\\r\\n`;\n    functionString += `}\\r\\n\\r\\n`;\n    functionString += `vec3 dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance){\\r\\n`;\n    functionString += `    return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\\r\\n`;\n    functionString += `}\\r\\n\\r\\n`;\n    functionString += `vec2 worley(vec3 P, float jitter, bool manhattanDistance){\\r\\n`;\n    functionString += `    float K = 0.142857142857; // 1/7\\r\\n`;\n    functionString += `    float Ko = 0.428571428571; // 1/2-K/2\\r\\n`;\n    functionString += `    float  K2 = 0.020408163265306; // 1/(7*7)\\r\\n`;\n    functionString += `    float Kz = 0.166666666667; // 1/6\\r\\n`;\n    functionString += `    float Kzo = 0.416666666667; // 1/2-1/6*2\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 Pi = mod(floor(P), 289.0);\\r\\n`;\n    functionString += `    vec3 Pf = fract(P) - 0.5;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\\r\\n`;\n    functionString += `    vec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\\r\\n`;\n    functionString += `    vec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 p = permute(Pi.x + vec3(-1.0, 0.0, 1.0));\\r\\n`;\n    functionString += `    vec3 p1 = permute(p + Pi.y - 1.0);\\r\\n`;\n    functionString += `    vec3 p2 = permute(p + Pi.y);\\r\\n`;\n    functionString += `    vec3 p3 = permute(p + Pi.y + 1.0);\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 p11 = permute(p1 + Pi.z - 1.0);\\r\\n`;\n    functionString += `    vec3 p12 = permute(p1 + Pi.z);\\r\\n`;\n    functionString += `    vec3 p13 = permute(p1 + Pi.z + 1.0);\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 p21 = permute(p2 + Pi.z - 1.0);\\r\\n`;\n    functionString += `    vec3 p22 = permute(p2 + Pi.z);\\r\\n`;\n    functionString += `    vec3 p23 = permute(p2 + Pi.z + 1.0);\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 p31 = permute(p3 + Pi.z - 1.0);\\r\\n`;\n    functionString += `    vec3 p32 = permute(p3 + Pi.z);\\r\\n`;\n    functionString += `    vec3 p33 = permute(p3 + Pi.z + 1.0);\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox11 = fract(p11*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox12 = fract(p12*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz12 = floor(p12*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox13 = fract(p13*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz13 = floor(p13*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox21 = fract(p21*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz21 = floor(p21*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox22 = fract(p22*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz22 = floor(p22*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox23 = fract(p23*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz23 = floor(p23*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox31 = fract(p31*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz31 = floor(p31*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox32 = fract(p32*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz32 = floor(p32*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 ox33 = fract(p33*K) - Ko;\\r\\n`;\n    functionString += `    vec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\\r\\n`;\n    functionString += `    vec3 oz33 = floor(p33*K2)*Kz - Kzo;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx11 = Pfx + jitter*ox11;\\r\\n`;\n    functionString += `    vec3 dy11 = Pfy.x + jitter*oy11;\\r\\n`;\n    functionString += `    vec3 dz11 = Pfz.x + jitter*oz11;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx12 = Pfx + jitter*ox12;\\r\\n`;\n    functionString += `    vec3 dy12 = Pfy.x + jitter*oy12;\\r\\n`;\n    functionString += `    vec3 dz12 = Pfz.y + jitter*oz12;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx13 = Pfx + jitter*ox13;\\r\\n`;\n    functionString += `    vec3 dy13 = Pfy.x + jitter*oy13;\\r\\n`;\n    functionString += `    vec3 dz13 = Pfz.z + jitter*oz13;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx21 = Pfx + jitter*ox21;\\r\\n`;\n    functionString += `    vec3 dy21 = Pfy.y + jitter*oy21;\\r\\n`;\n    functionString += `    vec3 dz21 = Pfz.x + jitter*oz21;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx22 = Pfx + jitter*ox22;\\r\\n`;\n    functionString += `    vec3 dy22 = Pfy.y + jitter*oy22;\\r\\n`;\n    functionString += `    vec3 dz22 = Pfz.y + jitter*oz22;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx23 = Pfx + jitter*ox23;\\r\\n`;\n    functionString += `    vec3 dy23 = Pfy.y + jitter*oy23;\\r\\n`;\n    functionString += `    vec3 dz23 = Pfz.z + jitter*oz23;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx31 = Pfx + jitter*ox31;\\r\\n`;\n    functionString += `    vec3 dy31 = Pfy.z + jitter*oy31;\\r\\n`;\n    functionString += `    vec3 dz31 = Pfz.x + jitter*oz31;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx32 = Pfx + jitter*ox32;\\r\\n`;\n    functionString += `    vec3 dy32 = Pfy.z + jitter*oy32;\\r\\n`;\n    functionString += `    vec3 dz32 = Pfz.y + jitter*oz32;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 dx33 = Pfx + jitter*ox33;\\r\\n`;\n    functionString += `    vec3 dy33 = Pfy.z + jitter*oy33;\\r\\n`;\n    functionString += `    vec3 dz33 = Pfz.z + jitter*oz33;\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 d11 = dist(dx11, dy11, dz11, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d12 =dist(dx12, dy12, dz12, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d13 = dist(dx13, dy13, dz13, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d21 = dist(dx21, dy21, dz21, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d22 = dist(dx22, dy22, dz22, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d23 = dist(dx23, dy23, dz23, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d31 = dist(dx31, dy31, dz31, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d32 = dist(dx32, dy32, dz32, manhattanDistance);\\r\\n`;\n    functionString += `    vec3 d33 = dist(dx33, dy33, dz33, manhattanDistance);\\r\\n`;\n    functionString += `\\r\\n`;\n    functionString += `    vec3 d1a = min(d11, d12);\\r\\n`;\n    functionString += `    d12 = max(d11, d12);\\r\\n`;\n    functionString += `    d11 = min(d1a, d13); // Smallest now not in d12 or d13\\r\\n`;\n    functionString += `    d13 = max(d1a, d13);\\r\\n`;\n    functionString += `    d12 = min(d12, d13); // 2nd smallest now not in d13\\r\\n`;\n    functionString += `    vec3 d2a = min(d21, d22);\\r\\n`;\n    functionString += `    d22 = max(d21, d22);\\r\\n`;\n    functionString += `    d21 = min(d2a, d23); // Smallest now not in d22 or d23\\r\\n`;\n    functionString += `    d23 = max(d2a, d23);\\r\\n`;\n    functionString += `    d22 = min(d22, d23); // 2nd smallest now not in d23\\r\\n`;\n    functionString += `    vec3 d3a = min(d31, d32);\\r\\n`;\n    functionString += `    d32 = max(d31, d32);\\r\\n`;\n    functionString += `    d31 = min(d3a, d33); // Smallest now not in d32 or d33\\r\\n`;\n    functionString += `    d33 = max(d3a, d33);\\r\\n`;\n    functionString += `    d32 = min(d32, d33); // 2nd smallest now not in d33\\r\\n`;\n    functionString += `    vec3 da = min(d11, d21);\\r\\n`;\n    functionString += `    d21 = max(d11, d21);\\r\\n`;\n    functionString += `    d11 = min(da, d31); // Smallest now in d11\\r\\n`;\n    functionString += `    d31 = max(da, d31); // 2nd smallest now not in d31\\r\\n`;\n    functionString += `    d11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\\r\\n`;\n    functionString += `    d11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\\r\\n`;\n    functionString += `    d12 = min(d12, d21); // 2nd smallest now not in d21\\r\\n`;\n    functionString += `    d12 = min(d12, d22); // nor in d22\\r\\n`;\n    functionString += `    d12 = min(d12, d31); // nor in d31\\r\\n`;\n    functionString += `    d12 = min(d12, d32); // nor in d32\\r\\n`;\n    functionString += `    d11.yz = min(d11.yz,d12.xy); // nor in d12.yz\\r\\n`;\n    functionString += `    d11.y = min(d11.y,d12.z); // Only two more to go\\r\\n`;\n    functionString += `    d11.y = min(d11.y,d11.z); // Done! (Phew!)\\r\\n`;\n    functionString += `    return sqrt(d11.xy); // F1, F2\\r\\n`;\n    functionString += `}\\r\\n\\r\\n`;\n    state._emitFunction(\"worley3D\", functionString, \"// Worley3D\");\n    const tempVariable = state._getFreeVariableName(\"worleyTemp\");\n    state.compilationString += `vec2 ${tempVariable} = worley(${this.seed.associatedVariableName}, ${this.jitter.associatedVariableName}, ${this.manhattanDistance});\\r\\n`;\n    if (this.output.hasEndpoints) {\n      state.compilationString += this._declareOutput(this.output, state) + ` = ${tempVariable};\\r\\n`;\n    }\n    if (this.x.hasEndpoints) {\n      state.compilationString += this._declareOutput(this.x, state) + ` = ${tempVariable}.x;\\r\\n`;\n    }\n    if (this.y.hasEndpoints) {\n      state.compilationString += this._declareOutput(this.y, state) + ` = ${tempVariable}.y;\\r\\n`;\n    }\n    return this;\n  }\n  /**\n   * Exposes the properties to the UI?\n   */\n  _dumpPropertiesCode() {\n    const codeString = super._dumpPropertiesCode() + `${this._codeVariableName}.manhattanDistance = ${this.manhattanDistance};\\r\\n`;\n    return codeString;\n  }\n  /**\n   * Exposes the properties to the Serialize?\n   */\n  serialize() {\n    const serializationObject = super.serialize();\n    serializationObject.manhattanDistance = this.manhattanDistance;\n    return serializationObject;\n  }\n  /**\n   * Exposes the properties to the deserialize?\n   * @param serializationObject\n   * @param scene\n   * @param rootUrl\n   */\n  _deserialize(serializationObject, scene, rootUrl) {\n    super._deserialize(serializationObject, scene, rootUrl);\n    this.manhattanDistance = serializationObject.manhattanDistance;\n  }\n}\n__decorate([editableInPropertyPage(\"Use Manhattan Distance\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", {\n  notifiers: {\n    update: false\n  }\n})], WorleyNoise3DBlock.prototype, \"manhattanDistance\", void 0);\nRegisterClass(\"BABYLON.WorleyNoise3DBlock\", WorleyNoise3DBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","editableInPropertyPage","PropertyTypeForEdition","WorleyNoise3DBlock","constructor","name","Neutral","registerInput","Vector3","Float","registerOutput","Vector2","getClassName","seed","_inputs","jitter","output","_outputs","x","y","_buildBlock","state","isConnected","hasEndpoints","functionString","_emitFunction","tempVariable","_getFreeVariableName","compilationString","associatedVariableName","manhattanDistance","_declareOutput","_dumpPropertiesCode","codeString","_codeVariableName","serialize","serializationObject","_deserialize","scene","rootUrl","__decorate","Boolean","notifiers","update"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/worleyNoise3DBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { Scene } from \"../../../scene\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator\";\r\n\r\n/**\r\n * block used to Generate a Worley Noise 3D Noise Pattern\r\n */\r\n\r\n//  Source: https://github.com/Erkaman/glsl-worley\r\n//  Converted to BJS by Pryme8\r\n//\r\n//  Worley Noise 3D\r\n//  Return vec2 value range of -1.0->1.0, F1-F2 respectivly\r\n\r\nexport class WorleyNoise3DBlock extends NodeMaterialBlock {\r\n    /** Gets or sets a boolean indicating that normal should be inverted on X axis */\r\n    @editableInPropertyPage(\"Use Manhattan Distance\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", { notifiers: { update: false } })\r\n    public manhattanDistance = false;\r\n\r\n    /**\r\n     * Creates a new WorleyNoise3DBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n        this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerInput(\"jitter\", NodeMaterialBlockConnectionPointTypes.Float);\r\n\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"WorleyNoise3DBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the seed input component\r\n     */\r\n    public get seed(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the jitter input component\r\n     */\r\n    public get jitter(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the x component\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the y component\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        if (!this.seed.isConnected) {\r\n            return;\r\n        }\r\n\r\n        if (!this.output.hasEndpoints && !this.x.hasEndpoints && !this.y.hasEndpoints) {\r\n            return;\r\n        }\r\n\r\n        let functionString = `vec3 permute(vec3 x){\\r\\n`;\r\n        functionString += `    return mod((34.0 * x + 1.0) * x, 289.0);\\r\\n`;\r\n        functionString += `}\\r\\n\\r\\n`;\r\n\r\n        functionString += `vec3 dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance){\\r\\n`;\r\n        functionString += `    return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\\r\\n`;\r\n        functionString += `}\\r\\n\\r\\n`;\r\n\r\n        functionString += `vec2 worley(vec3 P, float jitter, bool manhattanDistance){\\r\\n`;\r\n        functionString += `    float K = 0.142857142857; // 1/7\\r\\n`;\r\n        functionString += `    float Ko = 0.428571428571; // 1/2-K/2\\r\\n`;\r\n        functionString += `    float  K2 = 0.020408163265306; // 1/(7*7)\\r\\n`;\r\n        functionString += `    float Kz = 0.166666666667; // 1/6\\r\\n`;\r\n        functionString += `    float Kzo = 0.416666666667; // 1/2-1/6*2\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 Pi = mod(floor(P), 289.0);\\r\\n`;\r\n        functionString += `    vec3 Pf = fract(P) - 0.5;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\\r\\n`;\r\n        functionString += `    vec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\\r\\n`;\r\n        functionString += `    vec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 p = permute(Pi.x + vec3(-1.0, 0.0, 1.0));\\r\\n`;\r\n        functionString += `    vec3 p1 = permute(p + Pi.y - 1.0);\\r\\n`;\r\n        functionString += `    vec3 p2 = permute(p + Pi.y);\\r\\n`;\r\n        functionString += `    vec3 p3 = permute(p + Pi.y + 1.0);\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 p11 = permute(p1 + Pi.z - 1.0);\\r\\n`;\r\n        functionString += `    vec3 p12 = permute(p1 + Pi.z);\\r\\n`;\r\n        functionString += `    vec3 p13 = permute(p1 + Pi.z + 1.0);\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 p21 = permute(p2 + Pi.z - 1.0);\\r\\n`;\r\n        functionString += `    vec3 p22 = permute(p2 + Pi.z);\\r\\n`;\r\n        functionString += `    vec3 p23 = permute(p2 + Pi.z + 1.0);\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 p31 = permute(p3 + Pi.z - 1.0);\\r\\n`;\r\n        functionString += `    vec3 p32 = permute(p3 + Pi.z);\\r\\n`;\r\n        functionString += `    vec3 p33 = permute(p3 + Pi.z + 1.0);\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox11 = fract(p11*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox12 = fract(p12*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz12 = floor(p12*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox13 = fract(p13*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz13 = floor(p13*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox21 = fract(p21*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz21 = floor(p21*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox22 = fract(p22*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz22 = floor(p22*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox23 = fract(p23*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz23 = floor(p23*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox31 = fract(p31*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz31 = floor(p31*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox32 = fract(p32*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz32 = floor(p32*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 ox33 = fract(p33*K) - Ko;\\r\\n`;\r\n        functionString += `    vec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\\r\\n`;\r\n        functionString += `    vec3 oz33 = floor(p33*K2)*Kz - Kzo;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx11 = Pfx + jitter*ox11;\\r\\n`;\r\n        functionString += `    vec3 dy11 = Pfy.x + jitter*oy11;\\r\\n`;\r\n        functionString += `    vec3 dz11 = Pfz.x + jitter*oz11;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx12 = Pfx + jitter*ox12;\\r\\n`;\r\n        functionString += `    vec3 dy12 = Pfy.x + jitter*oy12;\\r\\n`;\r\n        functionString += `    vec3 dz12 = Pfz.y + jitter*oz12;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx13 = Pfx + jitter*ox13;\\r\\n`;\r\n        functionString += `    vec3 dy13 = Pfy.x + jitter*oy13;\\r\\n`;\r\n        functionString += `    vec3 dz13 = Pfz.z + jitter*oz13;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx21 = Pfx + jitter*ox21;\\r\\n`;\r\n        functionString += `    vec3 dy21 = Pfy.y + jitter*oy21;\\r\\n`;\r\n        functionString += `    vec3 dz21 = Pfz.x + jitter*oz21;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx22 = Pfx + jitter*ox22;\\r\\n`;\r\n        functionString += `    vec3 dy22 = Pfy.y + jitter*oy22;\\r\\n`;\r\n        functionString += `    vec3 dz22 = Pfz.y + jitter*oz22;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx23 = Pfx + jitter*ox23;\\r\\n`;\r\n        functionString += `    vec3 dy23 = Pfy.y + jitter*oy23;\\r\\n`;\r\n        functionString += `    vec3 dz23 = Pfz.z + jitter*oz23;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx31 = Pfx + jitter*ox31;\\r\\n`;\r\n        functionString += `    vec3 dy31 = Pfy.z + jitter*oy31;\\r\\n`;\r\n        functionString += `    vec3 dz31 = Pfz.x + jitter*oz31;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx32 = Pfx + jitter*ox32;\\r\\n`;\r\n        functionString += `    vec3 dy32 = Pfy.z + jitter*oy32;\\r\\n`;\r\n        functionString += `    vec3 dz32 = Pfz.y + jitter*oz32;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 dx33 = Pfx + jitter*ox33;\\r\\n`;\r\n        functionString += `    vec3 dy33 = Pfy.z + jitter*oy33;\\r\\n`;\r\n        functionString += `    vec3 dz33 = Pfz.z + jitter*oz33;\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 d11 = dist(dx11, dy11, dz11, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d12 =dist(dx12, dy12, dz12, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d13 = dist(dx13, dy13, dz13, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d21 = dist(dx21, dy21, dz21, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d22 = dist(dx22, dy22, dz22, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d23 = dist(dx23, dy23, dz23, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d31 = dist(dx31, dy31, dz31, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d32 = dist(dx32, dy32, dz32, manhattanDistance);\\r\\n`;\r\n        functionString += `    vec3 d33 = dist(dx33, dy33, dz33, manhattanDistance);\\r\\n`;\r\n        functionString += `\\r\\n`;\r\n        functionString += `    vec3 d1a = min(d11, d12);\\r\\n`;\r\n        functionString += `    d12 = max(d11, d12);\\r\\n`;\r\n        functionString += `    d11 = min(d1a, d13); // Smallest now not in d12 or d13\\r\\n`;\r\n        functionString += `    d13 = max(d1a, d13);\\r\\n`;\r\n        functionString += `    d12 = min(d12, d13); // 2nd smallest now not in d13\\r\\n`;\r\n        functionString += `    vec3 d2a = min(d21, d22);\\r\\n`;\r\n        functionString += `    d22 = max(d21, d22);\\r\\n`;\r\n        functionString += `    d21 = min(d2a, d23); // Smallest now not in d22 or d23\\r\\n`;\r\n        functionString += `    d23 = max(d2a, d23);\\r\\n`;\r\n        functionString += `    d22 = min(d22, d23); // 2nd smallest now not in d23\\r\\n`;\r\n        functionString += `    vec3 d3a = min(d31, d32);\\r\\n`;\r\n        functionString += `    d32 = max(d31, d32);\\r\\n`;\r\n        functionString += `    d31 = min(d3a, d33); // Smallest now not in d32 or d33\\r\\n`;\r\n        functionString += `    d33 = max(d3a, d33);\\r\\n`;\r\n        functionString += `    d32 = min(d32, d33); // 2nd smallest now not in d33\\r\\n`;\r\n        functionString += `    vec3 da = min(d11, d21);\\r\\n`;\r\n        functionString += `    d21 = max(d11, d21);\\r\\n`;\r\n        functionString += `    d11 = min(da, d31); // Smallest now in d11\\r\\n`;\r\n        functionString += `    d31 = max(da, d31); // 2nd smallest now not in d31\\r\\n`;\r\n        functionString += `    d11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\\r\\n`;\r\n        functionString += `    d11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\\r\\n`;\r\n        functionString += `    d12 = min(d12, d21); // 2nd smallest now not in d21\\r\\n`;\r\n        functionString += `    d12 = min(d12, d22); // nor in d22\\r\\n`;\r\n        functionString += `    d12 = min(d12, d31); // nor in d31\\r\\n`;\r\n        functionString += `    d12 = min(d12, d32); // nor in d32\\r\\n`;\r\n        functionString += `    d11.yz = min(d11.yz,d12.xy); // nor in d12.yz\\r\\n`;\r\n        functionString += `    d11.y = min(d11.y,d12.z); // Only two more to go\\r\\n`;\r\n        functionString += `    d11.y = min(d11.y,d11.z); // Done! (Phew!)\\r\\n`;\r\n        functionString += `    return sqrt(d11.xy); // F1, F2\\r\\n`;\r\n        functionString += `}\\r\\n\\r\\n`;\r\n\r\n        state._emitFunction(\"worley3D\", functionString, \"// Worley3D\");\r\n\r\n        const tempVariable = state._getFreeVariableName(\"worleyTemp\");\r\n\r\n        state.compilationString += `vec2 ${tempVariable} = worley(${this.seed.associatedVariableName}, ${this.jitter.associatedVariableName}, ${this.manhattanDistance});\\r\\n`;\r\n\r\n        if (this.output.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(this.output, state) + ` = ${tempVariable};\\r\\n`;\r\n        }\r\n\r\n        if (this.x.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(this.x, state) + ` = ${tempVariable}.x;\\r\\n`;\r\n        }\r\n\r\n        if (this.y.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(this.y, state) + ` = ${tempVariable}.y;\\r\\n`;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Exposes the properties to the UI?\r\n     */\r\n    protected _dumpPropertiesCode() {\r\n        const codeString = super._dumpPropertiesCode() + `${this._codeVariableName}.manhattanDistance = ${this.manhattanDistance};\\r\\n`;\r\n\r\n        return codeString;\r\n    }\r\n    /**\r\n     * Exposes the properties to the Serialize?\r\n     */\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.manhattanDistance = this.manhattanDistance;\r\n\r\n        return serializationObject;\r\n    }\r\n    /**\r\n     * Exposes the properties to the deserialize?\r\n     * @param serializationObject\r\n     * @param scene\r\n     * @param rootUrl\r\n     */\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.manhattanDistance = serializationObject.manhattanDistance;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.WorleyNoise3DBlock\", WorleyNoise3DBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}