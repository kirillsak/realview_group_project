{"ast":null,"code":"import { CopyTextureToTexture } from \"../../Misc/copyTextureToTexture.js\";\n/** @internal */\nexport class FluidRenderingDepthTextureCopy {\n  constructor(engine, width, height, samples = 1) {\n    this._engine = engine;\n    this._copyTextureToTexture = new CopyTextureToTexture(engine, true);\n    this._depthRTWrapper = this._engine.createRenderTargetTexture({\n      width,\n      height\n    }, {\n      generateMipMaps: false,\n      type: 0,\n      format: 6,\n      samplingMode: 1,\n      generateDepthBuffer: true,\n      generateStencilBuffer: false,\n      samples,\n      noColorAttachment: true\n    });\n    this._depthRTWrapper.createDepthStencilTexture(0, false, false, 1);\n  }\n  get depthRTWrapper() {\n    return this._depthRTWrapper;\n  }\n  copy(source) {\n    return this._copyTextureToTexture.copy(source, this._depthRTWrapper);\n  }\n  dispose() {\n    this._depthRTWrapper.dispose();\n    this._copyTextureToTexture.dispose();\n  }\n}","map":{"version":3,"mappings":"AAIA,SAASA,oBAAoB,QAAE;AAE/B;AACA,OAAM,MAAOC,8BAA8B;EASvCC,YAAYC,MAAc,EAAEC,KAAa,EAAEC,MAAc,EAAEC,OAAO,GAAG,CAAC;IAClE,IAAI,CAACC,OAAO,GAAGJ,MAAM;IACrB,IAAI,CAACK,qBAAqB,GAAG,IAAIR,oBAAoB,CAACG,MAAM,EAAE,IAAI,CAAC;IAEnE,IAAI,CAACM,eAAe,GAAG,IAAI,CAACF,OAAO,CAACG,yBAAyB,CACzD;MAAEN,KAAK;MAAEC;IAAM,CAAE,EACjB;MACIM,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE;MACNC,MAAM,EAAE;MACRC,YAAY,EAAE;MACdC,mBAAmB,EAAE,IAAI;MACzBC,qBAAqB,EAAE,KAAK;MAC5BV,OAAO;MACPW,iBAAiB,EAAE;KACtB,CACJ;IACD,IAAI,CAACR,eAAe,CAACS,yBAAyB,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;EACtE;EAtBA,IAAWC,cAAc;IACrB,OAAO,IAAI,CAACV,eAAe;EAC/B;EAsBOW,IAAI,CAACC,MAAuB;IAC/B,OAAO,IAAI,CAACb,qBAAqB,CAACY,IAAI,CAACC,MAAM,EAAE,IAAI,CAACZ,eAAe,CAAC;EACxE;EAEOa,OAAO;IACV,IAAI,CAACb,eAAe,CAACa,OAAO,EAAE;IAC9B,IAAI,CAACd,qBAAqB,CAACc,OAAO,EAAE;EACxC","names":["CopyTextureToTexture","FluidRenderingDepthTextureCopy","constructor","engine","width","height","samples","_engine","_copyTextureToTexture","_depthRTWrapper","createRenderTargetTexture","generateMipMaps","type","format","samplingMode","generateDepthBuffer","generateStencilBuffer","noColorAttachment","createDepthStencilTexture","depthRTWrapper","copy","source","dispose"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Rendering/fluidRenderer/fluidRenderingDepthTextureCopy.ts"],"sourcesContent":["import { Constants } from \"core/Engines/constants\";\r\nimport type { Engine } from \"core/Engines/engine\";\r\nimport type { RenderTargetWrapper } from \"core/Engines/renderTargetWrapper\";\r\nimport type { InternalTexture } from \"core/Materials/Textures/internalTexture\";\r\nimport { CopyTextureToTexture } from \"core/Misc/copyTextureToTexture\";\r\n\r\n/** @internal */\r\nexport class FluidRenderingDepthTextureCopy {\r\n    private _engine: Engine;\r\n    private _depthRTWrapper: RenderTargetWrapper;\r\n    private _copyTextureToTexture: CopyTextureToTexture;\r\n\r\n    public get depthRTWrapper() {\r\n        return this._depthRTWrapper;\r\n    }\r\n\r\n    constructor(engine: Engine, width: number, height: number, samples = 1) {\r\n        this._engine = engine;\r\n        this._copyTextureToTexture = new CopyTextureToTexture(engine, true);\r\n\r\n        this._depthRTWrapper = this._engine.createRenderTargetTexture(\r\n            { width, height },\r\n            {\r\n                generateMipMaps: false,\r\n                type: Constants.TEXTURETYPE_UNSIGNED_BYTE,\r\n                format: Constants.TEXTUREFORMAT_R,\r\n                samplingMode: Constants.TEXTURE_NEAREST_SAMPLINGMODE,\r\n                generateDepthBuffer: true,\r\n                generateStencilBuffer: false,\r\n                samples,\r\n                noColorAttachment: true,\r\n            }\r\n        );\r\n        this._depthRTWrapper.createDepthStencilTexture(0, false, false, 1);\r\n    }\r\n\r\n    public copy(source: InternalTexture): boolean {\r\n        return this._copyTextureToTexture.copy(source, this._depthRTWrapper);\r\n    }\r\n\r\n    public dispose() {\r\n        this._depthRTWrapper.dispose();\r\n        this._copyTextureToTexture.dispose();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}