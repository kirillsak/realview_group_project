{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype._readTexturePixels = function (texture, width, height, faceIndex = -1, level = 0, buffer = null, flushRenderer = true, noDataConversion = false, x = 0, y = 0) {\n  const gpuTextureWrapper = texture._hardwareTexture;\n  if (flushRenderer) {\n    this.flushFramebuffer();\n  }\n  return this._textureHelper.readPixels(gpuTextureWrapper.underlyingResource, x, y, width, height, gpuTextureWrapper.format, faceIndex, level, buffer, noDataConversion);\n};\nWebGPUEngine.prototype._readTexturePixelsSync = function () {\n  throw \"_readTexturePixelsSync is unsupported in WebGPU!\";\n};","map":{"version":3,"mappings":"AAEA,SAASA,YAAY,QAAQ,uBAAqB;AAGlDA,YAAY,CAACC,SAAS,CAACC,kBAAkB,GAAG,UACxCC,OAAwB,EACxBC,KAAa,EACbC,MAAc,EACdC,SAAS,GAAG,CAAC,CAAC,EACdC,KAAK,GAAG,CAAC,EACTC,SAAoC,IAAI,EACxCC,aAAa,GAAG,IAAI,EACpBC,gBAAgB,GAAG,KAAK,EACxBC,CAAC,GAAG,CAAC,EACLC,CAAC,GAAG,CAAC;EAEL,MAAMC,iBAAiB,GAAGV,OAAO,CAACW,gBAAyC;EAE3E,IAAIL,aAAa,EAAE;IACf,IAAI,CAACM,gBAAgB,EAAE;;EAG3B,OAAO,IAAI,CAACC,cAAc,CAACC,UAAU,CAACJ,iBAAiB,CAACK,kBAAmB,EAAEP,CAAC,EAAEC,CAAC,EAAER,KAAK,EAAEC,MAAM,EAAEQ,iBAAiB,CAACM,MAAM,EAAEb,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEE,gBAAgB,CAAC;AAC3K,CAAC;AAEDV,YAAY,CAACC,SAAS,CAACmB,sBAAsB,GAAG;EAC5C,MAAM,kDAAkD;AAC5D,CAAC","names":["WebGPUEngine","prototype","_readTexturePixels","texture","width","height","faceIndex","level","buffer","flushRenderer","noDataConversion","x","y","gpuTextureWrapper","_hardwareTexture","flushFramebuffer","_textureHelper","readPixels","underlyingResource","format","_readTexturePixelsSync"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.readTexture.ts"],"sourcesContent":["import type { InternalTexture } from \"../../../Materials/Textures/internalTexture\";\r\nimport type { Nullable } from \"../../../types\";\r\nimport { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport type { WebGPUHardwareTexture } from \"../webgpuHardwareTexture\";\r\n\r\nWebGPUEngine.prototype._readTexturePixels = function (\r\n    texture: InternalTexture,\r\n    width: number,\r\n    height: number,\r\n    faceIndex = -1,\r\n    level = 0,\r\n    buffer: Nullable<ArrayBufferView> = null,\r\n    flushRenderer = true,\r\n    noDataConversion = false,\r\n    x = 0,\r\n    y = 0\r\n): Promise<ArrayBufferView> {\r\n    const gpuTextureWrapper = texture._hardwareTexture as WebGPUHardwareTexture;\r\n\r\n    if (flushRenderer) {\r\n        this.flushFramebuffer();\r\n    }\r\n\r\n    return this._textureHelper.readPixels(gpuTextureWrapper.underlyingResource!, x, y, width, height, gpuTextureWrapper.format, faceIndex, level, buffer, noDataConversion);\r\n};\r\n\r\nWebGPUEngine.prototype._readTexturePixelsSync = function (): ArrayBufferView {\r\n    throw \"_readTexturePixelsSync is unsupported in WebGPU!\";\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}