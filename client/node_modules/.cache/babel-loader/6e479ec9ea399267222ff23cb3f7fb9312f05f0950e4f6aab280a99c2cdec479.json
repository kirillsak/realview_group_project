{"ast":null,"code":"import { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to get the derivative value on x and y of a given input\n */\nexport class DerivativeBlock extends NodeMaterialBlock {\n  /**\n   * Create a new DerivativeBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Fragment);\n    this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect, false);\n    this.registerOutput(\"dx\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n    this.registerOutput(\"dy\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n    this._outputs[0]._typeConnectionSource = this._inputs[0];\n    this._outputs[1]._typeConnectionSource = this._inputs[0];\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"DerivativeBlock\";\n  }\n  /**\n   * Gets the input component\n   */\n  get input() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the derivative output on x\n   */\n  get dx() {\n    return this._outputs[0];\n  }\n  /**\n   * Gets the derivative output on y\n   */\n  get dy() {\n    return this._outputs[1];\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const dx = this._outputs[0];\n    const dy = this._outputs[1];\n    state._emitExtension(\"derivatives\", \"#extension GL_OES_standard_derivatives : enable\");\n    if (dx.hasEndpoints) {\n      state.compilationString += this._declareOutput(dx, state) + ` = dFdx(${this.input.associatedVariableName});\\r\\n`;\n    }\n    if (dy.hasEndpoints) {\n      state.compilationString += this._declareOutput(dy, state) + ` = dFdy(${this.input.associatedVariableName});\\r\\n`;\n    }\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.DerivativeBlock\", DerivativeBlock);","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,4BAA0B;AAC5D,SAASC,qCAAqC,QAAQ,sDAAoD;AAE1G,SAASC,wBAAwB,QAAQ,yCAAuC;AAEhF,SAASC,aAAa,QAAQ,+BAA6B;AAE3D;;;AAGA,OAAM,MAAOC,eAAgB,SAAQJ,iBAAiB;EAClD;;;;EAIAK,YAAmBC,IAAY;IAC3B,KAAK,CAACA,IAAI,EAAEJ,wBAAwB,CAACK,QAAQ,CAAC;IAE9C,IAAI,CAACC,aAAa,CAAC,OAAO,EAAEP,qCAAqC,CAACQ,UAAU,EAAE,KAAK,CAAC;IACpF,IAAI,CAACC,cAAc,CAAC,IAAI,EAAET,qCAAqC,CAACU,YAAY,CAAC;IAC7E,IAAI,CAACD,cAAc,CAAC,IAAI,EAAET,qCAAqC,CAACU,YAAY,CAAC;IAE7E,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,qBAAqB,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IACxD,IAAI,CAACF,QAAQ,CAAC,CAAC,CAAC,CAACC,qBAAqB,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;EAC5D;EAEA;;;;EAIOC,YAAY;IACf,OAAO,iBAAiB;EAC5B;EAEA;;;EAGA,IAAWC,KAAK;IACZ,OAAO,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEA;;;EAGA,IAAWG,EAAE;IACT,OAAO,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEA;;;EAGA,IAAWM,EAAE;IACT,OAAO,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEUO,WAAW,CAACC,KAA6B;IAC/C,KAAK,CAACD,WAAW,CAACC,KAAK,CAAC;IAExB,MAAMH,EAAE,GAAG,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC;IAC3B,MAAMM,EAAE,GAAG,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC;IAE3BQ,KAAK,CAACC,cAAc,CAAC,aAAa,EAAE,iDAAiD,CAAC;IAEtF,IAAIJ,EAAE,CAACK,YAAY,EAAE;MACjBF,KAAK,CAACG,iBAAiB,IAAI,IAAI,CAACC,cAAc,CAACP,EAAE,EAAEG,KAAK,CAAC,GAAG,WAAW,IAAI,CAACJ,KAAK,CAACS,sBAAsB,QAAQ;;IAGpH,IAAIP,EAAE,CAACI,YAAY,EAAE;MACjBF,KAAK,CAACG,iBAAiB,IAAI,IAAI,CAACC,cAAc,CAACN,EAAE,EAAEE,KAAK,CAAC,GAAG,WAAW,IAAI,CAACJ,KAAK,CAACS,sBAAsB,QAAQ;;IAGpH,OAAO,IAAI;EACf;;AAGJtB,aAAa,CAAC,yBAAyB,EAAEC,eAAe,CAAC","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","DerivativeBlock","constructor","name","Fragment","registerInput","AutoDetect","registerOutput","BasedOnInput","_outputs","_typeConnectionSource","_inputs","getClassName","input","dx","dy","_buildBlock","state","_emitExtension","hasEndpoints","compilationString","_declareOutput","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../../lts/core/generated/Materials/Node/Blocks/Fragment/derivativeBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../../nodeMaterialBuildState\";\r\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets\";\r\nimport type { NodeMaterialConnectionPoint } from \"../../nodeMaterialBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\n\r\n/**\r\n * Block used to get the derivative value on x and y of a given input\r\n */\r\nexport class DerivativeBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new DerivativeBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect, false);\r\n        this.registerOutput(\"dx\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n        this.registerOutput(\"dy\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n        this._outputs[1]._typeConnectionSource = this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"DerivativeBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the derivative output on x\r\n     */\r\n    public get dx(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the derivative output on y\r\n     */\r\n    public get dy(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const dx = this._outputs[0];\r\n        const dy = this._outputs[1];\r\n\r\n        state._emitExtension(\"derivatives\", \"#extension GL_OES_standard_derivatives : enable\");\r\n\r\n        if (dx.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(dx, state) + ` = dFdx(${this.input.associatedVariableName});\\r\\n`;\r\n        }\r\n\r\n        if (dy.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(dy, state) + ` = dFdy(${this.input.associatedVariableName});\\r\\n`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.DerivativeBlock\", DerivativeBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}