{"ast":null,"code":"import { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\n/**\n * A generic hand controller class that supports select and a secondary grasp\n */\nexport class WebXRGenericHandController extends WebXRAbstractMotionController {\n  /**\n   * Create a new hand controller object, without loading a controller model\n   * @param scene the scene to use to create this controller\n   * @param gamepadObject the corresponding gamepad object\n   * @param handedness the handedness of the controller\n   */\n  constructor(scene, gamepadObject, handedness) {\n    // Don't load the controller model - for now, hands have no real model.\n    super(scene, GenericHandSelectGraspProfile[handedness], gamepadObject, handedness, true);\n    this.profileId = \"generic-hand-select-grasp\";\n  }\n  _getFilenameAndPath() {\n    return {\n      filename: \"generic.babylon\",\n      path: \"https://controllers.babylonjs.com/generic/\"\n    };\n  }\n  _getModelLoadingConstraints() {\n    return true;\n  }\n  _processLoadedModel(_meshes) {\n    // no-op\n  }\n  _setRootMesh(meshes) {\n    // no-op\n  }\n  _updateModel() {\n    // no-op\n  }\n}\n// register the profiles\nWebXRMotionControllerManager.RegisterController(\"generic-hand-select-grasp\", (xrInput, scene) => {\n  return new WebXRGenericHandController(scene, xrInput.gamepad, xrInput.handedness);\n});\n// https://github.com/immersive-web/webxr-input-profiles/blob/main/packages/registry/profiles/generic/generic-hand-select-grasp.json\nconst GenericHandSelectGraspProfile = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr-standard-trigger\",\n        visualResponses: {}\n      },\n      grasp: {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"grasp\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-hand-select-grasp-left\",\n    assetPath: \"left.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr-standard-trigger\",\n        visualResponses: {}\n      },\n      grasp: {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"grasp\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-hand-select-grasp-right\",\n    assetPath: \"right.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr-standard-trigger\",\n        visualResponses: {}\n      },\n      grasp: {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"grasp\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"generic-hand-select-grasp-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":{"version":3,"mappings":"AAEA,SAASA,6BAA6B,QAAQ,oCAAkC;AAGhF,SAASC,4BAA4B,QAAQ,mCAAiC;AAE9E;;;AAGA,OAAM,MAAOC,0BAA2B,SAAQF,6BAA6B;EAGzE;;;;;;EAMAG,YAAYC,KAAY,EAAEC,aAA6C,EAAEC,UAAsC;IAC3G;IACA,KAAK,CAACF,KAAK,EAAEG,6BAA6B,CAACD,UAAU,CAAC,EAAED,aAAa,EAAEC,UAAU,EAAE,IAAI,CAAC;IAVrF,cAAS,GAAG,2BAA2B;EAW9C;EAEUE,mBAAmB;IACzB,OAAO;MACHC,QAAQ,EAAE,iBAAiB;MAC3BC,IAAI,EAAE;KACT;EACL;EAEUC,2BAA2B;IACjC,OAAO,IAAI;EACf;EAEUC,mBAAmB,CAACC,OAAuB;IACjD;EAAA;EAGMC,YAAY,CAACC,MAAsB;IACzC;EAAA;EAGMC,YAAY;IAClB;EAAA;;AAIR;AACAf,4BAA4B,CAACgB,kBAAkB,CAAC,2BAA2B,EAAE,CAACC,OAAsB,EAAEd,KAAY,KAAI;EAClH,OAAO,IAAIF,0BAA0B,CAACE,KAAK,EAAOc,OAAO,CAACC,OAAO,EAAED,OAAO,CAACZ,UAAU,CAAC;AAC1F,CAAC,CAAC;AAEF;AACA,MAAMC,6BAA6B,GAA+B;EAC9Da,IAAI,EAAE;IACFC,iBAAiB,EAAE,qBAAqB;IACxCC,UAAU,EAAE;MACR;MACA,qBAAqB,EAAE;QACnBC,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,qBAAqB;QACnCC,eAAe,EAAE;OACpB;MACDC,KAAK,EAAE;QACHL,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,OAAO;QACrBC,eAAe,EAAE;;KAExB;IACDE,cAAc,EAAE,aAAa;IAC7BH,YAAY,EAAE,gCAAgC;IAC9CI,SAAS,EAAE;GACd;EACDC,KAAK,EAAE;IACHV,iBAAiB,EAAE,qBAAqB;IACxCC,UAAU,EAAE;MACR;MACA,qBAAqB,EAAE;QACnBC,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,qBAAqB;QACnCC,eAAe,EAAE;OACpB;MACDC,KAAK,EAAE;QACHL,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,OAAO;QACrBC,eAAe,EAAE;;KAExB;IACDE,cAAc,EAAE,aAAa;IAC7BH,YAAY,EAAE,iCAAiC;IAC/CI,SAAS,EAAE;GACd;EACDE,IAAI,EAAE;IACFX,iBAAiB,EAAE,qBAAqB;IACxCC,UAAU,EAAE;MACR;MACA,qBAAqB,EAAE;QACnBC,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,qBAAqB;QACnCC,eAAe,EAAE;OACpB;MACDC,KAAK,EAAE;QACHL,IAAI,EAAE,SAAS;QACfC,cAAc,EAAE;UACZC,MAAM,EAAE;SACX;QACDC,YAAY,EAAE,OAAO;QACrBC,eAAe,EAAE;;KAExB;IACDE,cAAc,EAAE,aAAa;IAC7BH,YAAY,EAAE,gCAAgC;IAC9CI,SAAS,EAAE;;CAElB","names":["WebXRAbstractMotionController","WebXRMotionControllerManager","WebXRGenericHandController","constructor","scene","gamepadObject","handedness","GenericHandSelectGraspProfile","_getFilenameAndPath","filename","path","_getModelLoadingConstraints","_processLoadedModel","_meshes","_setRootMesh","meshes","_updateModel","RegisterController","xrInput","gamepad","left","selectComponentId","components","type","gamepadIndices","button","rootNodeName","visualResponses","grasp","gamepadMapping","assetPath","right","none"],"sourceRoot":"","sources":["../../../../../lts/core/generated/XR/motionController/webXRGenericHandController.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type { IMotionControllerLayoutMap, IMinimalMotionControllerObject, MotionControllerHandedness } from \"./webXRAbstractMotionController\";\r\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport type { Scene } from \"../../scene\";\r\nimport type { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\r\n\r\n/**\r\n * A generic hand controller class that supports select and a secondary grasp\r\n */\r\nexport class WebXRGenericHandController extends WebXRAbstractMotionController {\r\n    public profileId = \"generic-hand-select-grasp\";\r\n\r\n    /**\r\n     * Create a new hand controller object, without loading a controller model\r\n     * @param scene the scene to use to create this controller\r\n     * @param gamepadObject the corresponding gamepad object\r\n     * @param handedness the handedness of the controller\r\n     */\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        // Don't load the controller model - for now, hands have no real model.\r\n        super(scene, GenericHandSelectGraspProfile[handedness], gamepadObject, handedness, true);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        return {\r\n            filename: \"generic.babylon\",\r\n            path: \"https://controllers.babylonjs.com/generic/\",\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected _processLoadedModel(_meshes: AbstractMesh[]): void {\r\n        // no-op\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        // no-op\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op\r\n    }\r\n}\r\n\r\n// register the profiles\r\nWebXRMotionControllerManager.RegisterController(\"generic-hand-select-grasp\", (xrInput: XRInputSource, scene: Scene) => {\r\n    return new WebXRGenericHandController(scene, <any>xrInput.gamepad, xrInput.handedness);\r\n});\r\n\r\n// https://github.com/immersive-web/webxr-input-profiles/blob/main/packages/registry/profiles/generic/generic-hand-select-grasp.json\r\nconst GenericHandSelectGraspProfile: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr-standard-trigger\",\r\n                visualResponses: {},\r\n            },\r\n            grasp: {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"grasp\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-hand-select-grasp-left\",\r\n        assetPath: \"left.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr-standard-trigger\",\r\n                visualResponses: {},\r\n            },\r\n            grasp: {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"grasp\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-hand-select-grasp-right\",\r\n        assetPath: \"right.glb\",\r\n    },\r\n    none: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            // eslint-disable-next-line @typescript-eslint/naming-convention\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr-standard-trigger\",\r\n                visualResponses: {},\r\n            },\r\n            grasp: {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"grasp\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"generic-hand-select-grasp-none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}