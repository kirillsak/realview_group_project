{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nconst name = \"sceneUboDeclaration\";\nconst shader = `struct Scene {\nviewProjection : mat4x4<f32>,\n#ifdef MULTIVIEW\nviewProjectionR : mat4x4<f32>,\n#endif \nview : mat4x4<f32>,\nprojection : mat4x4<f32>,\nvEyePosition : vec4<f32>,\n};\nvar<uniform> scene : Scene;\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @internal */\nexport const sceneUboDeclaration = {\n  name,\n  shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,8BAA4B;AAExD,MAAMC,IAAI,GAAG,qBAAqB;AAClC,MAAMC,MAAM,GAAG;;;;;;;;;;CAUd;AACD;AACAF,WAAW,CAACG,wBAAwB,CAACF,IAAI,CAAC,GAAGC,MAAM;AACnD;AACA,OAAO,MAAME,mBAAmB,GAAG;EAAEH,IAAI;EAAEC;AAAM,CAAE","names":["ShaderStore","name","shader","IncludesShadersStoreWGSL","sceneUboDeclaration"],"sourceRoot":"","sources":["../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/sceneUboDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"sceneUboDeclaration\";\nconst shader = `struct Scene {\rviewProjection : mat4x4<f32>,\r#ifdef MULTIVIEW\nviewProjectionR : mat4x4<f32>,\r#endif \nview : mat4x4<f32>,\rprojection : mat4x4<f32>,\rvEyePosition : vec4<f32>,\r};\rvar<uniform> scene : Scene;\r`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @internal */\nexport const sceneUboDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}