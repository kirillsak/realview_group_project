{"ast":null,"code":"import { TouchCamera } from \"./touchCamera.js\";\nimport { Node } from \"../node.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Camera } from \"./camera.js\";\nimport \"../Gamepads/gamepadSceneComponent.js\";\nNode.AddNodeConstructor(\"FreeCamera\", (name, scene) => {\n  // Forcing to use the Universal camera\n  return () => new UniversalCamera(name, Vector3.Zero(), scene);\n});\n/**\n * The Universal Camera is the one to choose for first person shooter type games, and works with all the keyboard, mouse, touch and gamepads. This replaces the earlier Free Camera,\n * which still works and will still be found in many Playgrounds.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/camera_introduction#universal-camera\n */\nexport class UniversalCamera extends TouchCamera {\n  /**\n   * Defines the gamepad rotation sensibility.\n   * This is the threshold from when rotation starts to be accounted for to prevent jittering.\n   */\n  get gamepadAngularSensibility() {\n    const gamepad = this.inputs.attached[\"gamepad\"];\n    if (gamepad) {\n      return gamepad.gamepadAngularSensibility;\n    }\n    return 0;\n  }\n  set gamepadAngularSensibility(value) {\n    const gamepad = this.inputs.attached[\"gamepad\"];\n    if (gamepad) {\n      gamepad.gamepadAngularSensibility = value;\n    }\n  }\n  /**\n   * Defines the gamepad move sensibility.\n   * This is the threshold from when moving starts to be accounted for to prevent jittering.\n   */\n  get gamepadMoveSensibility() {\n    const gamepad = this.inputs.attached[\"gamepad\"];\n    if (gamepad) {\n      return gamepad.gamepadMoveSensibility;\n    }\n    return 0;\n  }\n  set gamepadMoveSensibility(value) {\n    const gamepad = this.inputs.attached[\"gamepad\"];\n    if (gamepad) {\n      gamepad.gamepadMoveSensibility = value;\n    }\n  }\n  /**\n   * The Universal Camera is the one to choose for first person shooter type games, and works with all the keyboard, mouse, touch and gamepads. This replaces the earlier Free Camera,\n   * which still works and will still be found in many Playgrounds.\n   * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/camera_introduction#universal-camera\n   * @param name Define the name of the camera in the scene\n   * @param position Define the start position of the camera in the scene\n   * @param scene Define the scene the camera belongs to\n   */\n  constructor(name, position, scene) {\n    super(name, position, scene);\n    this.inputs.addGamepad();\n  }\n  /**\n   * Gets the current object class name.\n   * @returns the class name\n   */\n  getClassName() {\n    return \"UniversalCamera\";\n  }\n}\nCamera._CreateDefaultParsedCamera = (name, scene) => {\n  return new UniversalCamera(name, Vector3.Zero(), scene);\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAgB;AAC5C,SAASC,IAAI,QAAQ,YAAU;AAG/B,SAASC,OAAO,QAAQ,yBAAuB;AAC/C,SAASC,MAAM,QAAQ,aAAW;AAElC,OAAO,sCAAoC;AAE3CF,IAAI,CAACG,kBAAkB,CAAC,YAAY,EAAE,CAACC,IAAI,EAAEC,KAAK,KAAI;EAClD;EACA,OAAO,MAAM,IAAIC,eAAe,CAACF,IAAI,EAAEH,OAAO,CAACM,IAAI,EAAE,EAAEF,KAAK,CAAC;AACjE,CAAC,CAAC;AAEF;;;;;AAKA,OAAM,MAAOC,eAAgB,SAAQP,WAAW;EAC5C;;;;EAIA,IAAWS,yBAAyB;IAChC,MAAMC,OAAO,GAA2B,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,SAAS,CAAC;IACvE,IAAIF,OAAO,EAAE;MACT,OAAOA,OAAO,CAACD,yBAAyB;;IAG5C,OAAO,CAAC;EACZ;EAEA,IAAWA,yBAAyB,CAACI,KAAa;IAC9C,MAAMH,OAAO,GAA2B,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,SAAS,CAAC;IACvE,IAAIF,OAAO,EAAE;MACTA,OAAO,CAACD,yBAAyB,GAAGI,KAAK;;EAEjD;EAEA;;;;EAIA,IAAWC,sBAAsB;IAC7B,MAAMJ,OAAO,GAA2B,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,SAAS,CAAC;IACvE,IAAIF,OAAO,EAAE;MACT,OAAOA,OAAO,CAACI,sBAAsB;;IAGzC,OAAO,CAAC;EACZ;EAEA,IAAWA,sBAAsB,CAACD,KAAa;IAC3C,MAAMH,OAAO,GAA2B,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,SAAS,CAAC;IACvE,IAAIF,OAAO,EAAE;MACTA,OAAO,CAACI,sBAAsB,GAAGD,KAAK;;EAE9C;EAEA;;;;;;;;EAQAE,YAAYV,IAAY,EAAEW,QAAiB,EAAEV,KAAa;IACtD,KAAK,CAACD,IAAI,EAAEW,QAAQ,EAAEV,KAAK,CAAC;IAC5B,IAAI,CAACK,MAAM,CAACM,UAAU,EAAE;EAC5B;EAEA;;;;EAIOC,YAAY;IACf,OAAO,iBAAiB;EAC5B;;AAGJf,MAAM,CAACgB,0BAA0B,GAAG,CAACd,IAAY,EAAEC,KAAY,KAAI;EAC/D,OAAO,IAAIC,eAAe,CAACF,IAAI,EAAEH,OAAO,CAACM,IAAI,EAAE,EAAEF,KAAK,CAAC;AAC3D,CAAC","names":["TouchCamera","Node","Vector3","Camera","AddNodeConstructor","name","scene","UniversalCamera","Zero","gamepadAngularSensibility","gamepad","inputs","attached","value","gamepadMoveSensibility","constructor","position","addGamepad","getClassName","_CreateDefaultParsedCamera"],"sourceRoot":"","sources":["../../../../lts/core/generated/Cameras/universalCamera.ts"],"sourcesContent":["import { TouchCamera } from \"./touchCamera\";\r\nimport { Node } from \"../node\";\r\nimport type { FreeCameraGamepadInput } from \"../Cameras/Inputs/freeCameraGamepadInput\";\r\nimport type { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Camera } from \"./camera\";\r\n\r\nimport \"../Gamepads/gamepadSceneComponent\";\r\n\r\nNode.AddNodeConstructor(\"FreeCamera\", (name, scene) => {\r\n    // Forcing to use the Universal camera\r\n    return () => new UniversalCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * The Universal Camera is the one to choose for first person shooter type games, and works with all the keyboard, mouse, touch and gamepads. This replaces the earlier Free Camera,\r\n * which still works and will still be found in many Playgrounds.\r\n * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/camera_introduction#universal-camera\r\n */\r\nexport class UniversalCamera extends TouchCamera {\r\n    /**\r\n     * Defines the gamepad rotation sensibility.\r\n     * This is the threshold from when rotation starts to be accounted for to prevent jittering.\r\n     */\r\n    public get gamepadAngularSensibility(): number {\r\n        const gamepad = <FreeCameraGamepadInput>this.inputs.attached[\"gamepad\"];\r\n        if (gamepad) {\r\n            return gamepad.gamepadAngularSensibility;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    public set gamepadAngularSensibility(value: number) {\r\n        const gamepad = <FreeCameraGamepadInput>this.inputs.attached[\"gamepad\"];\r\n        if (gamepad) {\r\n            gamepad.gamepadAngularSensibility = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the gamepad move sensibility.\r\n     * This is the threshold from when moving starts to be accounted for to prevent jittering.\r\n     */\r\n    public get gamepadMoveSensibility(): number {\r\n        const gamepad = <FreeCameraGamepadInput>this.inputs.attached[\"gamepad\"];\r\n        if (gamepad) {\r\n            return gamepad.gamepadMoveSensibility;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    public set gamepadMoveSensibility(value: number) {\r\n        const gamepad = <FreeCameraGamepadInput>this.inputs.attached[\"gamepad\"];\r\n        if (gamepad) {\r\n            gamepad.gamepadMoveSensibility = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The Universal Camera is the one to choose for first person shooter type games, and works with all the keyboard, mouse, touch and gamepads. This replaces the earlier Free Camera,\r\n     * which still works and will still be found in many Playgrounds.\r\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/camera_introduction#universal-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene?: Scene) {\r\n        super(name, position, scene);\r\n        this.inputs.addGamepad();\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @returns the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"UniversalCamera\";\r\n    }\r\n}\r\n\r\nCamera._CreateDefaultParsedCamera = (name: string, scene: Scene) => {\r\n    return new UniversalCamera(name, Vector3.Zero(), scene);\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}