{"ast":null,"code":"import { StencilStateComposer } from \"../../States/stencilStateComposer.js\";\n/**\n * @internal\n **/\nexport class WebGPUStencilStateComposer extends StencilStateComposer {\n  constructor(cache) {\n    super(false);\n    this._cache = cache;\n    this.reset();\n  }\n  get func() {\n    return this._func;\n  }\n  set func(value) {\n    if (this._func === value) {\n      return;\n    }\n    this._func = value;\n    this._cache.setStencilCompare(value);\n  }\n  get funcMask() {\n    return this._funcMask;\n  }\n  set funcMask(value) {\n    if (this._funcMask === value) {\n      return;\n    }\n    this._funcMask = value;\n    this._cache.setStencilReadMask(value);\n  }\n  get opStencilFail() {\n    return this._opStencilFail;\n  }\n  set opStencilFail(value) {\n    if (this._opStencilFail === value) {\n      return;\n    }\n    this._opStencilFail = value;\n    this._cache.setStencilFailOp(value);\n  }\n  get opDepthFail() {\n    return this._opDepthFail;\n  }\n  set opDepthFail(value) {\n    if (this._opDepthFail === value) {\n      return;\n    }\n    this._opDepthFail = value;\n    this._cache.setStencilDepthFailOp(value);\n  }\n  get opStencilDepthPass() {\n    return this._opStencilDepthPass;\n  }\n  set opStencilDepthPass(value) {\n    if (this._opStencilDepthPass === value) {\n      return;\n    }\n    this._opStencilDepthPass = value;\n    this._cache.setStencilPassOp(value);\n  }\n  get mask() {\n    return this._mask;\n  }\n  set mask(value) {\n    if (this._mask === value) {\n      return;\n    }\n    this._mask = value;\n    this._cache.setStencilWriteMask(value);\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    if (this._enabled === value) {\n      return;\n    }\n    this._enabled = value;\n    this._cache.setStencilEnabled(value);\n  }\n  reset() {\n    super.reset();\n    this._cache.resetStencilState();\n  }\n  apply() {\n    var _a;\n    const stencilMaterialEnabled = (_a = this.stencilMaterial) === null || _a === void 0 ? void 0 : _a.enabled;\n    this.enabled = stencilMaterialEnabled ? this.stencilMaterial.enabled : this.stencilGlobal.enabled;\n    if (!this.enabled) {\n      return;\n    }\n    this.func = stencilMaterialEnabled ? this.stencilMaterial.func : this.stencilGlobal.func;\n    this.funcRef = stencilMaterialEnabled ? this.stencilMaterial.funcRef : this.stencilGlobal.funcRef;\n    this.funcMask = stencilMaterialEnabled ? this.stencilMaterial.funcMask : this.stencilGlobal.funcMask;\n    this.opStencilFail = stencilMaterialEnabled ? this.stencilMaterial.opStencilFail : this.stencilGlobal.opStencilFail;\n    this.opDepthFail = stencilMaterialEnabled ? this.stencilMaterial.opDepthFail : this.stencilGlobal.opDepthFail;\n    this.opStencilDepthPass = stencilMaterialEnabled ? this.stencilMaterial.opStencilDepthPass : this.stencilGlobal.opStencilDepthPass;\n    this.mask = stencilMaterialEnabled ? this.stencilMaterial.mask : this.stencilGlobal.mask;\n  }\n}","map":{"version":3,"mappings":"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","names":["StencilStateComposer","WebGPUStencilStateComposer","constructor","cache","_cache","reset","func","_func","value","setStencilCompare","funcMask","_funcMask","setStencilReadMask","opStencilFail","_opStencilFail","setStencilFailOp","opDepthFail","_opDepthFail","setStencilDepthFailOp","opStencilDepthPass","_opStencilDepthPass","setStencilPassOp","mask","_mask","setStencilWriteMask","enabled","_enabled","setStencilEnabled","resetStencilState","apply","stencilMaterialEnabled","stencilMaterial","stencilGlobal","funcRef"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Engines/WebGPU/webgpuStencilStateComposer.ts"],"sourcesContent":["import type { WebGPUCacheRenderPipeline } from \"./webgpuCacheRenderPipeline\";\r\nimport { StencilStateComposer } from \"../../States/stencilStateComposer\";\r\n\r\n/**\r\n * @internal\r\n **/\r\nexport class WebGPUStencilStateComposer extends StencilStateComposer {\r\n    private _cache: WebGPUCacheRenderPipeline;\r\n\r\n    public constructor(cache: WebGPUCacheRenderPipeline) {\r\n        super(false);\r\n        this._cache = cache;\r\n        this.reset();\r\n    }\r\n\r\n    public get func(): number {\r\n        return this._func;\r\n    }\r\n\r\n    public set func(value: number) {\r\n        if (this._func === value) {\r\n            return;\r\n        }\r\n\r\n        this._func = value;\r\n        this._cache.setStencilCompare(value);\r\n    }\r\n\r\n    public get funcMask(): number {\r\n        return this._funcMask;\r\n    }\r\n\r\n    public set funcMask(value: number) {\r\n        if (this._funcMask === value) {\r\n            return;\r\n        }\r\n\r\n        this._funcMask = value;\r\n        this._cache.setStencilReadMask(value);\r\n    }\r\n\r\n    public get opStencilFail(): number {\r\n        return this._opStencilFail;\r\n    }\r\n\r\n    public set opStencilFail(value: number) {\r\n        if (this._opStencilFail === value) {\r\n            return;\r\n        }\r\n\r\n        this._opStencilFail = value;\r\n        this._cache.setStencilFailOp(value);\r\n    }\r\n\r\n    public get opDepthFail(): number {\r\n        return this._opDepthFail;\r\n    }\r\n\r\n    public set opDepthFail(value: number) {\r\n        if (this._opDepthFail === value) {\r\n            return;\r\n        }\r\n\r\n        this._opDepthFail = value;\r\n        this._cache.setStencilDepthFailOp(value);\r\n    }\r\n\r\n    public get opStencilDepthPass(): number {\r\n        return this._opStencilDepthPass;\r\n    }\r\n\r\n    public set opStencilDepthPass(value: number) {\r\n        if (this._opStencilDepthPass === value) {\r\n            return;\r\n        }\r\n\r\n        this._opStencilDepthPass = value;\r\n        this._cache.setStencilPassOp(value);\r\n    }\r\n\r\n    public get mask(): number {\r\n        return this._mask;\r\n    }\r\n\r\n    public set mask(value: number) {\r\n        if (this._mask === value) {\r\n            return;\r\n        }\r\n\r\n        this._mask = value;\r\n        this._cache.setStencilWriteMask(value);\r\n    }\r\n\r\n    public get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    public set enabled(value: boolean) {\r\n        if (this._enabled === value) {\r\n            return;\r\n        }\r\n\r\n        this._enabled = value;\r\n        this._cache.setStencilEnabled(value);\r\n    }\r\n\r\n    public reset() {\r\n        super.reset();\r\n        this._cache.resetStencilState();\r\n    }\r\n\r\n    public apply() {\r\n        const stencilMaterialEnabled = this.stencilMaterial?.enabled;\r\n\r\n        this.enabled = stencilMaterialEnabled ? this.stencilMaterial!.enabled : this.stencilGlobal.enabled;\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this.func = stencilMaterialEnabled ? this.stencilMaterial!.func : this.stencilGlobal.func;\r\n        this.funcRef = stencilMaterialEnabled ? this.stencilMaterial!.funcRef : this.stencilGlobal.funcRef;\r\n        this.funcMask = stencilMaterialEnabled ? this.stencilMaterial!.funcMask : this.stencilGlobal.funcMask;\r\n        this.opStencilFail = stencilMaterialEnabled ? this.stencilMaterial!.opStencilFail : this.stencilGlobal.opStencilFail;\r\n        this.opDepthFail = stencilMaterialEnabled ? this.stencilMaterial!.opDepthFail : this.stencilGlobal.opDepthFail;\r\n        this.opStencilDepthPass = stencilMaterialEnabled ? this.stencilMaterial!.opStencilDepthPass : this.stencilGlobal.opStencilDepthPass;\r\n        this.mask = stencilMaterialEnabled ? this.stencilMaterial!.mask : this.stencilGlobal.mask;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}