{"ast":null,"code":"import { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to blend normals\n */\nexport class NormalBlendBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new NormalBlendBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    this.registerInput(\"normalMap0\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n    this.registerInput(\"normalMap1\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n    this._inputs[0].addExcludedConnectionPointFromAllowedTypes(NodeMaterialBlockConnectionPointTypes.Color3 | NodeMaterialBlockConnectionPointTypes.Color4 | NodeMaterialBlockConnectionPointTypes.Vector3 | NodeMaterialBlockConnectionPointTypes.Vector4);\n    this._inputs[1].addExcludedConnectionPointFromAllowedTypes(NodeMaterialBlockConnectionPointTypes.Color3 | NodeMaterialBlockConnectionPointTypes.Color4 | NodeMaterialBlockConnectionPointTypes.Vector3 | NodeMaterialBlockConnectionPointTypes.Vector4);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"NormalBlendBlock\";\n  }\n  /**\n   * Gets the first input component\n   */\n  get normalMap0() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the second input component\n   */\n  get normalMap1() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const output = this._outputs[0];\n    const input0 = this._inputs[0];\n    const input1 = this._inputs[1];\n    const stepR = state._getFreeVariableName(\"stepR\");\n    const stepG = state._getFreeVariableName(\"stepG\");\n    state.compilationString += `float ${stepR} = step(0.5, ${input0.associatedVariableName}.r);\\r\\n`;\n    state.compilationString += `float ${stepG} = step(0.5, ${input0.associatedVariableName}.g);\\r\\n`;\n    state.compilationString += this._declareOutput(output, state) + `;\\r\\n`;\n    state.compilationString += `${output.associatedVariableName}.r = (1.0 - ${stepR}) * ${input0.associatedVariableName}.r * ${input1.associatedVariableName}.r * 2.0 + ${stepR} * (1.0 - (1.0 - ${input0.associatedVariableName}.r) * (1.0 - ${input1.associatedVariableName}.r) * 2.0);\\r\\n`;\n    state.compilationString += `${output.associatedVariableName}.g = (1.0 - ${stepG}) * ${input0.associatedVariableName}.g * ${input1.associatedVariableName}.g * 2.0 + ${stepG} * (1.0 - (1.0 - ${input0.associatedVariableName}.g) * (1.0 - ${input1.associatedVariableName}.g) * 2.0);\\r\\n`;\n    state.compilationString += `${output.associatedVariableName}.b = ${input0.associatedVariableName}.b * ${input1.associatedVariableName}.b;\\r\\n`;\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.NormalBlendBlock\", NormalBlendBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","NormalBlendBlock","constructor","name","Neutral","registerInput","AutoDetect","registerOutput","Vector3","_inputs","addExcludedConnectionPointFromAllowedTypes","Color3","Color4","Vector4","getClassName","normalMap0","normalMap1","output","_outputs","_buildBlock","state","input0","input1","stepR","_getFreeVariableName","stepG","compilationString","associatedVariableName","_declareOutput"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/normalBlendBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to blend normals\r\n */\r\nexport class NormalBlendBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new NormalBlendBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"normalMap0\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerInput(\"normalMap1\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this._inputs[0].addExcludedConnectionPointFromAllowedTypes(\r\n            NodeMaterialBlockConnectionPointTypes.Color3 |\r\n                NodeMaterialBlockConnectionPointTypes.Color4 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector3 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector4\r\n        );\r\n\r\n        this._inputs[1].addExcludedConnectionPointFromAllowedTypes(\r\n            NodeMaterialBlockConnectionPointTypes.Color3 |\r\n                NodeMaterialBlockConnectionPointTypes.Color4 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector3 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector4\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"NormalBlendBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the first input component\r\n     */\r\n    public get normalMap0(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the second input component\r\n     */\r\n    public get normalMap1(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n        const input0 = this._inputs[0];\r\n        const input1 = this._inputs[1];\r\n        const stepR = state._getFreeVariableName(\"stepR\");\r\n        const stepG = state._getFreeVariableName(\"stepG\");\r\n\r\n        state.compilationString += `float ${stepR} = step(0.5, ${input0.associatedVariableName}.r);\\r\\n`;\r\n        state.compilationString += `float ${stepG} = step(0.5, ${input0.associatedVariableName}.g);\\r\\n`;\r\n        state.compilationString += this._declareOutput(output, state) + `;\\r\\n`;\r\n        state.compilationString += `${output.associatedVariableName}.r = (1.0 - ${stepR}) * ${input0.associatedVariableName}.r * ${input1.associatedVariableName}.r * 2.0 + ${stepR} * (1.0 - (1.0 - ${input0.associatedVariableName}.r) * (1.0 - ${input1.associatedVariableName}.r) * 2.0);\\r\\n`;\r\n        state.compilationString += `${output.associatedVariableName}.g = (1.0 - ${stepG}) * ${input0.associatedVariableName}.g * ${input1.associatedVariableName}.g * 2.0 + ${stepG} * (1.0 - (1.0 - ${input0.associatedVariableName}.g) * (1.0 - ${input1.associatedVariableName}.g) * 2.0);\\r\\n`;\r\n        state.compilationString += `${output.associatedVariableName}.b = ${input0.associatedVariableName}.b * ${input1.associatedVariableName}.b;\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NormalBlendBlock\", NormalBlendBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}