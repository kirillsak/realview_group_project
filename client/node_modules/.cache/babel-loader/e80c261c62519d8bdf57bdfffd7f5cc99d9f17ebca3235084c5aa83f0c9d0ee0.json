{"ast":null,"code":"/* eslint-disable @typescript-eslint/naming-convention */\n/**\n * Checks if the window object exists\n * @returns true if the window object exists\n */\nexport function IsWindowObjectExist() {\n  return typeof window !== \"undefined\";\n}\n/**\n * Checks if the navigator object exists\n * @returns true if the navigator object exists\n */\nexport function IsNavigatorAvailable() {\n  return typeof navigator !== \"undefined\";\n}\n/**\n * Check if the document object exists\n * @returns true if the document object exists\n */\nexport function IsDocumentAvailable() {\n  return typeof document !== \"undefined\";\n}\n/**\n * Extracts text content from a DOM element hierarchy\n * @param element defines the root element\n * @returns a string\n */\nexport function GetDOMTextContent(element) {\n  let result = \"\";\n  let child = element.firstChild;\n  while (child) {\n    if (child.nodeType === 3) {\n      result += child.textContent;\n    }\n    child = child.nextSibling;\n  }\n  return result;\n}\n/**\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\n * Babylon.js\n */\nexport const DomManagement = {\n  /**\n   * Checks if the window object exists\n   * @returns true if the window object exists\n   */\n  IsWindowObjectExist,\n  /**\n   * Checks if the navigator object exists\n   * @returns true if the navigator object exists\n   */\n  IsNavigatorAvailable,\n  /**\n   * Check if the document object exists\n   * @returns true if the document object exists\n   */\n  IsDocumentAvailable,\n  /**\n   * Extracts text content from a DOM element hierarchy\n   * @param element defines the root element\n   * @returns a string\n   */\n  GetDOMTextContent\n};","map":{"version":3,"mappings":"AAAA;AACA;;;;AAIA,OAAM,SAAUA,mBAAmB;EAC/B,OAAO,OAAOC,MAAM,KAAK,WAAW;AACxC;AAEA;;;;AAIA,OAAM,SAAUC,oBAAoB;EAChC,OAAO,OAAOC,SAAS,KAAK,WAAW;AAC3C;AAEA;;;;AAIA,OAAM,SAAUC,mBAAmB;EAC/B,OAAO,OAAOC,QAAQ,KAAK,WAAW;AAC1C;AAEA;;;;;AAKA,OAAM,SAAUC,iBAAiB,CAACC,OAAoB;EAClD,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK,GAAGF,OAAO,CAACG,UAAU;EAE9B,OAAOD,KAAK,EAAE;IACV,IAAIA,KAAK,CAACE,QAAQ,KAAK,CAAC,EAAE;MACtBH,MAAM,IAAIC,KAAK,CAACG,WAAW;;IAE/BH,KAAK,GAAQA,KAAK,CAACI,WAAW;;EAGlC,OAAOL,MAAM;AACjB;AAEA;;;;AAIA,OAAO,MAAMM,aAAa,GAAG;EACzB;;;;EAIAd,mBAAmB;EAEnB;;;;EAIAE,oBAAoB;EAEpB;;;;EAIAE,mBAAmB;EACnB;;;;;EAKAE;CACH","names":["IsWindowObjectExist","window","IsNavigatorAvailable","navigator","IsDocumentAvailable","document","GetDOMTextContent","element","result","child","firstChild","nodeType","textContent","nextSibling","DomManagement"],"sourceRoot":"","sources":["../../../../lts/core/generated/Misc/domManagement.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\n/**\r\n * Checks if the window object exists\r\n * @returns true if the window object exists\r\n */\r\nexport function IsWindowObjectExist(): boolean {\r\n    return typeof window !== \"undefined\";\r\n}\r\n\r\n/**\r\n * Checks if the navigator object exists\r\n * @returns true if the navigator object exists\r\n */\r\nexport function IsNavigatorAvailable(): boolean {\r\n    return typeof navigator !== \"undefined\";\r\n}\r\n\r\n/**\r\n * Check if the document object exists\r\n * @returns true if the document object exists\r\n */\r\nexport function IsDocumentAvailable(): boolean {\r\n    return typeof document !== \"undefined\";\r\n}\r\n\r\n/**\r\n * Extracts text content from a DOM element hierarchy\r\n * @param element defines the root element\r\n * @returns a string\r\n */\r\nexport function GetDOMTextContent(element: HTMLElement): string {\r\n    let result = \"\";\r\n    let child = element.firstChild;\r\n\r\n    while (child) {\r\n        if (child.nodeType === 3) {\r\n            result += child.textContent;\r\n        }\r\n        child = <any>child.nextSibling;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\r\n * Babylon.js\r\n */\r\nexport const DomManagement = {\r\n    /**\r\n     * Checks if the window object exists\r\n     * @returns true if the window object exists\r\n     */\r\n    IsWindowObjectExist,\r\n\r\n    /**\r\n     * Checks if the navigator object exists\r\n     * @returns true if the navigator object exists\r\n     */\r\n    IsNavigatorAvailable,\r\n\r\n    /**\r\n     * Check if the document object exists\r\n     * @returns true if the document object exists\r\n     */\r\n    IsDocumentAvailable,\r\n    /**\r\n     * Extracts text content from a DOM element hierarchy\r\n     * @param element defines the root element\r\n     * @returns a string\r\n     */\r\n    GetDOMTextContent,\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}