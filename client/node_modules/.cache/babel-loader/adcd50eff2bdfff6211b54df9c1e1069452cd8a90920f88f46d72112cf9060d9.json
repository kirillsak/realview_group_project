{"ast":null,"code":"import { __decorate } from \"../../tslib.es6.js\";\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { serialize, expandToProperty } from \"../../Misc/decorators.js\";\nimport { MaterialDefines } from \"../materialDefines.js\";\nimport { MaterialPluginBase } from \"../materialPluginBase.js\";\n/**\n * @internal\n */\nexport class MaterialBRDFDefines extends MaterialDefines {\n  constructor() {\n    super(...arguments);\n    this.BRDF_V_HEIGHT_CORRELATED = false;\n    this.MS_BRDF_ENERGY_CONSERVATION = false;\n    this.SPHERICAL_HARMONICS = false;\n    this.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = false;\n  }\n}\n/**\n * Plugin that implements the BRDF component of the PBR material\n */\nexport class PBRBRDFConfiguration extends MaterialPluginBase {\n  constructor(material, addToPluginList = true) {\n    super(material, \"PBRBRDF\", 90, new MaterialBRDFDefines(), addToPluginList);\n    this._useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\n    /**\n     * Defines if the material uses energy conservation.\n     */\n    this.useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\n    this._useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\n    /**\n     * LEGACY Mode set to false\n     * Defines if the material uses height smith correlated visibility term.\n     * If you intent to not use our default BRDF, you need to load a separate BRDF Texture for the PBR\n     * You can either load https://assets.babylonjs.com/environments/uncorrelatedBRDF.png\n     * or https://assets.babylonjs.com/environments/uncorrelatedBRDF.dds to have more precision\n     * Not relying on height correlated will also disable energy conservation.\n     */\n    this.useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\n    this._useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\n    /**\n     * LEGACY Mode set to false\n     * Defines if the material uses spherical harmonics vs spherical polynomials for the\n     * diffuse part of the IBL.\n     * The harmonics despite a tiny bigger cost has been proven to provide closer results\n     * to the ground truth.\n     */\n    this.useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\n    this._useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\n    /**\n     * Defines if the material uses energy conservation, when the specular workflow is active.\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\n     * In the deactivated case, the material author has to ensure energy conservation, for a physically plausible rendering.\n     */\n    this.useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\n    this._internalMarkAllSubMeshesAsMiscDirty = material._dirtyCallbacks[16];\n    this._enable(true);\n  }\n  /** @internal */\n  _markAllSubMeshesAsMiscDirty() {\n    this._internalMarkAllSubMeshesAsMiscDirty();\n  }\n  prepareDefines(defines) {\n    defines.BRDF_V_HEIGHT_CORRELATED = this._useSmithVisibilityHeightCorrelated;\n    defines.MS_BRDF_ENERGY_CONSERVATION = this._useEnergyConservation && this._useSmithVisibilityHeightCorrelated;\n    defines.SPHERICAL_HARMONICS = this._useSphericalHarmonics;\n    defines.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = this._useSpecularGlossinessInputEnergyConservation;\n  }\n  getClassName() {\n    return \"PBRBRDFConfiguration\";\n  }\n}\n/**\n * Default value used for the energy conservation.\n * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\n */\nPBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION = true;\n/**\n * Default value used for the Smith Visibility Height Correlated mode.\n * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\n */\nPBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED = true;\n/**\n * Default value used for the IBL diffuse part.\n * This can help switching back to the polynomials mode globally which is a tiny bit\n * less GPU intensive at the drawback of a lower quality.\n */\nPBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS = true;\n/**\n * Default value used for activating energy conservation for the specular workflow.\n * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\n * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\n */\nPBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION = true;\n__decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useEnergyConservation\", void 0);\n__decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSmithVisibilityHeightCorrelated\", void 0);\n__decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSphericalHarmonics\", void 0);\n__decorate([serialize(), expandToProperty(\"_markAllSubMeshesAsMiscDirty\")], PBRBRDFConfiguration.prototype, \"useSpecularGlossinessInputEnergyConservation\", void 0);","map":{"version":3,"mappings":";AAAA;;AAEA,SAASA,SAAS,EAAEC,gBAAgB,QAAQ,0BAAwB;AACpE,SAASC,eAAe,QAAQ,uBAAqB;AACrD,SAASC,kBAAkB,QAAQ,0BAAwB;AAG3D;;;AAGA,OAAM,MAAOC,mBAAoB,SAAQF,eAAe;EAAxDG;;IACI,6BAAwB,GAAG,KAAK;IAChC,gCAA2B,GAAG,KAAK;IACnC,wBAAmB,GAAG,KAAK;IAC3B,4CAAuC,GAAG,KAAK;EACnD;;AAEA;;;AAGA,OAAM,MAAOC,oBAAqB,SAAQH,kBAAkB;EA+ExDE,YAAYE,QAAyB,EAAEC,eAAe,GAAG,IAAI;IACzD,KAAK,CAACD,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,IAAIH,mBAAmB,EAAE,EAAEI,eAAe,CAAC;IArDtE,2BAAsB,GAAGF,oBAAoB,CAACG,+BAA+B;IACrF;;;IAKO,0BAAqB,GAAGH,oBAAoB,CAACG,+BAA+B;IAE3E,wCAAmC,GAAGH,oBAAoB,CAACI,8CAA8C;IACjH;;;;;;;;IAUO,uCAAkC,GAAGJ,oBAAoB,CAACI,8CAA8C;IAEvG,2BAAsB,GAAGJ,oBAAoB,CAACK,+BAA+B;IACrF;;;;;;;IASO,0BAAqB,GAAGL,oBAAoB,CAACK,+BAA+B;IAE3E,kDAA6C,GAAGL,oBAAoB,CAACM,yDAAyD;IACtI;;;;;;IAQO,iDAA4C,GAAGN,oBAAoB,CAACM,yDAAyD;IAahI,IAAI,CAACC,oCAAoC,GAAGN,QAAQ,CAACO,eAAe,CAAC;IACrE,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC;EACtB;EAVA;EACOC,4BAA4B;IAC/B,IAAI,CAACH,oCAAoC,EAAE;EAC/C;EASOI,cAAc,CAACC,OAA4B;IAC9CA,OAAO,CAACC,wBAAwB,GAAG,IAAI,CAACC,mCAAmC;IAC3EF,OAAO,CAACG,2BAA2B,GAAG,IAAI,CAACC,sBAAsB,IAAI,IAAI,CAACF,mCAAmC;IAC7GF,OAAO,CAACK,mBAAmB,GAAG,IAAI,CAACC,sBAAsB;IACzDN,OAAO,CAACO,uCAAuC,GAAG,IAAI,CAACC,6CAA6C;EACxG;EAEOC,YAAY;IACf,OAAO,sBAAsB;EACjC;;AA9FA;;;;AAIcrB,oDAA+B,GAAG,IAAI;AAEpD;;;;AAIcA,mEAA8C,GAAG,IAAI;AAEnE;;;;;AAKcA,oDAA+B,GAAG,IAAI;AAEpD;;;;;AAKcA,8EAAyD,GAAG,IAAI;AAQ9EsB,YAFC5B,SAAS,EAAE,EACXC,gBAAgB,CAAC,8BAA8B,CAAC,mEACmC;AAapF2B,YAFC5B,SAAS,EAAE,EACXC,gBAAgB,CAAC,8BAA8B,CAAC,gFAC+D;AAYhH2B,YAFC5B,SAAS,EAAE,EACXC,gBAAgB,CAAC,8BAA8B,CAAC,mEACmC;AAWpF2B,YAFC5B,SAAS,EAAE,EACXC,gBAAgB,CAAC,8BAA8B,CAAC,0FACoF","names":["serialize","expandToProperty","MaterialDefines","MaterialPluginBase","MaterialBRDFDefines","constructor","PBRBRDFConfiguration","material","addToPluginList","DEFAULT_USE_ENERGY_CONSERVATION","DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED","DEFAULT_USE_SPHERICAL_HARMONICS","DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION","_internalMarkAllSubMeshesAsMiscDirty","_dirtyCallbacks","_enable","_markAllSubMeshesAsMiscDirty","prepareDefines","defines","BRDF_V_HEIGHT_CORRELATED","_useSmithVisibilityHeightCorrelated","MS_BRDF_ENERGY_CONSERVATION","_useEnergyConservation","SPHERICAL_HARMONICS","_useSphericalHarmonics","SPECULAR_GLOSSINESS_ENERGY_CONSERVATION","_useSpecularGlossinessInputEnergyConservation","getClassName","__decorate"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Materials/PBR/pbrBRDFConfiguration.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Constants } from \"../../Engines/constants\";\r\nimport { serialize, expandToProperty } from \"../../Misc/decorators\";\r\nimport { MaterialDefines } from \"../materialDefines\";\r\nimport { MaterialPluginBase } from \"../materialPluginBase\";\r\nimport type { PBRBaseMaterial } from \"./pbrBaseMaterial\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class MaterialBRDFDefines extends MaterialDefines {\r\n    BRDF_V_HEIGHT_CORRELATED = false;\r\n    MS_BRDF_ENERGY_CONSERVATION = false;\r\n    SPHERICAL_HARMONICS = false;\r\n    SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = false;\r\n}\r\n\r\n/**\r\n * Plugin that implements the BRDF component of the PBR material\r\n */\r\nexport class PBRBRDFConfiguration extends MaterialPluginBase {\r\n    /**\r\n     * Default value used for the energy conservation.\r\n     * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\r\n     */\r\n    public static DEFAULT_USE_ENERGY_CONSERVATION = true;\r\n\r\n    /**\r\n     * Default value used for the Smith Visibility Height Correlated mode.\r\n     * This should only be changed to adapt to the type of texture in scene.environmentBRDFTexture.\r\n     */\r\n    public static DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED = true;\r\n\r\n    /**\r\n     * Default value used for the IBL diffuse part.\r\n     * This can help switching back to the polynomials mode globally which is a tiny bit\r\n     * less GPU intensive at the drawback of a lower quality.\r\n     */\r\n    public static DEFAULT_USE_SPHERICAL_HARMONICS = true;\r\n\r\n    /**\r\n     * Default value used for activating energy conservation for the specular workflow.\r\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\r\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\r\n     */\r\n    public static DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION = true;\r\n\r\n    private _useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\r\n    /**\r\n     * Defines if the material uses energy conservation.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_ENERGY_CONSERVATION;\r\n\r\n    private _useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\r\n    /**\r\n     * LEGACY Mode set to false\r\n     * Defines if the material uses height smith correlated visibility term.\r\n     * If you intent to not use our default BRDF, you need to load a separate BRDF Texture for the PBR\r\n     * You can either load https://assets.babylonjs.com/environments/uncorrelatedBRDF.png\r\n     * or https://assets.babylonjs.com/environments/uncorrelatedBRDF.dds to have more precision\r\n     * Not relying on height correlated will also disable energy conservation.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useSmithVisibilityHeightCorrelated = PBRBRDFConfiguration.DEFAULT_USE_SMITH_VISIBILITY_HEIGHT_CORRELATED;\r\n\r\n    private _useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\r\n    /**\r\n     * LEGACY Mode set to false\r\n     * Defines if the material uses spherical harmonics vs spherical polynomials for the\r\n     * diffuse part of the IBL.\r\n     * The harmonics despite a tiny bigger cost has been proven to provide closer results\r\n     * to the ground truth.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useSphericalHarmonics = PBRBRDFConfiguration.DEFAULT_USE_SPHERICAL_HARMONICS;\r\n\r\n    private _useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\r\n    /**\r\n     * Defines if the material uses energy conservation, when the specular workflow is active.\r\n     * If activated, the albedo color is multiplied with (1. - maxChannel(specular color)).\r\n     * If deactivated, a material is only physically plausible, when (albedo color + specular color) < 1.\r\n     * In the deactivated case, the material author has to ensure energy conservation, for a physically plausible rendering.\r\n     */\r\n    @serialize()\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useSpecularGlossinessInputEnergyConservation = PBRBRDFConfiguration.DEFAULT_USE_SPECULAR_GLOSSINESS_INPUT_ENERGY_CONSERVATION;\r\n\r\n    /** @internal */\r\n    private _internalMarkAllSubMeshesAsMiscDirty: () => void;\r\n\r\n    /** @internal */\r\n    public _markAllSubMeshesAsMiscDirty(): void {\r\n        this._internalMarkAllSubMeshesAsMiscDirty();\r\n    }\r\n\r\n    constructor(material: PBRBaseMaterial, addToPluginList = true) {\r\n        super(material, \"PBRBRDF\", 90, new MaterialBRDFDefines(), addToPluginList);\r\n\r\n        this._internalMarkAllSubMeshesAsMiscDirty = material._dirtyCallbacks[Constants.MATERIAL_MiscDirtyFlag];\r\n        this._enable(true);\r\n    }\r\n\r\n    public prepareDefines(defines: MaterialBRDFDefines): void {\r\n        defines.BRDF_V_HEIGHT_CORRELATED = this._useSmithVisibilityHeightCorrelated;\r\n        defines.MS_BRDF_ENERGY_CONSERVATION = this._useEnergyConservation && this._useSmithVisibilityHeightCorrelated;\r\n        defines.SPHERICAL_HARMONICS = this._useSphericalHarmonics;\r\n        defines.SPECULAR_GLOSSINESS_ENERGY_CONSERVATION = this._useSpecularGlossinessInputEnergyConservation;\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"PBRBRDFConfiguration\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}