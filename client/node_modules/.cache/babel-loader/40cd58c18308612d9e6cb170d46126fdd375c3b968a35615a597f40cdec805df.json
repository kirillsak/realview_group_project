{"ast":null,"code":"import { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the reflected vector from a direction and a normal\n */\nexport class ReflectBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new ReflectBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    this.registerInput(\"incident\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n    this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n    this._inputs[0].addExcludedConnectionPointFromAllowedTypes(NodeMaterialBlockConnectionPointTypes.Vector3 | NodeMaterialBlockConnectionPointTypes.Vector4 | NodeMaterialBlockConnectionPointTypes.Color3 | NodeMaterialBlockConnectionPointTypes.Color4);\n    this._inputs[1].addExcludedConnectionPointFromAllowedTypes(NodeMaterialBlockConnectionPointTypes.Vector3 | NodeMaterialBlockConnectionPointTypes.Vector4 | NodeMaterialBlockConnectionPointTypes.Color3 | NodeMaterialBlockConnectionPointTypes.Color4);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"ReflectBlock\";\n  }\n  /**\n   * Gets the incident component\n   */\n  get incident() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the normal component\n   */\n  get normal() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + ` = reflect(${this.incident.associatedVariableName}.xyz, ${this.normal.associatedVariableName}.xyz);\\r\\n`;\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.ReflectBlock\", ReflectBlock);","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,yBAAuB;AACzD,SAASC,qCAAqC,QAAQ,mDAAiD;AAGvG,SAASC,wBAAwB,QAAQ,sCAAoC;AAC7E,SAASC,aAAa,QAAQ,4BAA0B;AACxD;;;AAGA,OAAM,MAAOC,YAAa,SAAQJ,iBAAiB;EAC/C;;;;EAIAK,YAAmBC,IAAY;IAC3B,KAAK,CAACA,IAAI,EAAEJ,wBAAwB,CAACK,OAAO,CAAC;IAE7C,IAAI,CAACC,aAAa,CAAC,UAAU,EAAEP,qCAAqC,CAACQ,UAAU,CAAC;IAChF,IAAI,CAACD,aAAa,CAAC,QAAQ,EAAEP,qCAAqC,CAACQ,UAAU,CAAC;IAC9E,IAAI,CAACC,cAAc,CAAC,QAAQ,EAAET,qCAAqC,CAACU,OAAO,CAAC;IAE5E,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,0CAA0C,CACtDZ,qCAAqC,CAACU,OAAO,GACzCV,qCAAqC,CAACa,OAAO,GAC7Cb,qCAAqC,CAACc,MAAM,GAC5Cd,qCAAqC,CAACe,MAAM,CACnD;IACD,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC,CAACC,0CAA0C,CACtDZ,qCAAqC,CAACU,OAAO,GACzCV,qCAAqC,CAACa,OAAO,GAC7Cb,qCAAqC,CAACc,MAAM,GAC5Cd,qCAAqC,CAACe,MAAM,CACnD;EACL;EAEA;;;;EAIOC,YAAY;IACf,OAAO,cAAc;EACzB;EAEA;;;EAGA,IAAWC,QAAQ;IACf,OAAO,IAAI,CAACN,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEA;;;EAGA,IAAWO,MAAM;IACb,OAAO,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEA;;;EAGA,IAAWQ,MAAM;IACb,OAAO,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEUC,WAAW,CAACC,KAA6B;IAC/C,KAAK,CAACD,WAAW,CAACC,KAAK,CAAC;IAExB,MAAMH,MAAM,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;IAE/BE,KAAK,CAACC,iBAAiB,IAAI,IAAI,CAACC,cAAc,CAACL,MAAM,EAAEG,KAAK,CAAC,GAAG,cAAc,IAAI,CAACL,QAAQ,CAACQ,sBAAsB,SAAS,IAAI,CAACP,MAAM,CAACO,sBAAsB,YAAY;IAEzK,OAAO,IAAI;EACf;;AAGJvB,aAAa,CAAC,sBAAsB,EAAEC,YAAY,CAAC","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","ReflectBlock","constructor","name","Neutral","registerInput","AutoDetect","registerOutput","Vector3","_inputs","addExcludedConnectionPointFromAllowedTypes","Vector4","Color3","Color4","getClassName","incident","normal","output","_outputs","_buildBlock","state","compilationString","_declareOutput","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/reflectBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n/**\r\n * Block used to get the reflected vector from a direction and a normal\r\n */\r\nexport class ReflectBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new ReflectBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"incident\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this._inputs[0].addExcludedConnectionPointFromAllowedTypes(\r\n            NodeMaterialBlockConnectionPointTypes.Vector3 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector4 |\r\n                NodeMaterialBlockConnectionPointTypes.Color3 |\r\n                NodeMaterialBlockConnectionPointTypes.Color4\r\n        );\r\n        this._inputs[1].addExcludedConnectionPointFromAllowedTypes(\r\n            NodeMaterialBlockConnectionPointTypes.Vector3 |\r\n                NodeMaterialBlockConnectionPointTypes.Vector4 |\r\n                NodeMaterialBlockConnectionPointTypes.Color3 |\r\n                NodeMaterialBlockConnectionPointTypes.Color4\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ReflectBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the incident component\r\n     */\r\n    public get incident(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the normal component\r\n     */\r\n    public get normal(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString += this._declareOutput(output, state) + ` = reflect(${this.incident.associatedVariableName}.xyz, ${this.normal.associatedVariableName}.xyz);\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.ReflectBlock\", ReflectBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}