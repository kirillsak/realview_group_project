{"ast":null,"code":"import { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\nimport { Vector4 } from \"../../../Maths/math.vector.js\";\n/**\n * Block used to build a matrix from 4 Vector4\n */\nexport class MatrixBuilderBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new MatrixBuilder\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    this.registerInput(\"row0\", NodeMaterialBlockConnectionPointTypes.Vector4);\n    this.registerInput(\"row1\", NodeMaterialBlockConnectionPointTypes.Vector4);\n    this.registerInput(\"row2\", NodeMaterialBlockConnectionPointTypes.Vector4);\n    this.registerInput(\"row3\", NodeMaterialBlockConnectionPointTypes.Vector4);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Matrix);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"MatrixBuilder\";\n  }\n  /**\n   * Gets the row0 vector\n   */\n  get row0() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the row1 vector\n   */\n  get row1() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the row2 vector\n   */\n  get row2() {\n    return this._inputs[2];\n  }\n  /**\n   * Gets the row3 vector\n   */\n  get row3() {\n    return this._inputs[3];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  autoConfigure() {\n    if (!this.row0.isConnected) {\n      const row0Input = new InputBlock(\"row0\");\n      row0Input.value = new Vector4(1, 0, 0, 0);\n      row0Input.output.connectTo(this.row0);\n    }\n    if (!this.row1.isConnected) {\n      const row1Input = new InputBlock(\"row1\");\n      row1Input.value = new Vector4(0, 1, 0, 0);\n      row1Input.output.connectTo(this.row1);\n    }\n    if (!this.row2.isConnected) {\n      const row2Input = new InputBlock(\"row2\");\n      row2Input.value = new Vector4(0, 0, 1, 0);\n      row2Input.output.connectTo(this.row2);\n    }\n    if (!this.row3.isConnected) {\n      const row3Input = new InputBlock(\"row3\");\n      row3Input.value = new Vector4(0, 0, 0, 1);\n      row3Input.output.connectTo(this.row3);\n    }\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const output = this._outputs[0];\n    const row0 = this.row0;\n    const row1 = this.row1;\n    const row2 = this.row2;\n    const row3 = this.row3;\n    state.compilationString += this._declareOutput(output, state) + ` = mat4(${row0.associatedVariableName}, ${row1.associatedVariableName}, ${row2.associatedVariableName}, ${row3.associatedVariableName});\\r\\n`;\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.MatrixBuilder\", MatrixBuilderBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","InputBlock","Vector4","MatrixBuilderBlock","constructor","name","Neutral","registerInput","registerOutput","Matrix","getClassName","row0","_inputs","row1","row2","row3","output","_outputs","autoConfigure","isConnected","row0Input","value","connectTo","row1Input","row2Input","row3Input","_buildBlock","state","compilationString","_declareOutput","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/matrixBuilderBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { InputBlock } from \"./Input/inputBlock\";\r\nimport { Vector4 } from \"../../../Maths/math.vector\";\r\n\r\n/**\r\n * Block used to build a matrix from 4 Vector4\r\n */\r\nexport class MatrixBuilderBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new MatrixBuilder\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"row0\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerInput(\"row1\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerInput(\"row2\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerInput(\"row3\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Matrix);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"MatrixBuilder\";\r\n    }\r\n\r\n    /**\r\n     * Gets the row0 vector\r\n     */\r\n    public get row0(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the row1 vector\r\n     */\r\n    public get row1(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the row2 vector\r\n     */\r\n    public get row2(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the row3 vector\r\n     */\r\n    public get row3(): NodeMaterialConnectionPoint {\r\n        return this._inputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    public autoConfigure() {\r\n        if (!this.row0.isConnected) {\r\n            const row0Input = new InputBlock(\"row0\");\r\n            row0Input.value = new Vector4(1, 0, 0, 0);\r\n            row0Input.output.connectTo(this.row0);\r\n        }\r\n\r\n        if (!this.row1.isConnected) {\r\n            const row1Input = new InputBlock(\"row1\");\r\n            row1Input.value = new Vector4(0, 1, 0, 0);\r\n            row1Input.output.connectTo(this.row1);\r\n        }\r\n\r\n        if (!this.row2.isConnected) {\r\n            const row2Input = new InputBlock(\"row2\");\r\n            row2Input.value = new Vector4(0, 0, 1, 0);\r\n            row2Input.output.connectTo(this.row2);\r\n        }\r\n\r\n        if (!this.row3.isConnected) {\r\n            const row3Input = new InputBlock(\"row3\");\r\n            row3Input.value = new Vector4(0, 0, 0, 1);\r\n            row3Input.output.connectTo(this.row3);\r\n        }\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n        const row0 = this.row0;\r\n        const row1 = this.row1;\r\n        const row2 = this.row2;\r\n        const row3 = this.row3;\r\n\r\n        state.compilationString +=\r\n            this._declareOutput(output, state) +\r\n            ` = mat4(${row0.associatedVariableName}, ${row1.associatedVariableName}, ${row2.associatedVariableName}, ${row3.associatedVariableName});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.MatrixBuilder\", MatrixBuilderBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}