{"ast":null,"code":"import { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { NodeMaterialSystemValues } from \"../Enums/nodeMaterialSystemValues.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\n/**\n * Block used to get the view direction\n */\nexport class ViewDirectionBlock extends NodeMaterialBlock {\n  /**\n   * Creates a new ViewDirectionBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4);\n    this.registerInput(\"cameraPosition\", NodeMaterialBlockConnectionPointTypes.Vector3);\n    this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"ViewDirectionBlock\";\n  }\n  /**\n   * Gets the world position component\n   */\n  get worldPosition() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the camera position component\n   */\n  get cameraPosition() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the output component\n   */\n  get output() {\n    return this._outputs[0];\n  }\n  autoConfigure(material) {\n    if (!this.cameraPosition.isConnected) {\n      let cameraPositionInput = material.getInputBlockByPredicate(b => b.systemValue === NodeMaterialSystemValues.CameraPosition);\n      if (!cameraPositionInput) {\n        cameraPositionInput = new InputBlock(\"cameraPosition\");\n        cameraPositionInput.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\n      }\n      cameraPositionInput.output.connectTo(this.cameraPosition);\n    }\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + ` = normalize(${this.cameraPosition.associatedVariableName} - ${this.worldPosition.associatedVariableName}.xyz);\\r\\n`;\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.ViewDirectionBlock\", ViewDirectionBlock);","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,yBAAuB;AACzD,SAASC,qCAAqC,QAAQ,mDAAiD;AAGvG,SAASC,wBAAwB,QAAQ,sCAAoC;AAC7E,SAASC,aAAa,QAAQ,4BAA0B;AAExD,SAASC,wBAAwB,QAAQ,sCAAoC;AAC7E,SAASC,UAAU,QAAQ,uBAAqB;AAChD;;;AAGA,OAAM,MAAOC,kBAAmB,SAAQN,iBAAiB;EACrD;;;;EAIAO,YAAmBC,IAAY;IAC3B,KAAK,CAACA,IAAI,EAAEN,wBAAwB,CAACO,OAAO,CAAC;IAE7C,IAAI,CAACC,aAAa,CAAC,eAAe,EAAET,qCAAqC,CAACU,OAAO,CAAC;IAClF,IAAI,CAACD,aAAa,CAAC,gBAAgB,EAAET,qCAAqC,CAACW,OAAO,CAAC;IAEnF,IAAI,CAACC,cAAc,CAAC,QAAQ,EAAEZ,qCAAqC,CAACW,OAAO,CAAC;EAChF;EAEA;;;;EAIOE,YAAY;IACf,OAAO,oBAAoB;EAC/B;EAEA;;;EAGA,IAAWC,aAAa;IACpB,OAAO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEA;;;EAGA,IAAWC,cAAc;IACrB,OAAO,IAAI,CAACD,OAAO,CAAC,CAAC,CAAC;EAC1B;EAEA;;;EAGA,IAAWE,MAAM;IACb,OAAO,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC3B;EAEOC,aAAa,CAACC,QAAsB;IACvC,IAAI,CAAC,IAAI,CAACJ,cAAc,CAACK,WAAW,EAAE;MAClC,IAAIC,mBAAmB,GAAGF,QAAQ,CAACG,wBAAwB,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,KAAKtB,wBAAwB,CAACuB,cAAc,CAAC;MAE7H,IAAI,CAACJ,mBAAmB,EAAE;QACtBA,mBAAmB,GAAG,IAAIlB,UAAU,CAAC,gBAAgB,CAAC;QACtDkB,mBAAmB,CAACK,gBAAgB,CAACxB,wBAAwB,CAACuB,cAAc,CAAC;;MAEjFJ,mBAAmB,CAACL,MAAM,CAACW,SAAS,CAAC,IAAI,CAACZ,cAAc,CAAC;;EAEjE;EAEUa,WAAW,CAACC,KAA6B;IAC/C,KAAK,CAACD,WAAW,CAACC,KAAK,CAAC;IAExB,MAAMb,MAAM,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;IAE/BY,KAAK,CAACC,iBAAiB,IACnB,IAAI,CAACC,cAAc,CAACf,MAAM,EAAEa,KAAK,CAAC,GAAG,gBAAgB,IAAI,CAACd,cAAc,CAACiB,sBAAsB,MAAM,IAAI,CAACnB,aAAa,CAACmB,sBAAsB,YAAY;IAE9J,OAAO,IAAI;EACf;;AAGJ/B,aAAa,CAAC,4BAA4B,EAAEG,kBAAkB,CAAC","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","NodeMaterialSystemValues","InputBlock","ViewDirectionBlock","constructor","name","Neutral","registerInput","Vector4","Vector3","registerOutput","getClassName","worldPosition","_inputs","cameraPosition","output","_outputs","autoConfigure","material","isConnected","cameraPositionInput","getInputBlockByPredicate","b","systemValue","CameraPosition","setAsSystemValue","connectTo","_buildBlock","state","compilationString","_declareOutput","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/viewDirectionBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport type { NodeMaterial } from \"../nodeMaterial\";\r\nimport { NodeMaterialSystemValues } from \"../Enums/nodeMaterialSystemValues\";\r\nimport { InputBlock } from \"./Input/inputBlock\";\r\n/**\r\n * Block used to get the view direction\r\n */\r\nexport class ViewDirectionBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new ViewDirectionBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerInput(\"cameraPosition\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ViewDirectionBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the world position component\r\n     */\r\n    public get worldPosition(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the camera position component\r\n     */\r\n    public get cameraPosition(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    public autoConfigure(material: NodeMaterial) {\r\n        if (!this.cameraPosition.isConnected) {\r\n            let cameraPositionInput = material.getInputBlockByPredicate((b) => b.systemValue === NodeMaterialSystemValues.CameraPosition);\r\n\r\n            if (!cameraPositionInput) {\r\n                cameraPositionInput = new InputBlock(\"cameraPosition\");\r\n                cameraPositionInput.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\r\n            }\r\n            cameraPositionInput.output.connectTo(this.cameraPosition);\r\n        }\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const output = this._outputs[0];\r\n\r\n        state.compilationString +=\r\n            this._declareOutput(output, state) + ` = normalize(${this.cameraPosition.associatedVariableName} - ${this.worldPosition.associatedVariableName}.xyz);\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.ViewDirectionBlock\", ViewDirectionBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}