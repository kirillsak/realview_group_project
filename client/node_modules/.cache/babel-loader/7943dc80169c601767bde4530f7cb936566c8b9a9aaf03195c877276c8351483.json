{"ast":null,"code":"import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.updateDynamicIndexBuffer = function (indexBuffer, indices, offset = 0) {\n  const gpuBuffer = indexBuffer;\n  let view;\n  if (indexBuffer.is32Bits) {\n    view = indices instanceof Uint32Array ? indices : new Uint32Array(indices);\n  } else {\n    view = indices instanceof Uint16Array ? indices : new Uint16Array(indices);\n  }\n  this._bufferManager.setSubData(gpuBuffer, offset, view);\n};\nWebGPUEngine.prototype.updateDynamicVertexBuffer = function (vertexBuffer, data, byteOffset, byteLength) {\n  const dataBuffer = vertexBuffer;\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  }\n  let view;\n  if (byteLength === undefined) {\n    if (data instanceof Array) {\n      view = new Float32Array(data);\n    } else if (data instanceof ArrayBuffer) {\n      view = new Uint8Array(data);\n    } else {\n      view = data;\n    }\n    byteLength = view.byteLength;\n  } else {\n    if (data instanceof Array) {\n      view = new Float32Array(data);\n    } else if (data instanceof ArrayBuffer) {\n      view = new Uint8Array(data);\n    } else {\n      view = data;\n    }\n  }\n  this._bufferManager.setSubData(dataBuffer, byteOffset, view, 0, byteLength);\n};","map":{"version":3,"mappings":"AAGA,SAASA,YAAY,QAAQ,uBAAqB;AAElDA,YAAY,CAACC,SAAS,CAACC,wBAAwB,GAAG,UAAUC,WAAuB,EAAEC,OAAqB,EAAEC,SAAiB,CAAC;EAC1H,MAAMC,SAAS,GAAGH,WAA+B;EAEjD,IAAII,IAAqB;EACzB,IAAIJ,WAAW,CAACK,QAAQ,EAAE;IACtBD,IAAI,GAAGH,OAAO,YAAYK,WAAW,GAAGL,OAAO,GAAG,IAAIK,WAAW,CAACL,OAAO,CAAC;GAC7E,MAAM;IACHG,IAAI,GAAGH,OAAO,YAAYM,WAAW,GAAGN,OAAO,GAAG,IAAIM,WAAW,CAACN,OAAO,CAAC;;EAG9E,IAAI,CAACO,cAAc,CAACC,UAAU,CAACN,SAAS,EAAED,MAAM,EAAEE,IAAI,CAAC;AAC3D,CAAC;AAEDP,YAAY,CAACC,SAAS,CAACY,yBAAyB,GAAG,UAAUC,YAAwB,EAAEC,IAAe,EAAEC,UAAmB,EAAEC,UAAmB;EAC5I,MAAMC,UAAU,GAAGJ,YAAgC;EACnD,IAAIE,UAAU,KAAKG,SAAS,EAAE;IAC1BH,UAAU,GAAG,CAAC;;EAGlB,IAAIT,IAAqB;EACzB,IAAIU,UAAU,KAAKE,SAAS,EAAE;IAC1B,IAAIJ,IAAI,YAAYK,KAAK,EAAE;MACvBb,IAAI,GAAG,IAAIc,YAAY,CAACN,IAAI,CAAC;KAChC,MAAM,IAAIA,IAAI,YAAYO,WAAW,EAAE;MACpCf,IAAI,GAAG,IAAIgB,UAAU,CAACR,IAAI,CAAC;KAC9B,MAAM;MACHR,IAAI,GAAGQ,IAAI;;IAEfE,UAAU,GAAGV,IAAI,CAACU,UAAU;GAC/B,MAAM;IACH,IAAIF,IAAI,YAAYK,KAAK,EAAE;MACvBb,IAAI,GAAG,IAAIc,YAAY,CAACN,IAAI,CAAC;KAChC,MAAM,IAAIA,IAAI,YAAYO,WAAW,EAAE;MACpCf,IAAI,GAAG,IAAIgB,UAAU,CAACR,IAAI,CAAC;KAC9B,MAAM;MACHR,IAAI,GAAGQ,IAAI;;;EAInB,IAAI,CAACJ,cAAc,CAACC,UAAU,CAACM,UAAU,EAAEF,UAAU,EAAET,IAAI,EAAE,CAAC,EAAEU,UAAU,CAAC;AAC/E,CAAC","names":["WebGPUEngine","prototype","updateDynamicIndexBuffer","indexBuffer","indices","offset","gpuBuffer","view","is32Bits","Uint32Array","Uint16Array","_bufferManager","setSubData","updateDynamicVertexBuffer","vertexBuffer","data","byteOffset","byteLength","dataBuffer","undefined","Array","Float32Array","ArrayBuffer","Uint8Array"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Engines/WebGPU/Extensions/engine.dynamicBuffer.ts"],"sourcesContent":["import type { DataBuffer } from \"../../../Buffers/dataBuffer\";\r\nimport type { WebGPUDataBuffer } from \"../../../Meshes/WebGPU/webgpuDataBuffer\";\r\nimport type { DataArray, IndicesArray } from \"../../../types\";\r\nimport { WebGPUEngine } from \"../../webgpuEngine\";\r\n\r\nWebGPUEngine.prototype.updateDynamicIndexBuffer = function (indexBuffer: DataBuffer, indices: IndicesArray, offset: number = 0): void {\r\n    const gpuBuffer = indexBuffer as WebGPUDataBuffer;\r\n\r\n    let view: ArrayBufferView;\r\n    if (indexBuffer.is32Bits) {\r\n        view = indices instanceof Uint32Array ? indices : new Uint32Array(indices);\r\n    } else {\r\n        view = indices instanceof Uint16Array ? indices : new Uint16Array(indices);\r\n    }\r\n\r\n    this._bufferManager.setSubData(gpuBuffer, offset, view);\r\n};\r\n\r\nWebGPUEngine.prototype.updateDynamicVertexBuffer = function (vertexBuffer: DataBuffer, data: DataArray, byteOffset?: number, byteLength?: number): void {\r\n    const dataBuffer = vertexBuffer as WebGPUDataBuffer;\r\n    if (byteOffset === undefined) {\r\n        byteOffset = 0;\r\n    }\r\n\r\n    let view: ArrayBufferView;\r\n    if (byteLength === undefined) {\r\n        if (data instanceof Array) {\r\n            view = new Float32Array(data);\r\n        } else if (data instanceof ArrayBuffer) {\r\n            view = new Uint8Array(data);\r\n        } else {\r\n            view = data;\r\n        }\r\n        byteLength = view.byteLength;\r\n    } else {\r\n        if (data instanceof Array) {\r\n            view = new Float32Array(data);\r\n        } else if (data instanceof ArrayBuffer) {\r\n            view = new Uint8Array(data);\r\n        } else {\r\n            view = data;\r\n        }\r\n    }\r\n\r\n    this._bufferManager.setSubData(dataBuffer, byteOffset, view, 0, byteLength);\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}