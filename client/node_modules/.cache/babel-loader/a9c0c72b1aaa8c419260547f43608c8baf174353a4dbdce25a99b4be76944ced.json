{"ast":null,"code":"/** @internal */\nexport class NativeDataStream {\n  constructor() {\n    const buffer = new ArrayBuffer(NativeDataStream.DEFAULT_BUFFER_SIZE);\n    this._uint32s = new Uint32Array(buffer);\n    this._int32s = new Int32Array(buffer);\n    this._float32s = new Float32Array(buffer);\n    this._length = NativeDataStream.DEFAULT_BUFFER_SIZE / 4;\n    this._position = 0;\n    this._nativeDataStream = new _native.NativeDataStream(() => {\n      this._flush();\n    });\n  }\n  writeUint32(value) {\n    this._flushIfNecessary(1);\n    this._uint32s[this._position++] = value;\n  }\n  writeInt32(value) {\n    this._flushIfNecessary(1);\n    this._int32s[this._position++] = value;\n  }\n  writeFloat32(value) {\n    this._flushIfNecessary(1);\n    this._float32s[this._position++] = value;\n  }\n  writeUint32Array(values) {\n    this._flushIfNecessary(1 + values.length);\n    this._uint32s[this._position++] = values.length;\n    this._uint32s.set(values, this._position);\n    this._position += values.length;\n  }\n  writeInt32Array(values) {\n    this._flushIfNecessary(1 + values.length);\n    this._uint32s[this._position++] = values.length;\n    this._int32s.set(values, this._position);\n    this._position += values.length;\n  }\n  writeFloat32Array(values) {\n    this._flushIfNecessary(1 + values.length);\n    this._uint32s[this._position++] = values.length;\n    this._float32s.set(values, this._position);\n    this._position += values.length;\n  }\n  writeNativeData(handle) {\n    this._flushIfNecessary(handle.length);\n    this._uint32s.set(handle, this._position);\n    this._position += handle.length;\n  }\n  writeBoolean(value) {\n    this.writeUint32(value ? 1 : 0);\n  }\n  _flushIfNecessary(required) {\n    if (this._position + required > this._length) {\n      this._flush();\n    }\n  }\n  _flush() {\n    this._nativeDataStream.writeBuffer(this._uint32s.buffer, this._position);\n    this._position = 0;\n  }\n}\n// Must be multiple of 4!\n// eslint-disable-next-line @typescript-eslint/naming-convention\nNativeDataStream.DEFAULT_BUFFER_SIZE = 65536;","map":{"version":3,"mappings":"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","names":["NativeDataStream","constructor","buffer","ArrayBuffer","DEFAULT_BUFFER_SIZE","_uint32s","Uint32Array","_int32s","Int32Array","_float32s","Float32Array","_length","_position","_nativeDataStream","_native","_flush","writeUint32","value","_flushIfNecessary","writeInt32","writeFloat32","writeUint32Array","values","length","set","writeInt32Array","writeFloat32Array","writeNativeData","handle","writeBoolean","required","writeBuffer"],"sourceRoot":"","sources":["../../../../../lts/core/generated/Engines/Native/nativeDataStream.ts"],"sourcesContent":["import type { INative, INativeDataStream } from \"./nativeInterfaces\";\r\n\r\ndeclare const _native: INative;\r\n\r\n/** @internal */\r\nexport type NativeData = Uint32Array;\r\n\r\n/** @internal */\r\nexport class NativeDataStream {\r\n    private readonly _uint32s: Uint32Array;\r\n    private readonly _int32s: Int32Array;\r\n    private readonly _float32s: Float32Array;\r\n    private readonly _length: number;\r\n    private _position: number;\r\n    private readonly _nativeDataStream: INativeDataStream;\r\n\r\n    // Must be multiple of 4!\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private static readonly DEFAULT_BUFFER_SIZE = 65536;\r\n\r\n    constructor() {\r\n        const buffer = new ArrayBuffer(NativeDataStream.DEFAULT_BUFFER_SIZE);\r\n        this._uint32s = new Uint32Array(buffer);\r\n        this._int32s = new Int32Array(buffer);\r\n        this._float32s = new Float32Array(buffer);\r\n\r\n        this._length = NativeDataStream.DEFAULT_BUFFER_SIZE / 4;\r\n        this._position = 0;\r\n\r\n        this._nativeDataStream = new _native.NativeDataStream(() => {\r\n            this._flush();\r\n        });\r\n    }\r\n\r\n    public writeUint32(value: number): void {\r\n        this._flushIfNecessary(1);\r\n        this._uint32s[this._position++] = value;\r\n    }\r\n\r\n    public writeInt32(value: number): void {\r\n        this._flushIfNecessary(1);\r\n        this._int32s[this._position++] = value;\r\n    }\r\n\r\n    public writeFloat32(value: number): void {\r\n        this._flushIfNecessary(1);\r\n        this._float32s[this._position++] = value;\r\n    }\r\n\r\n    public writeUint32Array(values: Uint32Array): void {\r\n        this._flushIfNecessary(1 + values.length);\r\n        this._uint32s[this._position++] = values.length;\r\n        this._uint32s.set(values, this._position);\r\n        this._position += values.length;\r\n    }\r\n\r\n    public writeInt32Array(values: Int32Array): void {\r\n        this._flushIfNecessary(1 + values.length);\r\n        this._uint32s[this._position++] = values.length;\r\n        this._int32s.set(values, this._position);\r\n        this._position += values.length;\r\n    }\r\n\r\n    public writeFloat32Array(values: Float32Array): void {\r\n        this._flushIfNecessary(1 + values.length);\r\n        this._uint32s[this._position++] = values.length;\r\n        this._float32s.set(values, this._position);\r\n        this._position += values.length;\r\n    }\r\n\r\n    public writeNativeData(handle: NativeData) {\r\n        this._flushIfNecessary(handle.length);\r\n        this._uint32s.set(handle, this._position);\r\n        this._position += handle.length;\r\n    }\r\n\r\n    public writeBoolean(value: boolean) {\r\n        this.writeUint32(value ? 1 : 0);\r\n    }\r\n\r\n    private _flushIfNecessary(required: number): void {\r\n        if (this._position + required > this._length) {\r\n            this._flush();\r\n        }\r\n    }\r\n\r\n    private _flush(): void {\r\n        this._nativeDataStream.writeBuffer(this._uint32s.buffer, this._position);\r\n        this._position = 0;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}