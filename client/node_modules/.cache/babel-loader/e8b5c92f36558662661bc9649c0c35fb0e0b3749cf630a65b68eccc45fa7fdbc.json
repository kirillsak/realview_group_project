{"ast":null,"code":"import { PostProcess } from \"./postProcess.js\";\nimport \"../Shaders/anaglyph.fragment.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * Postprocess used to generate anaglyphic rendering\n */\nexport class AnaglyphPostProcess extends PostProcess {\n  /**\n   * Creates a new AnaglyphPostProcess\n   * @param name defines postprocess name\n   * @param options defines creation options or target ratio scale\n   * @param rigCameras defines cameras using this postprocess\n   * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\n   * @param engine defines hosting engine\n   * @param reusable defines if the postprocess will be reused multiple times per frame\n   */\n  constructor(name, options, rigCameras, samplingMode, engine, reusable) {\n    super(name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable);\n    this._passedProcess = rigCameras[0]._rigPostProcess;\n    this.onApplyObservable.add(effect => {\n      effect.setTextureFromPostProcess(\"leftSampler\", this._passedProcess);\n    });\n  }\n  /**\n   * Gets a string identifying the name of the class\n   * @returns \"AnaglyphPostProcess\" string\n   */\n  getClassName() {\n    return \"AnaglyphPostProcess\";\n  }\n}\nRegisterClass(\"BABYLON.AnaglyphPostProcess\", AnaglyphPostProcess);","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,kBAAgB;AAI5C,OAAO,iCAA+B;AACtC,SAASC,aAAa,QAAQ,sBAAoB;AAElD;;;AAGA,OAAM,MAAOC,mBAAoB,SAAQF,WAAW;EAWhD;;;;;;;;;EASAG,YAAYC,IAAY,EAAEC,OAAoC,EAAEC,UAAoB,EAAEC,YAAqB,EAAEC,MAAe,EAAEC,QAAkB;IAC5I,KAAK,CAACL,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,aAAa,CAAC,EAAEC,OAAO,EAAEC,UAAU,CAAC,CAAC,CAAC,EAAEC,YAAY,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IACtG,IAAI,CAACC,cAAc,GAAGJ,UAAU,CAAC,CAAC,CAAC,CAACK,eAAe;IAEnD,IAAI,CAACC,iBAAiB,CAACC,GAAG,CAAEC,MAAc,IAAI;MAC1CA,MAAM,CAACC,yBAAyB,CAAC,aAAa,EAAE,IAAI,CAACL,cAAc,CAAC;IACxE,CAAC,CAAC;EACN;EAxBA;;;;EAIOM,YAAY;IACf,OAAO,qBAAqB;EAChC;;AAqBJf,aAAa,CAAC,6BAA6B,EAAEC,mBAAmB,CAAC","names":["PostProcess","RegisterClass","AnaglyphPostProcess","constructor","name","options","rigCameras","samplingMode","engine","reusable","_passedProcess","_rigPostProcess","onApplyObservable","add","effect","setTextureFromPostProcess","getClassName"],"sourceRoot":"","sources":["../../../../lts/core/generated/PostProcesses/anaglyphPostProcess.ts"],"sourcesContent":["import type { Nullable } from \"../types\";\r\nimport type { Engine } from \"../Engines/engine\";\r\nimport type { PostProcessOptions } from \"./postProcess\";\r\nimport { PostProcess } from \"./postProcess\";\r\nimport type { Camera } from \"../Cameras/camera\";\r\nimport type { Effect } from \"../Materials/effect\";\r\n\r\nimport \"../Shaders/anaglyph.fragment\";\r\nimport { RegisterClass } from \"../Misc/typeStore\";\r\n\r\n/**\r\n * Postprocess used to generate anaglyphic rendering\r\n */\r\nexport class AnaglyphPostProcess extends PostProcess {\r\n    private _passedProcess: Nullable<PostProcess>;\r\n\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"AnaglyphPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphPostProcess\";\r\n    }\r\n\r\n    /**\r\n     * Creates a new AnaglyphPostProcess\r\n     * @param name defines postprocess name\r\n     * @param options defines creation options or target ratio scale\r\n     * @param rigCameras defines cameras using this postprocess\r\n     * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\r\n     * @param engine defines hosting engine\r\n     * @param reusable defines if the postprocess will be reused multiple times per frame\r\n     */\r\n    constructor(name: string, options: number | PostProcessOptions, rigCameras: Camera[], samplingMode?: number, engine?: Engine, reusable?: boolean) {\r\n        super(name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable);\r\n        this._passedProcess = rigCameras[0]._rigPostProcess;\r\n\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            effect.setTextureFromPostProcess(\"leftSampler\", this._passedProcess);\r\n        });\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.AnaglyphPostProcess\", AnaglyphPostProcess);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}