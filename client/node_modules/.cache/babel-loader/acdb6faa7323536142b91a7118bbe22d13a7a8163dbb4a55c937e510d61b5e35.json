{"ast":null,"code":"// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore.js\";\nconst name = \"bakedVertexAnimationDeclaration\";\nconst shader = `#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\nuniform bakedVertexAnimationTime: f32;\nuniform bakedVertexAnimationTextureSizeInverted: vec2<f32>;\nuniform bakedVertexAnimationSettings: vec4<f32>;\nvar bakedVertexAnimationTexture : texture_2d<f32>;\n#ifdef INSTANCES\nattribute bakedVertexAnimationSettingsInstanced : vec4<f32>;\n#endif\nfn readMatrixFromRawSamplerVAT(smp : texture_2d<f32>,index : f32,frame : f32)->mat4x4<f32>\n{\nlet offset=i32(index)*4;\nlet frameUV=i32(frame);\nlet m0=textureLoad(smp,vec2<i32>(offset+0,frameUV),0);\nlet m1=textureLoad(smp,vec2<i32>(offset+1,frameUV),0);\nlet m2=textureLoad(smp,vec2<i32>(offset+2,frameUV),0);\nlet m3=textureLoad(smp,vec2<i32>(offset+3,frameUV),0);\nreturn mat4x4<f32>(m0,m1,m2,m3);\n}\n#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @internal */\nexport const bakedVertexAnimationDeclaration = {\n  name,\n  shader\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,8BAA4B;AAExD,MAAMC,IAAI,GAAG,iCAAiC;AAC9C,MAAMC,MAAM,GAAG;;;;;;;;;;;;;;;;;;;CAmBd;AACD;AACAF,WAAW,CAACG,wBAAwB,CAACF,IAAI,CAAC,GAAGC,MAAM;AACnD;AACA,OAAO,MAAME,+BAA+B,GAAG;EAAEH,IAAI;EAAEC;AAAM,CAAE","names":["ShaderStore","name","shader","IncludesShadersStoreWGSL","bakedVertexAnimationDeclaration"],"sourceRoot":"","sources":["../../../../../lts/core/generated/ShadersWGSL/ShadersInclude/bakedVertexAnimationDeclaration.ts"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../../Engines/shaderStore\";\n\nconst name = \"bakedVertexAnimationDeclaration\";\nconst shader = `#ifdef BAKED_VERTEX_ANIMATION_TEXTURE\nuniform bakedVertexAnimationTime: f32;\runiform bakedVertexAnimationTextureSizeInverted: vec2<f32>;\runiform bakedVertexAnimationSettings: vec4<f32>;\rvar bakedVertexAnimationTexture : texture_2d<f32>;\r#ifdef INSTANCES\nattribute bakedVertexAnimationSettingsInstanced : vec4<f32>;\r#endif\nfn readMatrixFromRawSamplerVAT(smp : texture_2d<f32>,index : f32,frame : f32)->mat4x4<f32>\r{\rlet offset=i32(index)*4;\rlet frameUV=i32(frame);\rlet m0=textureLoad(smp,vec2<i32>(offset+0,frameUV),0);\rlet m1=textureLoad(smp,vec2<i32>(offset+1,frameUV),0);\rlet m2=textureLoad(smp,vec2<i32>(offset+2,frameUV),0);\rlet m3=textureLoad(smp,vec2<i32>(offset+3,frameUV),0);\rreturn mat4x4<f32>(m0,m1,m2,m3);\r}\r#endif\n`;\n// Sideeffect\nShaderStore.IncludesShadersStoreWGSL[name] = shader;\n/** @internal */\nexport const bakedVertexAnimationDeclaration = { name, shader };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}