{"ast":null,"code":"/**\n * Class used to define a retry strategy when error happens while loading assets\n */\nexport class RetryStrategy {\n  /**\n   * Function used to defines an exponential back off strategy\n   * @param maxRetries defines the maximum number of retries (3 by default)\n   * @param baseInterval defines the interval between retries\n   * @returns the strategy function to use\n   */\n  static ExponentialBackoff(maxRetries = 3, baseInterval = 500) {\n    return (url, request, retryIndex) => {\n      if (request.status !== 0 || retryIndex >= maxRetries || url.indexOf(\"file:\") !== -1) {\n        return -1;\n      }\n      return Math.pow(2, retryIndex) * baseInterval;\n    };\n  }\n}","map":{"version":3,"mappings":"AAEA;;;AAGA,OAAM,MAAOA,aAAa;EACtB;;;;;;EAMO,OAAOC,kBAAkB,CAACC,UAAU,GAAG,CAAC,EAAEC,YAAY,GAAG,GAAG;IAC/D,OAAO,CAACC,GAAW,EAAEC,OAAmB,EAAEC,UAAkB,KAAY;MACpE,IAAID,OAAO,CAACE,MAAM,KAAK,CAAC,IAAID,UAAU,IAAIJ,UAAU,IAAIE,GAAG,CAACI,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;QACjF,OAAO,CAAC,CAAC;;MAGb,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,UAAU,CAAC,GAAGH,YAAY;IACjD,CAAC;EACL","names":["RetryStrategy","ExponentialBackoff","maxRetries","baseInterval","url","request","retryIndex","status","indexOf","Math","pow"],"sourceRoot":"","sources":["../../../../lts/core/generated/Misc/retryStrategy.ts"],"sourcesContent":["import type { WebRequest } from \"./webRequest\";\r\n\r\n/**\r\n * Class used to define a retry strategy when error happens while loading assets\r\n */\r\nexport class RetryStrategy {\r\n    /**\r\n     * Function used to defines an exponential back off strategy\r\n     * @param maxRetries defines the maximum number of retries (3 by default)\r\n     * @param baseInterval defines the interval between retries\r\n     * @returns the strategy function to use\r\n     */\r\n    public static ExponentialBackoff(maxRetries = 3, baseInterval = 500) {\r\n        return (url: string, request: WebRequest, retryIndex: number): number => {\r\n            if (request.status !== 0 || retryIndex >= maxRetries || url.indexOf(\"file:\") !== -1) {\r\n                return -1;\r\n            }\r\n\r\n            return Math.pow(2, retryIndex) * baseInterval;\r\n        };\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}