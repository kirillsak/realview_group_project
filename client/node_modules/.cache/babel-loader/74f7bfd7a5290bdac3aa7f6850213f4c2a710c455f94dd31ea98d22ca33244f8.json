{"ast":null,"code":"/** @internal */\nexport class DrawWrapper {\n  constructor(engine, createMaterialContext = true) {\n    this.effect = null;\n    this.defines = null;\n    this.drawContext = engine.createDrawContext();\n    if (createMaterialContext) {\n      this.materialContext = engine.createMaterialContext();\n    }\n  }\n  static IsWrapper(effect) {\n    return effect.getPipelineContext === undefined;\n  }\n  static GetEffect(effect) {\n    return effect.getPipelineContext === undefined ? effect.effect : effect;\n  }\n  setEffect(effect, defines, resetContext = true) {\n    var _a;\n    this.effect = effect;\n    if (defines !== undefined) {\n      this.defines = defines;\n    }\n    if (resetContext) {\n      (_a = this.drawContext) === null || _a === void 0 ? void 0 : _a.reset();\n    }\n  }\n  dispose() {\n    var _a;\n    (_a = this.drawContext) === null || _a === void 0 ? void 0 : _a.dispose();\n  }\n}","map":{"version":3,"mappings":"AAQA;AACA,OAAM,MAAOA,WAAW;EAcpBC,YAAYC,MAAkB,EAAEC,qBAAqB,GAAG,IAAI;IACxD,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,WAAW,GAAGJ,MAAM,CAACK,iBAAiB,EAAE;IAC7C,IAAIJ,qBAAqB,EAAE;MACvB,IAAI,CAACK,eAAe,GAAGN,MAAM,CAACC,qBAAqB,EAAE;;EAE7D;EAfO,OAAOM,SAAS,CAACL,MAA4B;IAChD,OAAQA,MAAiB,CAACM,kBAAkB,KAAKC,SAAS;EAC9D;EAEO,OAAOC,SAAS,CAACR,MAA4B;IAChD,OAAQA,MAAiB,CAACM,kBAAkB,KAAKC,SAAS,GAAIP,MAAsB,CAACA,MAAM,GAAIA,MAAiB;EACpH;EAWOS,SAAS,CAACT,MAAwB,EAAEC,OAA4C,EAAES,YAAY,GAAG,IAAI;;IACxG,IAAI,CAACV,MAAM,GAAGA,MAAM;IACpB,IAAIC,OAAO,KAAKM,SAAS,EAAE;MACvB,IAAI,CAACN,OAAO,GAAGA,OAAO;;IAE1B,IAAIS,YAAY,EAAE;MACd,UAAI,CAACR,WAAW,0CAAES,KAAK,EAAE;;EAEjC;EAEOC,OAAO;;IACV,UAAI,CAACV,WAAW,0CAAEU,OAAO,EAAE;EAC/B","names":["DrawWrapper","constructor","engine","createMaterialContext","effect","defines","drawContext","createDrawContext","materialContext","IsWrapper","getPipelineContext","undefined","GetEffect","setEffect","resetContext","reset","dispose"],"sourceRoot":"","sources":["../../../../lts/core/generated/Materials/drawWrapper.ts"],"sourcesContent":["import type { IDrawContext } from \"../Engines/IDrawContext\";\r\nimport type { IMaterialContext } from \"../Engines/IMaterialContext\";\r\nimport type { Nullable } from \"../types\";\r\n\r\ndeclare type ThinEngine = import(\"../Engines/thinEngine\").ThinEngine;\r\ndeclare type Effect = import(\"./effect\").Effect;\r\ndeclare type MaterialDefines = import(\"./materialDefines\").MaterialDefines;\r\n\r\n/** @internal */\r\nexport class DrawWrapper {\r\n    public effect: Nullable<Effect>;\r\n    public defines: Nullable<string | MaterialDefines>;\r\n    public materialContext?: IMaterialContext;\r\n    public drawContext?: IDrawContext;\r\n\r\n    public static IsWrapper(effect: Effect | DrawWrapper): effect is DrawWrapper {\r\n        return (effect as Effect).getPipelineContext === undefined;\r\n    }\r\n\r\n    public static GetEffect(effect: Effect | DrawWrapper): Nullable<Effect> {\r\n        return (effect as Effect).getPipelineContext === undefined ? (effect as DrawWrapper).effect : (effect as Effect);\r\n    }\r\n\r\n    constructor(engine: ThinEngine, createMaterialContext = true) {\r\n        this.effect = null;\r\n        this.defines = null;\r\n        this.drawContext = engine.createDrawContext();\r\n        if (createMaterialContext) {\r\n            this.materialContext = engine.createMaterialContext();\r\n        }\r\n    }\r\n\r\n    public setEffect(effect: Nullable<Effect>, defines?: Nullable<string | MaterialDefines>, resetContext = true): void {\r\n        this.effect = effect;\r\n        if (defines !== undefined) {\r\n            this.defines = defines;\r\n        }\r\n        if (resetContext) {\r\n            this.drawContext?.reset();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.drawContext?.dispose();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}