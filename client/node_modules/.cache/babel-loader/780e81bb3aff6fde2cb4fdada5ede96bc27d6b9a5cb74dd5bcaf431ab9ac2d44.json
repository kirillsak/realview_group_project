{"ast":null,"code":"import { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to expand a Vector3/4 into 4 outputs (one for each component)\n */\nexport class VectorSplitterBlock extends NodeMaterialBlock {\n  /**\n   * Create a new VectorSplitterBlock\n   * @param name defines the block name\n   */\n  constructor(name) {\n    super(name, NodeMaterialBlockTargets.Neutral);\n    this.registerInput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\n    this.registerInput(\"xyz \", NodeMaterialBlockConnectionPointTypes.Vector3, true);\n    this.registerInput(\"xy \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\n    this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\n    this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2);\n    this.registerOutput(\"zw\", NodeMaterialBlockConnectionPointTypes.Vector2);\n    this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n    this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n    this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float);\n    this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float);\n    this.inputsAreExclusive = true;\n  }\n  /**\n   * Gets the current class name\n   * @returns the class name\n   */\n  getClassName() {\n    return \"VectorSplitterBlock\";\n  }\n  /**\n   * Gets the xyzw component (input)\n   */\n  get xyzw() {\n    return this._inputs[0];\n  }\n  /**\n   * Gets the xyz component (input)\n   */\n  get xyzIn() {\n    return this._inputs[1];\n  }\n  /**\n   * Gets the xy component (input)\n   */\n  get xyIn() {\n    return this._inputs[2];\n  }\n  /**\n   * Gets the xyz component (output)\n   */\n  get xyzOut() {\n    return this._outputs[0];\n  }\n  /**\n   * Gets the xy component (output)\n   */\n  get xyOut() {\n    return this._outputs[1];\n  }\n  /**\n   * Gets the zw component (output)\n   */\n  get zw() {\n    return this._outputs[2];\n  }\n  /**\n   * Gets the x component (output)\n   */\n  get x() {\n    return this._outputs[3];\n  }\n  /**\n   * Gets the y component (output)\n   */\n  get y() {\n    return this._outputs[4];\n  }\n  /**\n   * Gets the z component (output)\n   */\n  get z() {\n    return this._outputs[5];\n  }\n  /**\n   * Gets the w component (output)\n   */\n  get w() {\n    return this._outputs[6];\n  }\n  _inputRename(name) {\n    switch (name) {\n      case \"xy \":\n        return \"xyIn\";\n      case \"xyz \":\n        return \"xyzIn\";\n      default:\n        return name;\n    }\n  }\n  _outputRename(name) {\n    switch (name) {\n      case \"xy\":\n        return \"xyOut\";\n      case \"xyz\":\n        return \"xyzOut\";\n      default:\n        return name;\n    }\n  }\n  _buildBlock(state) {\n    super._buildBlock(state);\n    const input = this.xyzw.isConnected ? this.xyzw : this.xyzIn.isConnected ? this.xyzIn : this.xyIn;\n    const xyzOutput = this._outputs[0];\n    const xyOutput = this._outputs[1];\n    const zwOutput = this._outputs[2];\n    const xOutput = this._outputs[3];\n    const yOutput = this._outputs[4];\n    const zOutput = this._outputs[5];\n    const wOutput = this._outputs[6];\n    if (xyzOutput.hasEndpoints) {\n      if (input === this.xyIn) {\n        state.compilationString += this._declareOutput(xyzOutput, state) + ` = vec3(${input.associatedVariableName}, 0.0);\\r\\n`;\n      } else {\n        state.compilationString += this._declareOutput(xyzOutput, state) + ` = ${input.associatedVariableName}.xyz;\\r\\n`;\n      }\n    }\n    if (zwOutput.hasEndpoints && this.xyzw.isConnected) {\n      state.compilationString += this._declareOutput(zwOutput, state) + ` = ${this.xyzw.associatedVariableName}.zw;\\r\\n`;\n    }\n    if (xyOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(xyOutput, state) + ` = ${input.associatedVariableName}.xy;\\r\\n`;\n    }\n    if (xOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(xOutput, state) + ` = ${input.associatedVariableName}.x;\\r\\n`;\n    }\n    if (yOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(yOutput, state) + ` = ${input.associatedVariableName}.y;\\r\\n`;\n    }\n    if (zOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(zOutput, state) + ` = ${input.associatedVariableName}.z;\\r\\n`;\n    }\n    if (wOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(wOutput, state) + ` = ${input.associatedVariableName}.w;\\r\\n`;\n    }\n    return this;\n  }\n}\nRegisterClass(\"BABYLON.VectorSplitterBlock\", VectorSplitterBlock);","map":{"version":3,"mappings":"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","names":["NodeMaterialBlock","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","RegisterClass","VectorSplitterBlock","constructor","name","Neutral","registerInput","Vector4","Vector3","Vector2","registerOutput","Float","inputsAreExclusive","getClassName","xyzw","_inputs","xyzIn","xyIn","xyzOut","_outputs","xyOut","zw","x","y","z","w","_inputRename","_outputRename","_buildBlock","state","input","isConnected","xyzOutput","xyOutput","zwOutput","xOutput","yOutput","zOutput","wOutput","hasEndpoints","compilationString","_declareOutput","associatedVariableName"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Blocks/vectorSplitterBlock.ts"],"sourcesContent":["import { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes\";\r\nimport type { NodeMaterialBuildState } from \"../nodeMaterialBuildState\";\r\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets\";\r\nimport type { NodeMaterialConnectionPoint } from \"../nodeMaterialBlockConnectionPoint\";\r\nimport { RegisterClass } from \"../../../Misc/typeStore\";\r\n\r\n/**\r\n * Block used to expand a Vector3/4 into 4 outputs (one for each component)\r\n */\r\nexport class VectorSplitterBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new VectorSplitterBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\r\n        this.registerInput(\"xyz \", NodeMaterialBlockConnectionPointTypes.Vector3, true);\r\n        this.registerInput(\"xy \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\r\n\r\n        this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this.registerOutput(\"zw\", NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float);\r\n\r\n        this.inputsAreExclusive = true;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"VectorSplitterBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the xyzw component (input)\r\n     */\r\n    public get xyzw(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component (input)\r\n     */\r\n    public get xyzIn(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component (input)\r\n     */\r\n    public get xyIn(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component (output)\r\n     */\r\n    public get xyzOut(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component (output)\r\n     */\r\n    public get xyOut(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the zw component (output)\r\n     */\r\n    public get zw(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the x component (output)\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the y component (output)\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the z component (output)\r\n     */\r\n    public get z(): NodeMaterialConnectionPoint {\r\n        return this._outputs[5];\r\n    }\r\n\r\n    /**\r\n     * Gets the w component (output)\r\n     */\r\n    public get w(): NodeMaterialConnectionPoint {\r\n        return this._outputs[6];\r\n    }\r\n\r\n    protected _inputRename(name: string) {\r\n        switch (name) {\r\n            case \"xy \":\r\n                return \"xyIn\";\r\n            case \"xyz \":\r\n                return \"xyzIn\";\r\n            default:\r\n                return name;\r\n        }\r\n    }\r\n\r\n    protected _outputRename(name: string) {\r\n        switch (name) {\r\n            case \"xy\":\r\n                return \"xyOut\";\r\n            case \"xyz\":\r\n                return \"xyzOut\";\r\n            default:\r\n                return name;\r\n        }\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        const input = this.xyzw.isConnected ? this.xyzw : this.xyzIn.isConnected ? this.xyzIn : this.xyIn;\r\n\r\n        const xyzOutput = this._outputs[0];\r\n        const xyOutput = this._outputs[1];\r\n        const zwOutput = this._outputs[2];\r\n        const xOutput = this._outputs[3];\r\n        const yOutput = this._outputs[4];\r\n        const zOutput = this._outputs[5];\r\n        const wOutput = this._outputs[6];\r\n\r\n        if (xyzOutput.hasEndpoints) {\r\n            if (input === this.xyIn) {\r\n                state.compilationString += this._declareOutput(xyzOutput, state) + ` = vec3(${input.associatedVariableName}, 0.0);\\r\\n`;\r\n            } else {\r\n                state.compilationString += this._declareOutput(xyzOutput, state) + ` = ${input.associatedVariableName}.xyz;\\r\\n`;\r\n            }\r\n        }\r\n        if (zwOutput.hasEndpoints && this.xyzw.isConnected) {\r\n            state.compilationString += this._declareOutput(zwOutput, state) + ` = ${this.xyzw.associatedVariableName}.zw;\\r\\n`;\r\n        }\r\n        if (xyOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(xyOutput, state) + ` = ${input.associatedVariableName}.xy;\\r\\n`;\r\n        }\r\n        if (xOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(xOutput, state) + ` = ${input.associatedVariableName}.x;\\r\\n`;\r\n        }\r\n        if (yOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(yOutput, state) + ` = ${input.associatedVariableName}.y;\\r\\n`;\r\n        }\r\n        if (zOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(zOutput, state) + ` = ${input.associatedVariableName}.z;\\r\\n`;\r\n        }\r\n        if (wOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(wOutput, state) + ` = ${input.associatedVariableName}.w;\\r\\n`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.VectorSplitterBlock\", VectorSplitterBlock);\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}