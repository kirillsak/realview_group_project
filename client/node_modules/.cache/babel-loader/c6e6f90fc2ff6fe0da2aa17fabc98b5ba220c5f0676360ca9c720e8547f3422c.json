{"ast":null,"code":"/**\n * Root class for all node material optimizers\n */\nexport class NodeMaterialOptimizer {\n  /**\n   * Function used to optimize a NodeMaterial graph\n   * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\n   * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\n   */\n  optimize(_vertexOutputNodes, _fragmentOutputNodes) {\n    // Do nothing by default\n  }\n}","map":{"version":3,"mappings":"AAEA;;;AAGA,OAAM,MAAOA,qBAAqB;EAC9B;;;;;EAKOC,QAAQ,CAACC,kBAAuC,EAAEC,oBAAyC;IAC9F;EAAA","names":["NodeMaterialOptimizer","optimize","_vertexOutputNodes","_fragmentOutputNodes"],"sourceRoot":"","sources":["../../../../../../lts/core/generated/Materials/Node/Optimizers/nodeMaterialOptimizer.ts"],"sourcesContent":["import type { NodeMaterialBlock } from \"../nodeMaterialBlock\";\r\n\r\n/**\r\n * Root class for all node material optimizers\r\n */\r\nexport class NodeMaterialOptimizer {\r\n    /**\r\n     * Function used to optimize a NodeMaterial graph\r\n     * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\r\n     * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\r\n     */\r\n    public optimize(_vertexOutputNodes: NodeMaterialBlock[], _fragmentOutputNodes: NodeMaterialBlock[]) {\r\n        // Do nothing by default\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}